Terminals unused in grammar

    tRETURN
    tCONST
    tERROR


State 95 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ε
    2        | main_function
    3        | function_list main_function

    4 function_list: function
    5              | function_list function

    6 $@1: ε

    7 $@2: ε

    8 function: function_type tID $@1 tLPAR parameter_list tRPAR tLBRACE body tRBRACE $@2

    9 $@3: ε

   10 main_function: function_type tMAIN $@3 tLPAR parameter_list tRPAR tLBRACE body tRBRACE

   11 function_type: tVOID
   12              | tINT

   13 parameter_list: ε
   14               | tVOID
   15               | parameter
   16               | parameter_list tCOMMA parameter

   17 parameter: parameter_type tID
   18          | parameter_type tID tASSIGN equality_expression

   19 parameter_type: tINT

   20 body: ε
   21     | declaration_list
   22     | instruction_list
   23     | declaration_list instruction_list

   24 instruction_list: instruction
   25                 | instruction_list instruction

   26 declaration_list: declaration
   27                 | declaration_list declaration

   28 declaration: declaration_type identifiers_list tSEMI

   29 declaration_type: tINT

   30 identifiers_list: tID
   31                 | tID tASSIGN add_sub
   32                 | identifiers_list tCOMMA tID
   33                 | identifiers_list tCOMMA tID tASSIGN add_sub

   34 instruction: assignment_list
   35            | ifblock
   36            | whileblock
   37            | printblock

   38 assignment_list: tID tASSIGN add_sub tSEMI
   39                | tID tASSIGN add_sub tCOMMA assignment_list

   40 $@4: ε

   41 ifblock: tIF tLPAR condition tRPAR action-if tLBRACE body tRBRACE action-getIndex $@4

   42 $@5: ε

   43 ifblock: tIF tLPAR condition tRPAR action-if tLBRACE body tRBRACE action-getIndex tELSE action-else tLBRACE body tRBRACE action-getIndex $@5

   44 $@6: ε

   45 ifblock: tIF tLPAR condition tRPAR action-if tLBRACE body tRBRACE action-getIndex tELSE ifblock $@6

   46 action-if: ε

   47 action-else: ε

   48 action-getIndex: ε

   49 $@7: ε

   50 $@8: ε

   51 whileblock: tWHILE tLPAR condition tRPAR action-while tLBRACE body tRBRACE $@7 $@8

   52 action-while: ε

   53 printblock: tPRINT tLPAR tID tRPAR tSEMI

   54 condition: equality_expression
   55          | condition tAND condition
   56          | condition tOR condition
   57          | tNOT condition

   58 equality_expression: compare
   59                    | equality_expression tEQ compare
   60                    | equality_expression tNE compare

   61 compare: add_sub
   62        | compare tLT add_sub
   63        | compare tGT add_sub
   64        | compare tLE add_sub
   65        | compare tGE add_sub

   66 add_sub: div_mul
   67        | add_sub tADD div_mul
   68        | add_sub tSUB div_mul

   69 div_mul: single_value
   70        | div_mul tMUL single_value
   71        | div_mul tDIV single_value

   72 single_value: tID
   73             | tNB


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tADD (258) 67
    tSUB (259) 68
    tMUL (260) 70
    tDIV (261) 71
    tLT (262) 62
    tGT (263) 63
    tNE (264) 60
    tEQ (265) 59
    tGE (266) 65
    tLE (267) 64
    tASSIGN (268) 18 31 33 38 39
    tAND (269) 55
    tOR (270) 56
    tNOT (271) 57
    tLBRACE (272) 8 10 41 43 45 51
    tRBRACE (273) 8 10 41 43 45 51
    tLPAR (274) 8 10 41 43 45 51 53
    tRPAR (275) 8 10 41 43 45 51 53
    tSEMI (276) 28 38 53
    tCOMMA (277) 16 32 33 39
    tIF (278) 41 43 45
    tELSE (279) 43 45
    tWHILE (280) 51
    tPRINT (281) 53
    tRETURN (282)
    tINT (283) 12 19 29
    tVOID (284) 11 14
    tMAIN (285) 10
    tCONST (286)
    tERROR (287)
    tNB <nb> (288) 73
    tID <var> (289) 8 17 18 30 31 32 33 38 39 53 72


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    program (36)
        on left: 1 2 3
        on right: 0
    function_list (37)
        on left: 4 5
        on right: 3 5
    function (38)
        on left: 8
        on right: 4 5
    $@1 (39)
        on left: 6
        on right: 8
    $@2 (40)
        on left: 7
        on right: 8
    main_function (41)
        on left: 10
        on right: 2 3
    $@3 (42)
        on left: 9
        on right: 10
    function_type (43)
        on left: 11 12
        on right: 8 10
    parameter_list (44)
        on left: 13 14 15 16
        on right: 8 10 16
    parameter (45)
        on left: 17 18
        on right: 15 16
    parameter_type (46)
        on left: 19
        on right: 17 18
    body (47)
        on left: 20 21 22 23
        on right: 8 10 41 43 45 51
    instruction_list (48)
        on left: 24 25
        on right: 22 23 25
    declaration_list (49)
        on left: 26 27
        on right: 21 23 27
    declaration (50)
        on left: 28
        on right: 26 27
    declaration_type (51)
        on left: 29
        on right: 28
    identifiers_list (52)
        on left: 30 31 32 33
        on right: 28 32 33
    instruction (53)
        on left: 34 35 36 37
        on right: 24 25
    assignment_list (54)
        on left: 38 39
        on right: 34 39
    ifblock (55)
        on left: 41 43 45
        on right: 35 45
    $@4 (56)
        on left: 40
        on right: 41
    $@5 (57)
        on left: 42
        on right: 43
    $@6 (58)
        on left: 44
        on right: 45
    action-if <nb> (59)
        on left: 46
        on right: 41 43 45
    action-else <nb> (60)
        on left: 47
        on right: 43
    action-getIndex <nb> (61)
        on left: 48
        on right: 41 43 45
    whileblock (62)
        on left: 51
        on right: 36
    $@7 (63)
        on left: 49
        on right: 51
    $@8 (64)
        on left: 50
        on right: 51
    action-while <nb> (65)
        on left: 52
        on right: 51
    printblock (66)
        on left: 53
        on right: 37
    condition (67)
        on left: 54 55 56 57
        on right: 41 43 45 51 55 56 57
    equality_expression (68)
        on left: 58 59 60
        on right: 18 54 59 60
    compare (69)
        on left: 61 62 63 64 65
        on right: 58 59 60 62 63 64 65
    add_sub <nb> (70)
        on left: 66 67 68
        on right: 31 33 38 39 61 62 63 64 65 67 68
    div_mul <nb> (71)
        on left: 69 70 71
        on right: 66 67 68 70 71
    single_value <nb> (72)
        on left: 72 73
        on right: 69 70 71


State 0

    0 $accept: • program $end

    tINT   shift, and go to state 1
    tVOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    program        go to state 3
    function_list  go to state 4
    function       go to state 5
    main_function  go to state 6
    function_type  go to state 7


State 1

   12 function_type: tINT •

    $default  reduce using rule 12 (function_type)


State 2

   11 function_type: tVOID •

    $default  reduce using rule 11 (function_type)


State 3

    0 $accept: program • $end

    $end  shift, and go to state 8


State 4

    3 program: function_list • main_function
    5 function_list: function_list • function

    tINT   shift, and go to state 1
    tVOID  shift, and go to state 2

    function       go to state 9
    main_function  go to state 10
    function_type  go to state 7


State 5

    4 function_list: function •

    $default  reduce using rule 4 (function_list)


State 6

    2 program: main_function •

    $default  reduce using rule 2 (program)


State 7

    8 function: function_type • tID $@1 tLPAR parameter_list tRPAR tLBRACE body tRBRACE $@2
   10 main_function: function_type • tMAIN $@3 tLPAR parameter_list tRPAR tLBRACE body tRBRACE

    tMAIN  shift, and go to state 11
    tID    shift, and go to state 12


State 8

    0 $accept: program $end •

    $default  accept


State 9

    5 function_list: function_list function •

    $default  reduce using rule 5 (function_list)


State 10

    3 program: function_list main_function •

    $default  reduce using rule 3 (program)


State 11

   10 main_function: function_type tMAIN • $@3 tLPAR parameter_list tRPAR tLBRACE body tRBRACE

    $default  reduce using rule 9 ($@3)

    $@3  go to state 13


State 12

    8 function: function_type tID • $@1 tLPAR parameter_list tRPAR tLBRACE body tRBRACE $@2

    $default  reduce using rule 6 ($@1)

    $@1  go to state 14


State 13

   10 main_function: function_type tMAIN $@3 • tLPAR parameter_list tRPAR tLBRACE body tRBRACE

    tLPAR  shift, and go to state 15


State 14

    8 function: function_type tID $@1 • tLPAR parameter_list tRPAR tLBRACE body tRBRACE $@2

    tLPAR  shift, and go to state 16


State 15

   10 main_function: function_type tMAIN $@3 tLPAR • parameter_list tRPAR tLBRACE body tRBRACE

    tINT   shift, and go to state 17
    tVOID  shift, and go to state 18

    $default  reduce using rule 13 (parameter_list)

    parameter_list  go to state 19
    parameter       go to state 20
    parameter_type  go to state 21


State 16

    8 function: function_type tID $@1 tLPAR • parameter_list tRPAR tLBRACE body tRBRACE $@2

    tINT   shift, and go to state 17
    tVOID  shift, and go to state 18

    $default  reduce using rule 13 (parameter_list)

    parameter_list  go to state 22
    parameter       go to state 20
    parameter_type  go to state 21


State 17

   19 parameter_type: tINT •

    $default  reduce using rule 19 (parameter_type)


State 18

   14 parameter_list: tVOID •

    $default  reduce using rule 14 (parameter_list)


State 19

   10 main_function: function_type tMAIN $@3 tLPAR parameter_list • tRPAR tLBRACE body tRBRACE
   16 parameter_list: parameter_list • tCOMMA parameter

    tRPAR   shift, and go to state 23
    tCOMMA  shift, and go to state 24


State 20

   15 parameter_list: parameter •

    $default  reduce using rule 15 (parameter_list)


State 21

   17 parameter: parameter_type • tID
   18          | parameter_type • tID tASSIGN equality_expression

    tID  shift, and go to state 25


State 22

    8 function: function_type tID $@1 tLPAR parameter_list • tRPAR tLBRACE body tRBRACE $@2
   16 parameter_list: parameter_list • tCOMMA parameter

    tRPAR   shift, and go to state 26
    tCOMMA  shift, and go to state 24


State 23

   10 main_function: function_type tMAIN $@3 tLPAR parameter_list tRPAR • tLBRACE body tRBRACE

    tLBRACE  shift, and go to state 27


State 24

   16 parameter_list: parameter_list tCOMMA • parameter

    tINT  shift, and go to state 17

    parameter       go to state 28
    parameter_type  go to state 21


State 25

   17 parameter: parameter_type tID •
   18          | parameter_type tID • tASSIGN equality_expression

    tASSIGN  shift, and go to state 29

    $default  reduce using rule 17 (parameter)


State 26

    8 function: function_type tID $@1 tLPAR parameter_list tRPAR • tLBRACE body tRBRACE $@2

    tLBRACE  shift, and go to state 30


State 27

   10 main_function: function_type tMAIN $@3 tLPAR parameter_list tRPAR tLBRACE • body tRBRACE

    tIF     shift, and go to state 31
    tWHILE  shift, and go to state 32
    tPRINT  shift, and go to state 33
    tINT    shift, and go to state 34
    tID     shift, and go to state 35

    $default  reduce using rule 20 (body)

    body              go to state 36
    instruction_list  go to state 37
    declaration_list  go to state 38
    declaration       go to state 39
    declaration_type  go to state 40
    instruction       go to state 41
    assignment_list   go to state 42
    ifblock           go to state 43
    whileblock        go to state 44
    printblock        go to state 45


State 28

   16 parameter_list: parameter_list tCOMMA parameter •

    $default  reduce using rule 16 (parameter_list)


State 29

   18 parameter: parameter_type tID tASSIGN • equality_expression

    tNB  shift, and go to state 46
    tID  shift, and go to state 47

    equality_expression  go to state 48
    compare              go to state 49
    add_sub              go to state 50
    div_mul              go to state 51
    single_value         go to state 52


State 30

    8 function: function_type tID $@1 tLPAR parameter_list tRPAR tLBRACE • body tRBRACE $@2

    tIF     shift, and go to state 31
    tWHILE  shift, and go to state 32
    tPRINT  shift, and go to state 33
    tINT    shift, and go to state 34
    tID     shift, and go to state 35

    $default  reduce using rule 20 (body)

    body              go to state 53
    instruction_list  go to state 37
    declaration_list  go to state 38
    declaration       go to state 39
    declaration_type  go to state 40
    instruction       go to state 41
    assignment_list   go to state 42
    ifblock           go to state 43
    whileblock        go to state 44
    printblock        go to state 45


State 31

   41 ifblock: tIF • tLPAR condition tRPAR action-if tLBRACE body tRBRACE action-getIndex $@4
   43        | tIF • tLPAR condition tRPAR action-if tLBRACE body tRBRACE action-getIndex tELSE action-else tLBRACE body tRBRACE action-getIndex $@5
   45        | tIF • tLPAR condition tRPAR action-if tLBRACE body tRBRACE action-getIndex tELSE ifblock $@6

    tLPAR  shift, and go to state 54


State 32

   51 whileblock: tWHILE • tLPAR condition tRPAR action-while tLBRACE body tRBRACE $@7 $@8

    tLPAR  shift, and go to state 55


State 33

   53 printblock: tPRINT • tLPAR tID tRPAR tSEMI

    tLPAR  shift, and go to state 56


State 34

   29 declaration_type: tINT •

    $default  reduce using rule 29 (declaration_type)


State 35

   38 assignment_list: tID • tASSIGN add_sub tSEMI
   39                | tID • tASSIGN add_sub tCOMMA assignment_list

    tASSIGN  shift, and go to state 57


State 36

   10 main_function: function_type tMAIN $@3 tLPAR parameter_list tRPAR tLBRACE body • tRBRACE

    tRBRACE  shift, and go to state 58


State 37

   22 body: instruction_list •
   25 instruction_list: instruction_list • instruction

    tIF     shift, and go to state 31
    tWHILE  shift, and go to state 32
    tPRINT  shift, and go to state 33
    tID     shift, and go to state 35

    $default  reduce using rule 22 (body)

    instruction      go to state 59
    assignment_list  go to state 42
    ifblock          go to state 43
    whileblock       go to state 44
    printblock       go to state 45


State 38

   21 body: declaration_list •
   23     | declaration_list • instruction_list
   27 declaration_list: declaration_list • declaration

    tIF     shift, and go to state 31
    tWHILE  shift, and go to state 32
    tPRINT  shift, and go to state 33
    tINT    shift, and go to state 34
    tID     shift, and go to state 35

    $default  reduce using rule 21 (body)

    instruction_list  go to state 60
    declaration       go to state 61
    declaration_type  go to state 40
    instruction       go to state 41
    assignment_list   go to state 42
    ifblock           go to state 43
    whileblock        go to state 44
    printblock        go to state 45


State 39

   26 declaration_list: declaration •

    $default  reduce using rule 26 (declaration_list)


State 40

   28 declaration: declaration_type • identifiers_list tSEMI

    tID  shift, and go to state 62

    identifiers_list  go to state 63


State 41

   24 instruction_list: instruction •

    $default  reduce using rule 24 (instruction_list)


State 42

   34 instruction: assignment_list •

    $default  reduce using rule 34 (instruction)


State 43

   35 instruction: ifblock •

    $default  reduce using rule 35 (instruction)


State 44

   36 instruction: whileblock •

    $default  reduce using rule 36 (instruction)


State 45

   37 instruction: printblock •

    $default  reduce using rule 37 (instruction)


State 46

   73 single_value: tNB •

    $default  reduce using rule 73 (single_value)


State 47

   72 single_value: tID •

    $default  reduce using rule 72 (single_value)


State 48

   18 parameter: parameter_type tID tASSIGN equality_expression •
   59 equality_expression: equality_expression • tEQ compare
   60                    | equality_expression • tNE compare

    tNE  shift, and go to state 64
    tEQ  shift, and go to state 65

    $default  reduce using rule 18 (parameter)


State 49

   58 equality_expression: compare •
   62 compare: compare • tLT add_sub
   63        | compare • tGT add_sub
   64        | compare • tLE add_sub
   65        | compare • tGE add_sub

    tLT  shift, and go to state 66
    tGT  shift, and go to state 67
    tGE  shift, and go to state 68
    tLE  shift, and go to state 69

    $default  reduce using rule 58 (equality_expression)


State 50

   61 compare: add_sub •
   67 add_sub: add_sub • tADD div_mul
   68        | add_sub • tSUB div_mul

    tADD  shift, and go to state 70
    tSUB  shift, and go to state 71

    $default  reduce using rule 61 (compare)


State 51

   66 add_sub: div_mul •
   70 div_mul: div_mul • tMUL single_value
   71        | div_mul • tDIV single_value

    tMUL  shift, and go to state 72
    tDIV  shift, and go to state 73

    $default  reduce using rule 66 (add_sub)


State 52

   69 div_mul: single_value •

    $default  reduce using rule 69 (div_mul)


State 53

    8 function: function_type tID $@1 tLPAR parameter_list tRPAR tLBRACE body • tRBRACE $@2

    tRBRACE  shift, and go to state 74


State 54

   41 ifblock: tIF tLPAR • condition tRPAR action-if tLBRACE body tRBRACE action-getIndex $@4
   43        | tIF tLPAR • condition tRPAR action-if tLBRACE body tRBRACE action-getIndex tELSE action-else tLBRACE body tRBRACE action-getIndex $@5
   45        | tIF tLPAR • condition tRPAR action-if tLBRACE body tRBRACE action-getIndex tELSE ifblock $@6

    tNOT  shift, and go to state 75
    tNB   shift, and go to state 46
    tID   shift, and go to state 47

    condition            go to state 76
    equality_expression  go to state 77
    compare              go to state 49
    add_sub              go to state 50
    div_mul              go to state 51
    single_value         go to state 52


State 55

   51 whileblock: tWHILE tLPAR • condition tRPAR action-while tLBRACE body tRBRACE $@7 $@8

    tNOT  shift, and go to state 75
    tNB   shift, and go to state 46
    tID   shift, and go to state 47

    condition            go to state 78
    equality_expression  go to state 77
    compare              go to state 49
    add_sub              go to state 50
    div_mul              go to state 51
    single_value         go to state 52


State 56

   53 printblock: tPRINT tLPAR • tID tRPAR tSEMI

    tID  shift, and go to state 79


State 57

   38 assignment_list: tID tASSIGN • add_sub tSEMI
   39                | tID tASSIGN • add_sub tCOMMA assignment_list

    tNB  shift, and go to state 46
    tID  shift, and go to state 47

    add_sub       go to state 80
    div_mul       go to state 51
    single_value  go to state 52


State 58

   10 main_function: function_type tMAIN $@3 tLPAR parameter_list tRPAR tLBRACE body tRBRACE •

    $default  reduce using rule 10 (main_function)


State 59

   25 instruction_list: instruction_list instruction •

    $default  reduce using rule 25 (instruction_list)


State 60

   23 body: declaration_list instruction_list •
   25 instruction_list: instruction_list • instruction

    tIF     shift, and go to state 31
    tWHILE  shift, and go to state 32
    tPRINT  shift, and go to state 33
    tID     shift, and go to state 35

    $default  reduce using rule 23 (body)

    instruction      go to state 59
    assignment_list  go to state 42
    ifblock          go to state 43
    whileblock       go to state 44
    printblock       go to state 45


State 61

   27 declaration_list: declaration_list declaration •

    $default  reduce using rule 27 (declaration_list)


State 62

   30 identifiers_list: tID •
   31                 | tID • tASSIGN add_sub

    tASSIGN  shift, and go to state 81

    $default  reduce using rule 30 (identifiers_list)


State 63

   28 declaration: declaration_type identifiers_list • tSEMI
   32 identifiers_list: identifiers_list • tCOMMA tID
   33                 | identifiers_list • tCOMMA tID tASSIGN add_sub

    tSEMI   shift, and go to state 82
    tCOMMA  shift, and go to state 83


State 64

   60 equality_expression: equality_expression tNE • compare

    tNB  shift, and go to state 46
    tID  shift, and go to state 47

    compare       go to state 84
    add_sub       go to state 50
    div_mul       go to state 51
    single_value  go to state 52


State 65

   59 equality_expression: equality_expression tEQ • compare

    tNB  shift, and go to state 46
    tID  shift, and go to state 47

    compare       go to state 85
    add_sub       go to state 50
    div_mul       go to state 51
    single_value  go to state 52


State 66

   62 compare: compare tLT • add_sub

    tNB  shift, and go to state 46
    tID  shift, and go to state 47

    add_sub       go to state 86
    div_mul       go to state 51
    single_value  go to state 52


State 67

   63 compare: compare tGT • add_sub

    tNB  shift, and go to state 46
    tID  shift, and go to state 47

    add_sub       go to state 87
    div_mul       go to state 51
    single_value  go to state 52


State 68

   65 compare: compare tGE • add_sub

    tNB  shift, and go to state 46
    tID  shift, and go to state 47

    add_sub       go to state 88
    div_mul       go to state 51
    single_value  go to state 52


State 69

   64 compare: compare tLE • add_sub

    tNB  shift, and go to state 46
    tID  shift, and go to state 47

    add_sub       go to state 89
    div_mul       go to state 51
    single_value  go to state 52


State 70

   67 add_sub: add_sub tADD • div_mul

    tNB  shift, and go to state 46
    tID  shift, and go to state 47

    div_mul       go to state 90
    single_value  go to state 52


State 71

   68 add_sub: add_sub tSUB • div_mul

    tNB  shift, and go to state 46
    tID  shift, and go to state 47

    div_mul       go to state 91
    single_value  go to state 52


State 72

   70 div_mul: div_mul tMUL • single_value

    tNB  shift, and go to state 46
    tID  shift, and go to state 47

    single_value  go to state 92


State 73

   71 div_mul: div_mul tDIV • single_value

    tNB  shift, and go to state 46
    tID  shift, and go to state 47

    single_value  go to state 93


State 74

    8 function: function_type tID $@1 tLPAR parameter_list tRPAR tLBRACE body tRBRACE • $@2

    $default  reduce using rule 7 ($@2)

    $@2  go to state 94


State 75

   57 condition: tNOT • condition

    tNOT  shift, and go to state 75
    tNB   shift, and go to state 46
    tID   shift, and go to state 47

    condition            go to state 95
    equality_expression  go to state 77
    compare              go to state 49
    add_sub              go to state 50
    div_mul              go to state 51
    single_value         go to state 52


State 76

   41 ifblock: tIF tLPAR condition • tRPAR action-if tLBRACE body tRBRACE action-getIndex $@4
   43        | tIF tLPAR condition • tRPAR action-if tLBRACE body tRBRACE action-getIndex tELSE action-else tLBRACE body tRBRACE action-getIndex $@5
   45        | tIF tLPAR condition • tRPAR action-if tLBRACE body tRBRACE action-getIndex tELSE ifblock $@6
   55 condition: condition • tAND condition
   56          | condition • tOR condition

    tAND   shift, and go to state 96
    tOR    shift, and go to state 97
    tRPAR  shift, and go to state 98


State 77

   54 condition: equality_expression •
   59 equality_expression: equality_expression • tEQ compare
   60                    | equality_expression • tNE compare

    tNE  shift, and go to state 64
    tEQ  shift, and go to state 65

    $default  reduce using rule 54 (condition)


State 78

   51 whileblock: tWHILE tLPAR condition • tRPAR action-while tLBRACE body tRBRACE $@7 $@8
   55 condition: condition • tAND condition
   56          | condition • tOR condition

    tAND   shift, and go to state 96
    tOR    shift, and go to state 97
    tRPAR  shift, and go to state 99


State 79

   53 printblock: tPRINT tLPAR tID • tRPAR tSEMI

    tRPAR  shift, and go to state 100


State 80

   38 assignment_list: tID tASSIGN add_sub • tSEMI
   39                | tID tASSIGN add_sub • tCOMMA assignment_list
   67 add_sub: add_sub • tADD div_mul
   68        | add_sub • tSUB div_mul

    tADD    shift, and go to state 70
    tSUB    shift, and go to state 71
    tSEMI   shift, and go to state 101
    tCOMMA  shift, and go to state 102


State 81

   31 identifiers_list: tID tASSIGN • add_sub

    tNB  shift, and go to state 46
    tID  shift, and go to state 47

    add_sub       go to state 103
    div_mul       go to state 51
    single_value  go to state 52


State 82

   28 declaration: declaration_type identifiers_list tSEMI •

    $default  reduce using rule 28 (declaration)


State 83

   32 identifiers_list: identifiers_list tCOMMA • tID
   33                 | identifiers_list tCOMMA • tID tASSIGN add_sub

    tID  shift, and go to state 104


State 84

   60 equality_expression: equality_expression tNE compare •
   62 compare: compare • tLT add_sub
   63        | compare • tGT add_sub
   64        | compare • tLE add_sub
   65        | compare • tGE add_sub

    tLT  shift, and go to state 66
    tGT  shift, and go to state 67
    tGE  shift, and go to state 68
    tLE  shift, and go to state 69

    $default  reduce using rule 60 (equality_expression)


State 85

   59 equality_expression: equality_expression tEQ compare •
   62 compare: compare • tLT add_sub
   63        | compare • tGT add_sub
   64        | compare • tLE add_sub
   65        | compare • tGE add_sub

    tLT  shift, and go to state 66
    tGT  shift, and go to state 67
    tGE  shift, and go to state 68
    tLE  shift, and go to state 69

    $default  reduce using rule 59 (equality_expression)


State 86

   62 compare: compare tLT add_sub •
   67 add_sub: add_sub • tADD div_mul
   68        | add_sub • tSUB div_mul

    tADD  shift, and go to state 70
    tSUB  shift, and go to state 71

    $default  reduce using rule 62 (compare)


State 87

   63 compare: compare tGT add_sub •
   67 add_sub: add_sub • tADD div_mul
   68        | add_sub • tSUB div_mul

    tADD  shift, and go to state 70
    tSUB  shift, and go to state 71

    $default  reduce using rule 63 (compare)


State 88

   65 compare: compare tGE add_sub •
   67 add_sub: add_sub • tADD div_mul
   68        | add_sub • tSUB div_mul

    tADD  shift, and go to state 70
    tSUB  shift, and go to state 71

    $default  reduce using rule 65 (compare)


State 89

   64 compare: compare tLE add_sub •
   67 add_sub: add_sub • tADD div_mul
   68        | add_sub • tSUB div_mul

    tADD  shift, and go to state 70
    tSUB  shift, and go to state 71

    $default  reduce using rule 64 (compare)


State 90

   67 add_sub: add_sub tADD div_mul •
   70 div_mul: div_mul • tMUL single_value
   71        | div_mul • tDIV single_value

    tMUL  shift, and go to state 72
    tDIV  shift, and go to state 73

    $default  reduce using rule 67 (add_sub)


State 91

   68 add_sub: add_sub tSUB div_mul •
   70 div_mul: div_mul • tMUL single_value
   71        | div_mul • tDIV single_value

    tMUL  shift, and go to state 72
    tDIV  shift, and go to state 73

    $default  reduce using rule 68 (add_sub)


State 92

   70 div_mul: div_mul tMUL single_value •

    $default  reduce using rule 70 (div_mul)


State 93

   71 div_mul: div_mul tDIV single_value •

    $default  reduce using rule 71 (div_mul)


State 94

    8 function: function_type tID $@1 tLPAR parameter_list tRPAR tLBRACE body tRBRACE $@2 •

    $default  reduce using rule 8 (function)


State 95

   55 condition: condition • tAND condition
   56          | condition • tOR condition
   57          | tNOT condition •

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97

    tAND      [reduce using rule 57 (condition)]
    tOR       [reduce using rule 57 (condition)]
    $default  reduce using rule 57 (condition)


State 96

   55 condition: condition tAND • condition

    tNOT  shift, and go to state 75
    tNB   shift, and go to state 46
    tID   shift, and go to state 47

    condition            go to state 105
    equality_expression  go to state 77
    compare              go to state 49
    add_sub              go to state 50
    div_mul              go to state 51
    single_value         go to state 52


State 97

   56 condition: condition tOR • condition

    tNOT  shift, and go to state 75
    tNB   shift, and go to state 46
    tID   shift, and go to state 47

    condition            go to state 106
    equality_expression  go to state 77
    compare              go to state 49
    add_sub              go to state 50
    div_mul              go to state 51
    single_value         go to state 52


State 98

   41 ifblock: tIF tLPAR condition tRPAR • action-if tLBRACE body tRBRACE action-getIndex $@4
   43        | tIF tLPAR condition tRPAR • action-if tLBRACE body tRBRACE action-getIndex tELSE action-else tLBRACE body tRBRACE action-getIndex $@5
   45        | tIF tLPAR condition tRPAR • action-if tLBRACE body tRBRACE action-getIndex tELSE ifblock $@6

    $default  reduce using rule 46 (action-if)

    action-if  go to state 107


State 99

   51 whileblock: tWHILE tLPAR condition tRPAR • action-while tLBRACE body tRBRACE $@7 $@8

    $default  reduce using rule 52 (action-while)

    action-while  go to state 108


State 100

   53 printblock: tPRINT tLPAR tID tRPAR • tSEMI

    tSEMI  shift, and go to state 109


State 101

   38 assignment_list: tID tASSIGN add_sub tSEMI •

    $default  reduce using rule 38 (assignment_list)


State 102

   39 assignment_list: tID tASSIGN add_sub tCOMMA • assignment_list

    tID  shift, and go to state 35

    assignment_list  go to state 110


State 103

   31 identifiers_list: tID tASSIGN add_sub •
   67 add_sub: add_sub • tADD div_mul
   68        | add_sub • tSUB div_mul

    tADD  shift, and go to state 70
    tSUB  shift, and go to state 71

    $default  reduce using rule 31 (identifiers_list)


State 104

   32 identifiers_list: identifiers_list tCOMMA tID •
   33                 | identifiers_list tCOMMA tID • tASSIGN add_sub

    tASSIGN  shift, and go to state 111

    $default  reduce using rule 32 (identifiers_list)


State 105

   55 condition: condition • tAND condition
   55          | condition tAND condition •
   56          | condition • tOR condition

    $default  reduce using rule 55 (condition)


State 106

   55 condition: condition • tAND condition
   56          | condition • tOR condition
   56          | condition tOR condition •

    tAND  shift, and go to state 96

    $default  reduce using rule 56 (condition)


State 107

   41 ifblock: tIF tLPAR condition tRPAR action-if • tLBRACE body tRBRACE action-getIndex $@4
   43        | tIF tLPAR condition tRPAR action-if • tLBRACE body tRBRACE action-getIndex tELSE action-else tLBRACE body tRBRACE action-getIndex $@5
   45        | tIF tLPAR condition tRPAR action-if • tLBRACE body tRBRACE action-getIndex tELSE ifblock $@6

    tLBRACE  shift, and go to state 112


State 108

   51 whileblock: tWHILE tLPAR condition tRPAR action-while • tLBRACE body tRBRACE $@7 $@8

    tLBRACE  shift, and go to state 113


State 109

   53 printblock: tPRINT tLPAR tID tRPAR tSEMI •

    $default  reduce using rule 53 (printblock)


State 110

   39 assignment_list: tID tASSIGN add_sub tCOMMA assignment_list •

    $default  reduce using rule 39 (assignment_list)


State 111

   33 identifiers_list: identifiers_list tCOMMA tID tASSIGN • add_sub

    tNB  shift, and go to state 46
    tID  shift, and go to state 47

    add_sub       go to state 114
    div_mul       go to state 51
    single_value  go to state 52


State 112

   41 ifblock: tIF tLPAR condition tRPAR action-if tLBRACE • body tRBRACE action-getIndex $@4
   43        | tIF tLPAR condition tRPAR action-if tLBRACE • body tRBRACE action-getIndex tELSE action-else tLBRACE body tRBRACE action-getIndex $@5
   45        | tIF tLPAR condition tRPAR action-if tLBRACE • body tRBRACE action-getIndex tELSE ifblock $@6

    tIF     shift, and go to state 31
    tWHILE  shift, and go to state 32
    tPRINT  shift, and go to state 33
    tINT    shift, and go to state 34
    tID     shift, and go to state 35

    $default  reduce using rule 20 (body)

    body              go to state 115
    instruction_list  go to state 37
    declaration_list  go to state 38
    declaration       go to state 39
    declaration_type  go to state 40
    instruction       go to state 41
    assignment_list   go to state 42
    ifblock           go to state 43
    whileblock        go to state 44
    printblock        go to state 45


State 113

   51 whileblock: tWHILE tLPAR condition tRPAR action-while tLBRACE • body tRBRACE $@7 $@8

    tIF     shift, and go to state 31
    tWHILE  shift, and go to state 32
    tPRINT  shift, and go to state 33
    tINT    shift, and go to state 34
    tID     shift, and go to state 35

    $default  reduce using rule 20 (body)

    body              go to state 116
    instruction_list  go to state 37
    declaration_list  go to state 38
    declaration       go to state 39
    declaration_type  go to state 40
    instruction       go to state 41
    assignment_list   go to state 42
    ifblock           go to state 43
    whileblock        go to state 44
    printblock        go to state 45


State 114

   33 identifiers_list: identifiers_list tCOMMA tID tASSIGN add_sub •
   67 add_sub: add_sub • tADD div_mul
   68        | add_sub • tSUB div_mul

    tADD  shift, and go to state 70
    tSUB  shift, and go to state 71

    $default  reduce using rule 33 (identifiers_list)


State 115

   41 ifblock: tIF tLPAR condition tRPAR action-if tLBRACE body • tRBRACE action-getIndex $@4
   43        | tIF tLPAR condition tRPAR action-if tLBRACE body • tRBRACE action-getIndex tELSE action-else tLBRACE body tRBRACE action-getIndex $@5
   45        | tIF tLPAR condition tRPAR action-if tLBRACE body • tRBRACE action-getIndex tELSE ifblock $@6

    tRBRACE  shift, and go to state 117


State 116

   51 whileblock: tWHILE tLPAR condition tRPAR action-while tLBRACE body • tRBRACE $@7 $@8

    tRBRACE  shift, and go to state 118


State 117

   41 ifblock: tIF tLPAR condition tRPAR action-if tLBRACE body tRBRACE • action-getIndex $@4
   43        | tIF tLPAR condition tRPAR action-if tLBRACE body tRBRACE • action-getIndex tELSE action-else tLBRACE body tRBRACE action-getIndex $@5
   45        | tIF tLPAR condition tRPAR action-if tLBRACE body tRBRACE • action-getIndex tELSE ifblock $@6

    $default  reduce using rule 48 (action-getIndex)

    action-getIndex  go to state 119


State 118

   51 whileblock: tWHILE tLPAR condition tRPAR action-while tLBRACE body tRBRACE • $@7 $@8

    $default  reduce using rule 49 ($@7)

    $@7  go to state 120


State 119

   41 ifblock: tIF tLPAR condition tRPAR action-if tLBRACE body tRBRACE action-getIndex • $@4
   43        | tIF tLPAR condition tRPAR action-if tLBRACE body tRBRACE action-getIndex • tELSE action-else tLBRACE body tRBRACE action-getIndex $@5
   45        | tIF tLPAR condition tRPAR action-if tLBRACE body tRBRACE action-getIndex • tELSE ifblock $@6

    tELSE  shift, and go to state 121

    $default  reduce using rule 40 ($@4)

    $@4  go to state 122


State 120

   51 whileblock: tWHILE tLPAR condition tRPAR action-while tLBRACE body tRBRACE $@7 • $@8

    $default  reduce using rule 50 ($@8)

    $@8  go to state 123


State 121

   43 ifblock: tIF tLPAR condition tRPAR action-if tLBRACE body tRBRACE action-getIndex tELSE • action-else tLBRACE body tRBRACE action-getIndex $@5
   45        | tIF tLPAR condition tRPAR action-if tLBRACE body tRBRACE action-getIndex tELSE • ifblock $@6

    tIF  shift, and go to state 31

    $default  reduce using rule 47 (action-else)

    ifblock      go to state 124
    action-else  go to state 125


State 122

   41 ifblock: tIF tLPAR condition tRPAR action-if tLBRACE body tRBRACE action-getIndex $@4 •

    $default  reduce using rule 41 (ifblock)


State 123

   51 whileblock: tWHILE tLPAR condition tRPAR action-while tLBRACE body tRBRACE $@7 $@8 •

    $default  reduce using rule 51 (whileblock)


State 124

   45 ifblock: tIF tLPAR condition tRPAR action-if tLBRACE body tRBRACE action-getIndex tELSE ifblock • $@6

    $default  reduce using rule 44 ($@6)

    $@6  go to state 126


State 125

   43 ifblock: tIF tLPAR condition tRPAR action-if tLBRACE body tRBRACE action-getIndex tELSE action-else • tLBRACE body tRBRACE action-getIndex $@5

    tLBRACE  shift, and go to state 127


State 126

   45 ifblock: tIF tLPAR condition tRPAR action-if tLBRACE body tRBRACE action-getIndex tELSE ifblock $@6 •

    $default  reduce using rule 45 (ifblock)


State 127

   43 ifblock: tIF tLPAR condition tRPAR action-if tLBRACE body tRBRACE action-getIndex tELSE action-else tLBRACE • body tRBRACE action-getIndex $@5

    tIF     shift, and go to state 31
    tWHILE  shift, and go to state 32
    tPRINT  shift, and go to state 33
    tINT    shift, and go to state 34
    tID     shift, and go to state 35

    $default  reduce using rule 20 (body)

    body              go to state 128
    instruction_list  go to state 37
    declaration_list  go to state 38
    declaration       go to state 39
    declaration_type  go to state 40
    instruction       go to state 41
    assignment_list   go to state 42
    ifblock           go to state 43
    whileblock        go to state 44
    printblock        go to state 45


State 128

   43 ifblock: tIF tLPAR condition tRPAR action-if tLBRACE body tRBRACE action-getIndex tELSE action-else tLBRACE body • tRBRACE action-getIndex $@5

    tRBRACE  shift, and go to state 129


State 129

   43 ifblock: tIF tLPAR condition tRPAR action-if tLBRACE body tRBRACE action-getIndex tELSE action-else tLBRACE body tRBRACE • action-getIndex $@5

    $default  reduce using rule 48 (action-getIndex)

    action-getIndex  go to state 130


State 130

   43 ifblock: tIF tLPAR condition tRPAR action-if tLBRACE body tRBRACE action-getIndex tELSE action-else tLBRACE body tRBRACE action-getIndex • $@5

    $default  reduce using rule 42 ($@5)

    $@5  go to state 131


State 131

   43 ifblock: tIF tLPAR condition tRPAR action-if tLBRACE body tRBRACE action-getIndex tELSE action-else tLBRACE body tRBRACE action-getIndex $@5 •

    $default  reduce using rule 43 (ifblock)
