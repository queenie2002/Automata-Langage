Terminals unused in grammar

    tRETURN
    tERROR


State 80 conflicts: 2 shift/reduce
State 92 conflicts: 2 shift/reduce
State 93 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ε
    2        | main_function

    3 main_function: function_type tMAIN tLPAR parameter_list tRPAR tLBRACE body tRBRACE

    4 function_type: tVOID
    5              | tINT

    6 parameter_list: ε
    7               | tVOID
    8               | parameter
    9               | parameter_list tCOMMA parameter

   10 parameter: parameter_type tID
   11          | parameter_type tID tASSIGN equality_expression

   12 parameter_type: tINT

   13 body: ε
   14     | declaration_list
   15     | instruction_list
   16     | declaration_list instruction_list

   17 instruction_list: instruction
   18                 | instruction_list instruction

   19 declaration_list: declaration
   20                 | declaration_list declaration

   21 declaration: parameter_type identifiers_list tSEMI

   22 identifiers_list: tID
   23                 | tID tASSIGN add_sub
   24                 | identifiers_list tCOMMA tID
   25                 | identifiers_list tCOMMA tID tASSIGN add_sub

   26 instruction: assignment_list
   27            | ifblock
   28            | whileblock
   29            | printblock

   30 assignment_list: tID tASSIGN add_sub tSEMI
   31                | tID tASSIGN add_sub tCOMMA assignment_list

   32 ifblock: tIF tLPAR condition tRPAR tLBRACE body tRBRACE
   33        | tIF tLPAR condition tRPAR tLBRACE body tRBRACE tELSE tLBRACE body tRBRACE
   34        | tIF tLPAR condition tRPAR tLBRACE body tRBRACE tELSE ifblock

   35 whileblock: tWHILE tLPAR condition tRPAR tLBRACE body tRBRACE

   36 printblock: tPRINT tLPAR tID tRPAR tSEMI

   37 condition: tLPAR equality_expression tRPAR
   38          | condition tAND condition
   39          | condition tOR condition
   40          | tNOT condition

   41 equality_expression: compare
   42                    | equality_expression tEQ compare
   43                    | equality_expression tNE compare

   44 compare: add_sub
   45        | compare tLT add_sub
   46        | compare tGT add_sub
   47        | compare tLE add_sub
   48        | compare tGE add_sub

   49 add_sub: div_mul
   50        | add_sub tADD div_mul
   51        | add_sub tSUB div_mul

   52 div_mul: term
   53        | div_mul tMUL term
   54        | div_mul tDIV term

   55 term: tID
   56     | tNB


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tADD (258) 50
    tSUB (259) 51
    tMUL (260) 53
    tDIV (261) 54
    tLT (262) 45
    tGT (263) 46
    tNE (264) 43
    tEQ (265) 42
    tGE (266) 48
    tLE (267) 47
    tASSIGN (268) 11 23 25 30 31
    tAND (269) 38
    tOR (270) 39
    tNOT (271) 40
    tLBRACE (272) 3 32 33 34 35
    tRBRACE (273) 3 32 33 34 35
    tLPAR (274) 3 32 33 34 35 36 37
    tRPAR (275) 3 32 33 34 35 36 37
    tSEMI (276) 21 30 36
    tCOMMA (277) 9 24 25 31
    tIF (278) 32 33 34
    tELSE (279) 33 34
    tWHILE (280) 35
    tPRINT (281) 36
    tRETURN (282)
    tINT (283) 5 12
    tVOID (284) 4 7
    tMAIN (285) 3
    tERROR (286)
    tNB <nb> (287) 56
    tID <var> (288) 10 11 22 23 24 25 30 31 36 55


Nonterminals, with rules where they appear

    $accept (34)
        on left: 0
    program (35)
        on left: 1 2
        on right: 0
    main_function (36)
        on left: 3
        on right: 2
    function_type (37)
        on left: 4 5
        on right: 3
    parameter_list (38)
        on left: 6 7 8 9
        on right: 3 9
    parameter (39)
        on left: 10 11
        on right: 8 9
    parameter_type (40)
        on left: 12
        on right: 10 11 21
    body (41)
        on left: 13 14 15 16
        on right: 3 32 33 34 35
    instruction_list (42)
        on left: 17 18
        on right: 15 16 18
    declaration_list (43)
        on left: 19 20
        on right: 14 16 20
    declaration (44)
        on left: 21
        on right: 19 20
    identifiers_list (45)
        on left: 22 23 24 25
        on right: 21 24 25
    instruction (46)
        on left: 26 27 28 29
        on right: 17 18
    assignment_list (47)
        on left: 30 31
        on right: 26 31
    ifblock (48)
        on left: 32 33 34
        on right: 27 34
    whileblock (49)
        on left: 35
        on right: 28
    printblock (50)
        on left: 36
        on right: 29
    condition (51)
        on left: 37 38 39 40
        on right: 32 33 34 35 38 39 40
    equality_expression (52)
        on left: 41 42 43
        on right: 11 37 42 43
    compare (53)
        on left: 44 45 46 47 48
        on right: 41 42 43 45 46 47 48
    add_sub <nb> (54)
        on left: 49 50 51
        on right: 23 25 30 31 44 45 46 47 48 50 51
    div_mul <nb> (55)
        on left: 52 53 54
        on right: 49 50 51 53 54
    term <nb> (56)
        on left: 55 56
        on right: 52 53 54


State 0

    0 $accept: • program $end

    tINT   shift, and go to state 1
    tVOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    program        go to state 3
    main_function  go to state 4
    function_type  go to state 5


State 1

    5 function_type: tINT •

    $default  reduce using rule 5 (function_type)


State 2

    4 function_type: tVOID •

    $default  reduce using rule 4 (function_type)


State 3

    0 $accept: program • $end

    $end  shift, and go to state 6


State 4

    2 program: main_function •

    $default  reduce using rule 2 (program)


State 5

    3 main_function: function_type • tMAIN tLPAR parameter_list tRPAR tLBRACE body tRBRACE

    tMAIN  shift, and go to state 7


State 6

    0 $accept: program $end •

    $default  accept


State 7

    3 main_function: function_type tMAIN • tLPAR parameter_list tRPAR tLBRACE body tRBRACE

    tLPAR  shift, and go to state 8


State 8

    3 main_function: function_type tMAIN tLPAR • parameter_list tRPAR tLBRACE body tRBRACE

    tINT   shift, and go to state 9
    tVOID  shift, and go to state 10

    $default  reduce using rule 6 (parameter_list)

    parameter_list  go to state 11
    parameter       go to state 12
    parameter_type  go to state 13


State 9

   12 parameter_type: tINT •

    $default  reduce using rule 12 (parameter_type)


State 10

    7 parameter_list: tVOID •

    $default  reduce using rule 7 (parameter_list)


State 11

    3 main_function: function_type tMAIN tLPAR parameter_list • tRPAR tLBRACE body tRBRACE
    9 parameter_list: parameter_list • tCOMMA parameter

    tRPAR   shift, and go to state 14
    tCOMMA  shift, and go to state 15


State 12

    8 parameter_list: parameter •

    $default  reduce using rule 8 (parameter_list)


State 13

   10 parameter: parameter_type • tID
   11          | parameter_type • tID tASSIGN equality_expression

    tID  shift, and go to state 16


State 14

    3 main_function: function_type tMAIN tLPAR parameter_list tRPAR • tLBRACE body tRBRACE

    tLBRACE  shift, and go to state 17


State 15

    9 parameter_list: parameter_list tCOMMA • parameter

    tINT  shift, and go to state 9

    parameter       go to state 18
    parameter_type  go to state 13


State 16

   10 parameter: parameter_type tID •
   11          | parameter_type tID • tASSIGN equality_expression

    tASSIGN  shift, and go to state 19

    $default  reduce using rule 10 (parameter)


State 17

    3 main_function: function_type tMAIN tLPAR parameter_list tRPAR tLBRACE • body tRBRACE

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tINT    shift, and go to state 9
    tID     shift, and go to state 23

    $default  reduce using rule 13 (body)

    parameter_type    go to state 24
    body              go to state 25
    instruction_list  go to state 26
    declaration_list  go to state 27
    declaration       go to state 28
    instruction       go to state 29
    assignment_list   go to state 30
    ifblock           go to state 31
    whileblock        go to state 32
    printblock        go to state 33


State 18

    9 parameter_list: parameter_list tCOMMA parameter •

    $default  reduce using rule 9 (parameter_list)


State 19

   11 parameter: parameter_type tID tASSIGN • equality_expression

    tNB  shift, and go to state 34
    tID  shift, and go to state 35

    equality_expression  go to state 36
    compare              go to state 37
    add_sub              go to state 38
    div_mul              go to state 39
    term                 go to state 40


State 20

   32 ifblock: tIF • tLPAR condition tRPAR tLBRACE body tRBRACE
   33        | tIF • tLPAR condition tRPAR tLBRACE body tRBRACE tELSE tLBRACE body tRBRACE
   34        | tIF • tLPAR condition tRPAR tLBRACE body tRBRACE tELSE ifblock

    tLPAR  shift, and go to state 41


State 21

   35 whileblock: tWHILE • tLPAR condition tRPAR tLBRACE body tRBRACE

    tLPAR  shift, and go to state 42


State 22

   36 printblock: tPRINT • tLPAR tID tRPAR tSEMI

    tLPAR  shift, and go to state 43


State 23

   30 assignment_list: tID • tASSIGN add_sub tSEMI
   31                | tID • tASSIGN add_sub tCOMMA assignment_list

    tASSIGN  shift, and go to state 44


State 24

   21 declaration: parameter_type • identifiers_list tSEMI

    tID  shift, and go to state 45

    identifiers_list  go to state 46


State 25

    3 main_function: function_type tMAIN tLPAR parameter_list tRPAR tLBRACE body • tRBRACE

    tRBRACE  shift, and go to state 47


State 26

   15 body: instruction_list •
   18 instruction_list: instruction_list • instruction

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tID     shift, and go to state 23

    $default  reduce using rule 15 (body)

    instruction      go to state 48
    assignment_list  go to state 30
    ifblock          go to state 31
    whileblock       go to state 32
    printblock       go to state 33


State 27

   14 body: declaration_list •
   16     | declaration_list • instruction_list
   20 declaration_list: declaration_list • declaration

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tINT    shift, and go to state 9
    tID     shift, and go to state 23

    $default  reduce using rule 14 (body)

    parameter_type    go to state 24
    instruction_list  go to state 49
    declaration       go to state 50
    instruction       go to state 29
    assignment_list   go to state 30
    ifblock           go to state 31
    whileblock        go to state 32
    printblock        go to state 33


State 28

   19 declaration_list: declaration •

    $default  reduce using rule 19 (declaration_list)


State 29

   17 instruction_list: instruction •

    $default  reduce using rule 17 (instruction_list)


State 30

   26 instruction: assignment_list •

    $default  reduce using rule 26 (instruction)


State 31

   27 instruction: ifblock •

    $default  reduce using rule 27 (instruction)


State 32

   28 instruction: whileblock •

    $default  reduce using rule 28 (instruction)


State 33

   29 instruction: printblock •

    $default  reduce using rule 29 (instruction)


State 34

   56 term: tNB •

    $default  reduce using rule 56 (term)


State 35

   55 term: tID •

    $default  reduce using rule 55 (term)


State 36

   11 parameter: parameter_type tID tASSIGN equality_expression •
   42 equality_expression: equality_expression • tEQ compare
   43                    | equality_expression • tNE compare

    tNE  shift, and go to state 51
    tEQ  shift, and go to state 52

    $default  reduce using rule 11 (parameter)


State 37

   41 equality_expression: compare •
   45 compare: compare • tLT add_sub
   46        | compare • tGT add_sub
   47        | compare • tLE add_sub
   48        | compare • tGE add_sub

    tLT  shift, and go to state 53
    tGT  shift, and go to state 54
    tGE  shift, and go to state 55
    tLE  shift, and go to state 56

    $default  reduce using rule 41 (equality_expression)


State 38

   44 compare: add_sub •
   50 add_sub: add_sub • tADD div_mul
   51        | add_sub • tSUB div_mul

    tADD  shift, and go to state 57
    tSUB  shift, and go to state 58

    $default  reduce using rule 44 (compare)


State 39

   49 add_sub: div_mul •
   53 div_mul: div_mul • tMUL term
   54        | div_mul • tDIV term

    tMUL  shift, and go to state 59
    tDIV  shift, and go to state 60

    $default  reduce using rule 49 (add_sub)


State 40

   52 div_mul: term •

    $default  reduce using rule 52 (div_mul)


State 41

   32 ifblock: tIF tLPAR • condition tRPAR tLBRACE body tRBRACE
   33        | tIF tLPAR • condition tRPAR tLBRACE body tRBRACE tELSE tLBRACE body tRBRACE
   34        | tIF tLPAR • condition tRPAR tLBRACE body tRBRACE tELSE ifblock

    tNOT   shift, and go to state 61
    tLPAR  shift, and go to state 62

    condition  go to state 63


State 42

   35 whileblock: tWHILE tLPAR • condition tRPAR tLBRACE body tRBRACE

    tNOT   shift, and go to state 61
    tLPAR  shift, and go to state 62

    condition  go to state 64


State 43

   36 printblock: tPRINT tLPAR • tID tRPAR tSEMI

    tID  shift, and go to state 65


State 44

   30 assignment_list: tID tASSIGN • add_sub tSEMI
   31                | tID tASSIGN • add_sub tCOMMA assignment_list

    tNB  shift, and go to state 34
    tID  shift, and go to state 35

    add_sub  go to state 66
    div_mul  go to state 39
    term     go to state 40


State 45

   22 identifiers_list: tID •
   23                 | tID • tASSIGN add_sub

    tASSIGN  shift, and go to state 67

    $default  reduce using rule 22 (identifiers_list)


State 46

   21 declaration: parameter_type identifiers_list • tSEMI
   24 identifiers_list: identifiers_list • tCOMMA tID
   25                 | identifiers_list • tCOMMA tID tASSIGN add_sub

    tSEMI   shift, and go to state 68
    tCOMMA  shift, and go to state 69


State 47

    3 main_function: function_type tMAIN tLPAR parameter_list tRPAR tLBRACE body tRBRACE •

    $default  reduce using rule 3 (main_function)


State 48

   18 instruction_list: instruction_list instruction •

    $default  reduce using rule 18 (instruction_list)


State 49

   16 body: declaration_list instruction_list •
   18 instruction_list: instruction_list • instruction

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tID     shift, and go to state 23

    $default  reduce using rule 16 (body)

    instruction      go to state 48
    assignment_list  go to state 30
    ifblock          go to state 31
    whileblock       go to state 32
    printblock       go to state 33


State 50

   20 declaration_list: declaration_list declaration •

    $default  reduce using rule 20 (declaration_list)


State 51

   43 equality_expression: equality_expression tNE • compare

    tNB  shift, and go to state 34
    tID  shift, and go to state 35

    compare  go to state 70
    add_sub  go to state 38
    div_mul  go to state 39
    term     go to state 40


State 52

   42 equality_expression: equality_expression tEQ • compare

    tNB  shift, and go to state 34
    tID  shift, and go to state 35

    compare  go to state 71
    add_sub  go to state 38
    div_mul  go to state 39
    term     go to state 40


State 53

   45 compare: compare tLT • add_sub

    tNB  shift, and go to state 34
    tID  shift, and go to state 35

    add_sub  go to state 72
    div_mul  go to state 39
    term     go to state 40


State 54

   46 compare: compare tGT • add_sub

    tNB  shift, and go to state 34
    tID  shift, and go to state 35

    add_sub  go to state 73
    div_mul  go to state 39
    term     go to state 40


State 55

   48 compare: compare tGE • add_sub

    tNB  shift, and go to state 34
    tID  shift, and go to state 35

    add_sub  go to state 74
    div_mul  go to state 39
    term     go to state 40


State 56

   47 compare: compare tLE • add_sub

    tNB  shift, and go to state 34
    tID  shift, and go to state 35

    add_sub  go to state 75
    div_mul  go to state 39
    term     go to state 40


State 57

   50 add_sub: add_sub tADD • div_mul

    tNB  shift, and go to state 34
    tID  shift, and go to state 35

    div_mul  go to state 76
    term     go to state 40


State 58

   51 add_sub: add_sub tSUB • div_mul

    tNB  shift, and go to state 34
    tID  shift, and go to state 35

    div_mul  go to state 77
    term     go to state 40


State 59

   53 div_mul: div_mul tMUL • term

    tNB  shift, and go to state 34
    tID  shift, and go to state 35

    term  go to state 78


State 60

   54 div_mul: div_mul tDIV • term

    tNB  shift, and go to state 34
    tID  shift, and go to state 35

    term  go to state 79


State 61

   40 condition: tNOT • condition

    tNOT   shift, and go to state 61
    tLPAR  shift, and go to state 62

    condition  go to state 80


State 62

   37 condition: tLPAR • equality_expression tRPAR

    tNB  shift, and go to state 34
    tID  shift, and go to state 35

    equality_expression  go to state 81
    compare              go to state 37
    add_sub              go to state 38
    div_mul              go to state 39
    term                 go to state 40


State 63

   32 ifblock: tIF tLPAR condition • tRPAR tLBRACE body tRBRACE
   33        | tIF tLPAR condition • tRPAR tLBRACE body tRBRACE tELSE tLBRACE body tRBRACE
   34        | tIF tLPAR condition • tRPAR tLBRACE body tRBRACE tELSE ifblock
   38 condition: condition • tAND condition
   39          | condition • tOR condition

    tAND   shift, and go to state 82
    tOR    shift, and go to state 83
    tRPAR  shift, and go to state 84


State 64

   35 whileblock: tWHILE tLPAR condition • tRPAR tLBRACE body tRBRACE
   38 condition: condition • tAND condition
   39          | condition • tOR condition

    tAND   shift, and go to state 82
    tOR    shift, and go to state 83
    tRPAR  shift, and go to state 85


State 65

   36 printblock: tPRINT tLPAR tID • tRPAR tSEMI

    tRPAR  shift, and go to state 86


State 66

   30 assignment_list: tID tASSIGN add_sub • tSEMI
   31                | tID tASSIGN add_sub • tCOMMA assignment_list
   50 add_sub: add_sub • tADD div_mul
   51        | add_sub • tSUB div_mul

    tADD    shift, and go to state 57
    tSUB    shift, and go to state 58
    tSEMI   shift, and go to state 87
    tCOMMA  shift, and go to state 88


State 67

   23 identifiers_list: tID tASSIGN • add_sub

    tNB  shift, and go to state 34
    tID  shift, and go to state 35

    add_sub  go to state 89
    div_mul  go to state 39
    term     go to state 40


State 68

   21 declaration: parameter_type identifiers_list tSEMI •

    $default  reduce using rule 21 (declaration)


State 69

   24 identifiers_list: identifiers_list tCOMMA • tID
   25                 | identifiers_list tCOMMA • tID tASSIGN add_sub

    tID  shift, and go to state 90


State 70

   43 equality_expression: equality_expression tNE compare •
   45 compare: compare • tLT add_sub
   46        | compare • tGT add_sub
   47        | compare • tLE add_sub
   48        | compare • tGE add_sub

    tLT  shift, and go to state 53
    tGT  shift, and go to state 54
    tGE  shift, and go to state 55
    tLE  shift, and go to state 56

    $default  reduce using rule 43 (equality_expression)


State 71

   42 equality_expression: equality_expression tEQ compare •
   45 compare: compare • tLT add_sub
   46        | compare • tGT add_sub
   47        | compare • tLE add_sub
   48        | compare • tGE add_sub

    tLT  shift, and go to state 53
    tGT  shift, and go to state 54
    tGE  shift, and go to state 55
    tLE  shift, and go to state 56

    $default  reduce using rule 42 (equality_expression)


State 72

   45 compare: compare tLT add_sub •
   50 add_sub: add_sub • tADD div_mul
   51        | add_sub • tSUB div_mul

    tADD  shift, and go to state 57
    tSUB  shift, and go to state 58

    $default  reduce using rule 45 (compare)


State 73

   46 compare: compare tGT add_sub •
   50 add_sub: add_sub • tADD div_mul
   51        | add_sub • tSUB div_mul

    tADD  shift, and go to state 57
    tSUB  shift, and go to state 58

    $default  reduce using rule 46 (compare)


State 74

   48 compare: compare tGE add_sub •
   50 add_sub: add_sub • tADD div_mul
   51        | add_sub • tSUB div_mul

    tADD  shift, and go to state 57
    tSUB  shift, and go to state 58

    $default  reduce using rule 48 (compare)


State 75

   47 compare: compare tLE add_sub •
   50 add_sub: add_sub • tADD div_mul
   51        | add_sub • tSUB div_mul

    tADD  shift, and go to state 57
    tSUB  shift, and go to state 58

    $default  reduce using rule 47 (compare)


State 76

   50 add_sub: add_sub tADD div_mul •
   53 div_mul: div_mul • tMUL term
   54        | div_mul • tDIV term

    tMUL  shift, and go to state 59
    tDIV  shift, and go to state 60

    $default  reduce using rule 50 (add_sub)


State 77

   51 add_sub: add_sub tSUB div_mul •
   53 div_mul: div_mul • tMUL term
   54        | div_mul • tDIV term

    tMUL  shift, and go to state 59
    tDIV  shift, and go to state 60

    $default  reduce using rule 51 (add_sub)


State 78

   53 div_mul: div_mul tMUL term •

    $default  reduce using rule 53 (div_mul)


State 79

   54 div_mul: div_mul tDIV term •

    $default  reduce using rule 54 (div_mul)


State 80

   38 condition: condition • tAND condition
   39          | condition • tOR condition
   40          | tNOT condition •

    tAND  shift, and go to state 82
    tOR   shift, and go to state 83

    tAND      [reduce using rule 40 (condition)]
    tOR       [reduce using rule 40 (condition)]
    $default  reduce using rule 40 (condition)


State 81

   37 condition: tLPAR equality_expression • tRPAR
   42 equality_expression: equality_expression • tEQ compare
   43                    | equality_expression • tNE compare

    tNE    shift, and go to state 51
    tEQ    shift, and go to state 52
    tRPAR  shift, and go to state 91


State 82

   38 condition: condition tAND • condition

    tNOT   shift, and go to state 61
    tLPAR  shift, and go to state 62

    condition  go to state 92


State 83

   39 condition: condition tOR • condition

    tNOT   shift, and go to state 61
    tLPAR  shift, and go to state 62

    condition  go to state 93


State 84

   32 ifblock: tIF tLPAR condition tRPAR • tLBRACE body tRBRACE
   33        | tIF tLPAR condition tRPAR • tLBRACE body tRBRACE tELSE tLBRACE body tRBRACE
   34        | tIF tLPAR condition tRPAR • tLBRACE body tRBRACE tELSE ifblock

    tLBRACE  shift, and go to state 94


State 85

   35 whileblock: tWHILE tLPAR condition tRPAR • tLBRACE body tRBRACE

    tLBRACE  shift, and go to state 95


State 86

   36 printblock: tPRINT tLPAR tID tRPAR • tSEMI

    tSEMI  shift, and go to state 96


State 87

   30 assignment_list: tID tASSIGN add_sub tSEMI •

    $default  reduce using rule 30 (assignment_list)


State 88

   31 assignment_list: tID tASSIGN add_sub tCOMMA • assignment_list

    tID  shift, and go to state 23

    assignment_list  go to state 97


State 89

   23 identifiers_list: tID tASSIGN add_sub •
   50 add_sub: add_sub • tADD div_mul
   51        | add_sub • tSUB div_mul

    tADD  shift, and go to state 57
    tSUB  shift, and go to state 58

    $default  reduce using rule 23 (identifiers_list)


State 90

   24 identifiers_list: identifiers_list tCOMMA tID •
   25                 | identifiers_list tCOMMA tID • tASSIGN add_sub

    tASSIGN  shift, and go to state 98

    $default  reduce using rule 24 (identifiers_list)


State 91

   37 condition: tLPAR equality_expression tRPAR •

    $default  reduce using rule 37 (condition)


State 92

   38 condition: condition • tAND condition
   38          | condition tAND condition •
   39          | condition • tOR condition

    tAND  shift, and go to state 82
    tOR   shift, and go to state 83

    tAND      [reduce using rule 38 (condition)]
    tOR       [reduce using rule 38 (condition)]
    $default  reduce using rule 38 (condition)


State 93

   38 condition: condition • tAND condition
   39          | condition • tOR condition
   39          | condition tOR condition •

    tAND  shift, and go to state 82
    tOR   shift, and go to state 83

    tAND      [reduce using rule 39 (condition)]
    tOR       [reduce using rule 39 (condition)]
    $default  reduce using rule 39 (condition)


State 94

   32 ifblock: tIF tLPAR condition tRPAR tLBRACE • body tRBRACE
   33        | tIF tLPAR condition tRPAR tLBRACE • body tRBRACE tELSE tLBRACE body tRBRACE
   34        | tIF tLPAR condition tRPAR tLBRACE • body tRBRACE tELSE ifblock

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tINT    shift, and go to state 9
    tID     shift, and go to state 23

    $default  reduce using rule 13 (body)

    parameter_type    go to state 24
    body              go to state 99
    instruction_list  go to state 26
    declaration_list  go to state 27
    declaration       go to state 28
    instruction       go to state 29
    assignment_list   go to state 30
    ifblock           go to state 31
    whileblock        go to state 32
    printblock        go to state 33


State 95

   35 whileblock: tWHILE tLPAR condition tRPAR tLBRACE • body tRBRACE

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tINT    shift, and go to state 9
    tID     shift, and go to state 23

    $default  reduce using rule 13 (body)

    parameter_type    go to state 24
    body              go to state 100
    instruction_list  go to state 26
    declaration_list  go to state 27
    declaration       go to state 28
    instruction       go to state 29
    assignment_list   go to state 30
    ifblock           go to state 31
    whileblock        go to state 32
    printblock        go to state 33


State 96

   36 printblock: tPRINT tLPAR tID tRPAR tSEMI •

    $default  reduce using rule 36 (printblock)


State 97

   31 assignment_list: tID tASSIGN add_sub tCOMMA assignment_list •

    $default  reduce using rule 31 (assignment_list)


State 98

   25 identifiers_list: identifiers_list tCOMMA tID tASSIGN • add_sub

    tNB  shift, and go to state 34
    tID  shift, and go to state 35

    add_sub  go to state 101
    div_mul  go to state 39
    term     go to state 40


State 99

   32 ifblock: tIF tLPAR condition tRPAR tLBRACE body • tRBRACE
   33        | tIF tLPAR condition tRPAR tLBRACE body • tRBRACE tELSE tLBRACE body tRBRACE
   34        | tIF tLPAR condition tRPAR tLBRACE body • tRBRACE tELSE ifblock

    tRBRACE  shift, and go to state 102


State 100

   35 whileblock: tWHILE tLPAR condition tRPAR tLBRACE body • tRBRACE

    tRBRACE  shift, and go to state 103


State 101

   25 identifiers_list: identifiers_list tCOMMA tID tASSIGN add_sub •
   50 add_sub: add_sub • tADD div_mul
   51        | add_sub • tSUB div_mul

    tADD  shift, and go to state 57
    tSUB  shift, and go to state 58

    $default  reduce using rule 25 (identifiers_list)


State 102

   32 ifblock: tIF tLPAR condition tRPAR tLBRACE body tRBRACE •
   33        | tIF tLPAR condition tRPAR tLBRACE body tRBRACE • tELSE tLBRACE body tRBRACE
   34        | tIF tLPAR condition tRPAR tLBRACE body tRBRACE • tELSE ifblock

    tELSE  shift, and go to state 104

    $default  reduce using rule 32 (ifblock)


State 103

   35 whileblock: tWHILE tLPAR condition tRPAR tLBRACE body tRBRACE •

    $default  reduce using rule 35 (whileblock)


State 104

   33 ifblock: tIF tLPAR condition tRPAR tLBRACE body tRBRACE tELSE • tLBRACE body tRBRACE
   34        | tIF tLPAR condition tRPAR tLBRACE body tRBRACE tELSE • ifblock

    tLBRACE  shift, and go to state 105
    tIF      shift, and go to state 20

    ifblock  go to state 106


State 105

   33 ifblock: tIF tLPAR condition tRPAR tLBRACE body tRBRACE tELSE tLBRACE • body tRBRACE

    tIF     shift, and go to state 20
    tWHILE  shift, and go to state 21
    tPRINT  shift, and go to state 22
    tINT    shift, and go to state 9
    tID     shift, and go to state 23

    $default  reduce using rule 13 (body)

    parameter_type    go to state 24
    body              go to state 107
    instruction_list  go to state 26
    declaration_list  go to state 27
    declaration       go to state 28
    instruction       go to state 29
    assignment_list   go to state 30
    ifblock           go to state 31
    whileblock        go to state 32
    printblock        go to state 33


State 106

   34 ifblock: tIF tLPAR condition tRPAR tLBRACE body tRBRACE tELSE ifblock •

    $default  reduce using rule 34 (ifblock)


State 107

   33 ifblock: tIF tLPAR condition tRPAR tLBRACE body tRBRACE tELSE tLBRACE body • tRBRACE

    tRBRACE  shift, and go to state 108


State 108

   33 ifblock: tIF tLPAR condition tRPAR tLBRACE body tRBRACE tELSE tLBRACE body tRBRACE •

    $default  reduce using rule 33 (ifblock)
