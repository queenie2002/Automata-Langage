Terminals unused in grammar

    tCONST
    tERROR


State 97 conflicts: 2 shift/reduce
State 137 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 action-inc: ε

    2 action-dec: ε

    3 action-getIndex: ε

    4 program: ε
    5        | action-start main_function
    6        | action-start function_list main_function

    7 action-start: ε

    8 function_type: tVOID
    9              | tINT

   10 variable_type: tINT

   11 parameter_list: ε
   12               | tVOID
   13               | parameter
   14               | parameter_list tCOMMA parameter

   15 parameter: variable_type tID

   16 body: ε
   17     | declaration_list
   18     | instruction_list
   19     | declaration_list instruction_list

   20 declaration_list: declaration
   21                 | declaration_list declaration

   22 declaration: variable_type identifiers_list tSEMI

   23 identifiers_list: tID
   24                 | tID tASSIGN equality_expression
   25                 | identifiers_list tCOMMA tID
   26                 | identifiers_list tCOMMA tID tASSIGN equality_expression

   27 instruction_list: instruction
   28                 | instruction_list instruction

   29 instruction: assignment_list
   30            | ifblock
   31            | whileblock
   32            | printblock
   33            | returnblock

   34 function_list: function
   35              | function_list function

   36 $@1: ε

   37 function: function_type tID action-inc action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE body tRBRACE action-dec

   38 functionCall: tID tLPAR action-call0 action-inc action-call1 action-dec argument_list tRPAR action-getIndex

   39 action-call0: ε

   40 action-call1: ε

   41 argument_list: ε
   42              | argument_list tCOMMA equality_expression
   43              | equality_expression

   44 $@2: ε

   45 main_function: function_type tMAIN action-inc action-getIndex $@2 tLPAR parameter_list tRPAR tLBRACE body tRBRACE action-dec

   46 assignment_list: tID tASSIGN equality_expression tSEMI
   47                | tID tASSIGN equality_expression tCOMMA assignment_list

   48 ifblock: ifpart

   49 $@3: ε

   50 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-else action-getIndex tLBRACE body tRBRACE action-getIndex $@3 action-dec
   51        | ifpart tELSE ifblock

   52 $@4: ε

   53 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex $@4 action-dec

   54 action-if: ε

   55 action-else: ε

   56 $@5: ε

   57 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE $@5 action-dec

   58 action-while: ε

   59 printblock: tPRINT tLPAR condition tRPAR tSEMI

   60 returnblock: tRETURN equality_expression tSEMI

   61 condition: equality_expression
   62          | condition tAND condition
   63          | condition tOR condition
   64          | tNOT condition

   65 equality_expression: compare
   66                    | equality_expression tEQ compare
   67                    | equality_expression tNE compare

   68 compare: add_sub
   69        | compare tLT add_sub
   70        | compare tGT add_sub
   71        | compare tLE add_sub
   72        | compare tGE add_sub

   73 add_sub: div_mul
   74        | add_sub tADD div_mul
   75        | add_sub tSUB div_mul

   76 div_mul: single_value
   77        | div_mul tMUL single_value
   78        | div_mul tDIV single_value

   79 single_value: functionCall
   80             | tID
   81             | tNB


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tADD (258) 74
    tSUB (259) 75
    tMUL (260) 77
    tDIV (261) 78
    tLT (262) 69
    tGT (263) 70
    tNE (264) 67
    tEQ (265) 66
    tGE (266) 72
    tLE (267) 71
    tASSIGN (268) 24 26 46 47
    tAND (269) 62
    tOR (270) 63
    tNOT (271) 64
    tLBRACE (272) 37 45 50 53 57
    tRBRACE (273) 37 45 50 53 57
    tLPAR (274) 37 38 45 50 53 57 59
    tRPAR (275) 37 38 45 50 53 57 59
    tSEMI (276) 22 46 59 60
    tCOMMA (277) 14 25 26 42 47
    tIF (278) 50 53
    tELSE (279) 50 51
    tWHILE (280) 57
    tPRINT (281) 59
    tRETURN (282) 60
    tINT (283) 9 10
    tVOID (284) 8 12
    tMAIN (285) 45
    tCONST (286)
    tERROR (287)
    tNB <nb> (288) 81
    tID <var> (289) 15 23 24 25 26 37 38 46 47 80


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    action-inc (36)
        on left: 1
        on right: 37 38 45 50 53 57
    action-dec (37)
        on left: 2
        on right: 37 38 45 50 53 57
    action-getIndex <nb> (38)
        on left: 3
        on right: 37 38 45 50 53 57
    program (39)
        on left: 4 5 6
        on right: 0
    action-start (40)
        on left: 7
        on right: 5 6
    function_type (41)
        on left: 8 9
        on right: 37 45
    variable_type (42)
        on left: 10
        on right: 15 22
    parameter_list (43)
        on left: 11 12 13 14
        on right: 14 37 45
    parameter (44)
        on left: 15
        on right: 13 14
    body (45)
        on left: 16 17 18 19
        on right: 37 45 50 53 57
    declaration_list (46)
        on left: 20 21
        on right: 17 19 21
    declaration (47)
        on left: 22
        on right: 20 21
    identifiers_list (48)
        on left: 23 24 25 26
        on right: 22 25 26
    instruction_list (49)
        on left: 27 28
        on right: 18 19 28
    instruction (50)
        on left: 29 30 31 32 33
        on right: 27 28
    function_list (51)
        on left: 34 35
        on right: 6 35
    function (52)
        on left: 37
        on right: 34 35
    $@1 (53)
        on left: 36
        on right: 37
    functionCall <nb> (54)
        on left: 38
        on right: 79
    action-call0 <nb> (55)
        on left: 39
        on right: 38
    action-call1 <nb> (56)
        on left: 40
        on right: 38
    argument_list (57)
        on left: 41 42 43
        on right: 38 42
    main_function (58)
        on left: 45
        on right: 5 6
    $@2 (59)
        on left: 44
        on right: 45
    assignment_list (60)
        on left: 46 47
        on right: 29 47
    ifblock (61)
        on left: 48 50 51
        on right: 30 51
    $@3 (62)
        on left: 49
        on right: 50
    ifpart (63)
        on left: 53
        on right: 48 51
    $@4 (64)
        on left: 52
        on right: 53
    action-if <nb> (65)
        on left: 54
        on right: 50 53
    action-else <nb> (66)
        on left: 55
        on right: 50
    whileblock (67)
        on left: 57
        on right: 31
    $@5 (68)
        on left: 56
        on right: 57
    action-while <nb> (69)
        on left: 58
        on right: 57
    printblock (70)
        on left: 59
        on right: 32
    returnblock (71)
        on left: 60
        on right: 33
    condition <nb> (72)
        on left: 61 62 63 64
        on right: 50 53 57 59 62 63 64
    equality_expression <nb> (73)
        on left: 65 66 67
        on right: 24 26 42 43 46 47 60 61 66 67
    compare <nb> (74)
        on left: 68 69 70 71 72
        on right: 65 66 67 69 70 71 72
    add_sub <nb> (75)
        on left: 73 74 75
        on right: 68 69 70 71 72 74 75
    div_mul <nb> (76)
        on left: 76 77 78
        on right: 73 74 75 77 78
    single_value <nb> (77)
        on left: 79 80 81
        on right: 76 77 78


State 0

    0 $accept: • program $end

    $end      reduce using rule 4 (program)
    $default  reduce using rule 7 (action-start)

    program       go to state 1
    action-start  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    5 program: action-start • main_function
    6        | action-start • function_list main_function

    tINT   shift, and go to state 4
    tVOID  shift, and go to state 5

    function_type  go to state 6
    function_list  go to state 7
    function       go to state 8
    main_function  go to state 9


State 3

    0 $accept: program $end •

    $default  accept


State 4

    9 function_type: tINT •

    $default  reduce using rule 9 (function_type)


State 5

    8 function_type: tVOID •

    $default  reduce using rule 8 (function_type)


State 6

   37 function: function_type • tID action-inc action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE body tRBRACE action-dec
   45 main_function: function_type • tMAIN action-inc action-getIndex $@2 tLPAR parameter_list tRPAR tLBRACE body tRBRACE action-dec

    tMAIN  shift, and go to state 10
    tID    shift, and go to state 11


State 7

    6 program: action-start function_list • main_function
   35 function_list: function_list • function

    tINT   shift, and go to state 4
    tVOID  shift, and go to state 5

    function_type  go to state 6
    function       go to state 12
    main_function  go to state 13


State 8

   34 function_list: function •

    $default  reduce using rule 34 (function_list)


State 9

    5 program: action-start main_function •

    $default  reduce using rule 5 (program)


State 10

   45 main_function: function_type tMAIN • action-inc action-getIndex $@2 tLPAR parameter_list tRPAR tLBRACE body tRBRACE action-dec

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 14


State 11

   37 function: function_type tID • action-inc action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE body tRBRACE action-dec

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 15


State 12

   35 function_list: function_list function •

    $default  reduce using rule 35 (function_list)


State 13

    6 program: action-start function_list main_function •

    $default  reduce using rule 6 (program)


State 14

   45 main_function: function_type tMAIN action-inc • action-getIndex $@2 tLPAR parameter_list tRPAR tLBRACE body tRBRACE action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 16


State 15

   37 function: function_type tID action-inc • action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE body tRBRACE action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 17


State 16

   45 main_function: function_type tMAIN action-inc action-getIndex • $@2 tLPAR parameter_list tRPAR tLBRACE body tRBRACE action-dec

    $default  reduce using rule 44 ($@2)

    $@2  go to state 18


State 17

   37 function: function_type tID action-inc action-getIndex • $@1 tLPAR parameter_list tRPAR tLBRACE body tRBRACE action-dec

    $default  reduce using rule 36 ($@1)

    $@1  go to state 19


State 18

   45 main_function: function_type tMAIN action-inc action-getIndex $@2 • tLPAR parameter_list tRPAR tLBRACE body tRBRACE action-dec

    tLPAR  shift, and go to state 20


State 19

   37 function: function_type tID action-inc action-getIndex $@1 • tLPAR parameter_list tRPAR tLBRACE body tRBRACE action-dec

    tLPAR  shift, and go to state 21


State 20

   45 main_function: function_type tMAIN action-inc action-getIndex $@2 tLPAR • parameter_list tRPAR tLBRACE body tRBRACE action-dec

    tINT   shift, and go to state 22
    tVOID  shift, and go to state 23

    $default  reduce using rule 11 (parameter_list)

    variable_type   go to state 24
    parameter_list  go to state 25
    parameter       go to state 26


State 21

   37 function: function_type tID action-inc action-getIndex $@1 tLPAR • parameter_list tRPAR tLBRACE body tRBRACE action-dec

    tINT   shift, and go to state 22
    tVOID  shift, and go to state 23

    $default  reduce using rule 11 (parameter_list)

    variable_type   go to state 24
    parameter_list  go to state 27
    parameter       go to state 26


State 22

   10 variable_type: tINT •

    $default  reduce using rule 10 (variable_type)


State 23

   12 parameter_list: tVOID •

    $default  reduce using rule 12 (parameter_list)


State 24

   15 parameter: variable_type • tID

    tID  shift, and go to state 28


State 25

   14 parameter_list: parameter_list • tCOMMA parameter
   45 main_function: function_type tMAIN action-inc action-getIndex $@2 tLPAR parameter_list • tRPAR tLBRACE body tRBRACE action-dec

    tRPAR   shift, and go to state 29
    tCOMMA  shift, and go to state 30


State 26

   13 parameter_list: parameter •

    $default  reduce using rule 13 (parameter_list)


State 27

   14 parameter_list: parameter_list • tCOMMA parameter
   37 function: function_type tID action-inc action-getIndex $@1 tLPAR parameter_list • tRPAR tLBRACE body tRBRACE action-dec

    tRPAR   shift, and go to state 31
    tCOMMA  shift, and go to state 30


State 28

   15 parameter: variable_type tID •

    $default  reduce using rule 15 (parameter)


State 29

   45 main_function: function_type tMAIN action-inc action-getIndex $@2 tLPAR parameter_list tRPAR • tLBRACE body tRBRACE action-dec

    tLBRACE  shift, and go to state 32


State 30

   14 parameter_list: parameter_list tCOMMA • parameter

    tINT  shift, and go to state 22

    variable_type  go to state 24
    parameter      go to state 33


State 31

   37 function: function_type tID action-inc action-getIndex $@1 tLPAR parameter_list tRPAR • tLBRACE body tRBRACE action-dec

    tLBRACE  shift, and go to state 34


State 32

   45 main_function: function_type tMAIN action-inc action-getIndex $@2 tLPAR parameter_list tRPAR tLBRACE • body tRBRACE action-dec

    tIF      shift, and go to state 35
    tWHILE   shift, and go to state 36
    tPRINT   shift, and go to state 37
    tRETURN  shift, and go to state 38
    tINT     shift, and go to state 22
    tID      shift, and go to state 39

    $default  reduce using rule 16 (body)

    variable_type     go to state 40
    body              go to state 41
    declaration_list  go to state 42
    declaration       go to state 43
    instruction_list  go to state 44
    instruction       go to state 45
    assignment_list   go to state 46
    ifblock           go to state 47
    ifpart            go to state 48
    whileblock        go to state 49
    printblock        go to state 50
    returnblock       go to state 51


State 33

   14 parameter_list: parameter_list tCOMMA parameter •

    $default  reduce using rule 14 (parameter_list)


State 34

   37 function: function_type tID action-inc action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE • body tRBRACE action-dec

    tIF      shift, and go to state 35
    tWHILE   shift, and go to state 36
    tPRINT   shift, and go to state 37
    tRETURN  shift, and go to state 38
    tINT     shift, and go to state 22
    tID      shift, and go to state 39

    $default  reduce using rule 16 (body)

    variable_type     go to state 40
    body              go to state 52
    declaration_list  go to state 42
    declaration       go to state 43
    instruction_list  go to state 44
    instruction       go to state 45
    assignment_list   go to state 46
    ifblock           go to state 47
    ifpart            go to state 48
    whileblock        go to state 49
    printblock        go to state 50
    returnblock       go to state 51


State 35

   50 ifblock: tIF • tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-else action-getIndex tLBRACE body tRBRACE action-getIndex $@3 action-dec
   53 ifpart: tIF • tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex $@4 action-dec

    tLPAR  shift, and go to state 53


State 36

   57 whileblock: tWHILE • tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE $@5 action-dec

    tLPAR  shift, and go to state 54


State 37

   59 printblock: tPRINT • tLPAR condition tRPAR tSEMI

    tLPAR  shift, and go to state 55


State 38

   60 returnblock: tRETURN • equality_expression tSEMI

    tNB  shift, and go to state 56
    tID  shift, and go to state 57

    functionCall         go to state 58
    equality_expression  go to state 59
    compare              go to state 60
    add_sub              go to state 61
    div_mul              go to state 62
    single_value         go to state 63


State 39

   46 assignment_list: tID • tASSIGN equality_expression tSEMI
   47                | tID • tASSIGN equality_expression tCOMMA assignment_list

    tASSIGN  shift, and go to state 64


State 40

   22 declaration: variable_type • identifiers_list tSEMI

    tID  shift, and go to state 65

    identifiers_list  go to state 66


State 41

   45 main_function: function_type tMAIN action-inc action-getIndex $@2 tLPAR parameter_list tRPAR tLBRACE body • tRBRACE action-dec

    tRBRACE  shift, and go to state 67


State 42

   17 body: declaration_list •
   19     | declaration_list • instruction_list
   21 declaration_list: declaration_list • declaration

    tIF      shift, and go to state 35
    tWHILE   shift, and go to state 36
    tPRINT   shift, and go to state 37
    tRETURN  shift, and go to state 38
    tINT     shift, and go to state 22
    tID      shift, and go to state 39

    $default  reduce using rule 17 (body)

    variable_type     go to state 40
    declaration       go to state 68
    instruction_list  go to state 69
    instruction       go to state 45
    assignment_list   go to state 46
    ifblock           go to state 47
    ifpart            go to state 48
    whileblock        go to state 49
    printblock        go to state 50
    returnblock       go to state 51


State 43

   20 declaration_list: declaration •

    $default  reduce using rule 20 (declaration_list)


State 44

   18 body: instruction_list •
   28 instruction_list: instruction_list • instruction

    tIF      shift, and go to state 35
    tWHILE   shift, and go to state 36
    tPRINT   shift, and go to state 37
    tRETURN  shift, and go to state 38
    tID      shift, and go to state 39

    $default  reduce using rule 18 (body)

    instruction      go to state 70
    assignment_list  go to state 46
    ifblock          go to state 47
    ifpart           go to state 48
    whileblock       go to state 49
    printblock       go to state 50
    returnblock      go to state 51


State 45

   27 instruction_list: instruction •

    $default  reduce using rule 27 (instruction_list)


State 46

   29 instruction: assignment_list •

    $default  reduce using rule 29 (instruction)


State 47

   30 instruction: ifblock •

    $default  reduce using rule 30 (instruction)


State 48

   48 ifblock: ifpart •
   51        | ifpart • tELSE ifblock

    tELSE  shift, and go to state 71

    $default  reduce using rule 48 (ifblock)


State 49

   31 instruction: whileblock •

    $default  reduce using rule 31 (instruction)


State 50

   32 instruction: printblock •

    $default  reduce using rule 32 (instruction)


State 51

   33 instruction: returnblock •

    $default  reduce using rule 33 (instruction)


State 52

   37 function: function_type tID action-inc action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE body • tRBRACE action-dec

    tRBRACE  shift, and go to state 72


State 53

   50 ifblock: tIF tLPAR • condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-else action-getIndex tLBRACE body tRBRACE action-getIndex $@3 action-dec
   53 ifpart: tIF tLPAR • condition tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex $@4 action-dec

    tNOT  shift, and go to state 73
    tNB   shift, and go to state 56
    tID   shift, and go to state 57

    functionCall         go to state 58
    condition            go to state 74
    equality_expression  go to state 75
    compare              go to state 60
    add_sub              go to state 61
    div_mul              go to state 62
    single_value         go to state 63


State 54

   57 whileblock: tWHILE tLPAR • action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE $@5 action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 76


State 55

   59 printblock: tPRINT tLPAR • condition tRPAR tSEMI

    tNOT  shift, and go to state 73
    tNB   shift, and go to state 56
    tID   shift, and go to state 57

    functionCall         go to state 58
    condition            go to state 77
    equality_expression  go to state 75
    compare              go to state 60
    add_sub              go to state 61
    div_mul              go to state 62
    single_value         go to state 63


State 56

   81 single_value: tNB •

    $default  reduce using rule 81 (single_value)


State 57

   38 functionCall: tID • tLPAR action-call0 action-inc action-call1 action-dec argument_list tRPAR action-getIndex
   80 single_value: tID •

    tLPAR  shift, and go to state 78

    $default  reduce using rule 80 (single_value)


State 58

   79 single_value: functionCall •

    $default  reduce using rule 79 (single_value)


State 59

   60 returnblock: tRETURN equality_expression • tSEMI
   66 equality_expression: equality_expression • tEQ compare
   67                    | equality_expression • tNE compare

    tNE    shift, and go to state 79
    tEQ    shift, and go to state 80
    tSEMI  shift, and go to state 81


State 60

   65 equality_expression: compare •
   69 compare: compare • tLT add_sub
   70        | compare • tGT add_sub
   71        | compare • tLE add_sub
   72        | compare • tGE add_sub

    tLT  shift, and go to state 82
    tGT  shift, and go to state 83
    tGE  shift, and go to state 84
    tLE  shift, and go to state 85

    $default  reduce using rule 65 (equality_expression)


State 61

   68 compare: add_sub •
   74 add_sub: add_sub • tADD div_mul
   75        | add_sub • tSUB div_mul

    tADD  shift, and go to state 86
    tSUB  shift, and go to state 87

    $default  reduce using rule 68 (compare)


State 62

   73 add_sub: div_mul •
   77 div_mul: div_mul • tMUL single_value
   78        | div_mul • tDIV single_value

    tMUL  shift, and go to state 88
    tDIV  shift, and go to state 89

    $default  reduce using rule 73 (add_sub)


State 63

   76 div_mul: single_value •

    $default  reduce using rule 76 (div_mul)


State 64

   46 assignment_list: tID tASSIGN • equality_expression tSEMI
   47                | tID tASSIGN • equality_expression tCOMMA assignment_list

    tNB  shift, and go to state 56
    tID  shift, and go to state 57

    functionCall         go to state 58
    equality_expression  go to state 90
    compare              go to state 60
    add_sub              go to state 61
    div_mul              go to state 62
    single_value         go to state 63


State 65

   23 identifiers_list: tID •
   24                 | tID • tASSIGN equality_expression

    tASSIGN  shift, and go to state 91

    $default  reduce using rule 23 (identifiers_list)


State 66

   22 declaration: variable_type identifiers_list • tSEMI
   25 identifiers_list: identifiers_list • tCOMMA tID
   26                 | identifiers_list • tCOMMA tID tASSIGN equality_expression

    tSEMI   shift, and go to state 92
    tCOMMA  shift, and go to state 93


State 67

   45 main_function: function_type tMAIN action-inc action-getIndex $@2 tLPAR parameter_list tRPAR tLBRACE body tRBRACE • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 94


State 68

   21 declaration_list: declaration_list declaration •

    $default  reduce using rule 21 (declaration_list)


State 69

   19 body: declaration_list instruction_list •
   28 instruction_list: instruction_list • instruction

    tIF      shift, and go to state 35
    tWHILE   shift, and go to state 36
    tPRINT   shift, and go to state 37
    tRETURN  shift, and go to state 38
    tID      shift, and go to state 39

    $default  reduce using rule 19 (body)

    instruction      go to state 70
    assignment_list  go to state 46
    ifblock          go to state 47
    ifpart           go to state 48
    whileblock       go to state 49
    printblock       go to state 50
    returnblock      go to state 51


State 70

   28 instruction_list: instruction_list instruction •

    $default  reduce using rule 28 (instruction_list)


State 71

   51 ifblock: ifpart tELSE • ifblock

    tIF  shift, and go to state 35

    ifblock  go to state 95
    ifpart   go to state 48


State 72

   37 function: function_type tID action-inc action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE body tRBRACE • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 96


State 73

   64 condition: tNOT • condition

    tNOT  shift, and go to state 73
    tNB   shift, and go to state 56
    tID   shift, and go to state 57

    functionCall         go to state 58
    condition            go to state 97
    equality_expression  go to state 75
    compare              go to state 60
    add_sub              go to state 61
    div_mul              go to state 62
    single_value         go to state 63


State 74

   50 ifblock: tIF tLPAR condition • tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-else action-getIndex tLBRACE body tRBRACE action-getIndex $@3 action-dec
   53 ifpart: tIF tLPAR condition • tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex $@4 action-dec
   62 condition: condition • tAND condition
   63          | condition • tOR condition

    tAND   shift, and go to state 98
    tOR    shift, and go to state 99
    tRPAR  shift, and go to state 100


State 75

   61 condition: equality_expression •
   66 equality_expression: equality_expression • tEQ compare
   67                    | equality_expression • tNE compare

    tNE  shift, and go to state 79
    tEQ  shift, and go to state 80

    $default  reduce using rule 61 (condition)


State 76

   57 whileblock: tWHILE tLPAR action-getIndex • condition tRPAR action-while action-inc tLBRACE body tRBRACE $@5 action-dec

    tNOT  shift, and go to state 73
    tNB   shift, and go to state 56
    tID   shift, and go to state 57

    functionCall         go to state 58
    condition            go to state 101
    equality_expression  go to state 75
    compare              go to state 60
    add_sub              go to state 61
    div_mul              go to state 62
    single_value         go to state 63


State 77

   59 printblock: tPRINT tLPAR condition • tRPAR tSEMI
   62 condition: condition • tAND condition
   63          | condition • tOR condition

    tAND   shift, and go to state 98
    tOR    shift, and go to state 99
    tRPAR  shift, and go to state 102


State 78

   38 functionCall: tID tLPAR • action-call0 action-inc action-call1 action-dec argument_list tRPAR action-getIndex

    $default  reduce using rule 39 (action-call0)

    action-call0  go to state 103


State 79

   67 equality_expression: equality_expression tNE • compare

    tNB  shift, and go to state 56
    tID  shift, and go to state 57

    functionCall  go to state 58
    compare       go to state 104
    add_sub       go to state 61
    div_mul       go to state 62
    single_value  go to state 63


State 80

   66 equality_expression: equality_expression tEQ • compare

    tNB  shift, and go to state 56
    tID  shift, and go to state 57

    functionCall  go to state 58
    compare       go to state 105
    add_sub       go to state 61
    div_mul       go to state 62
    single_value  go to state 63


State 81

   60 returnblock: tRETURN equality_expression tSEMI •

    $default  reduce using rule 60 (returnblock)


State 82

   69 compare: compare tLT • add_sub

    tNB  shift, and go to state 56
    tID  shift, and go to state 57

    functionCall  go to state 58
    add_sub       go to state 106
    div_mul       go to state 62
    single_value  go to state 63


State 83

   70 compare: compare tGT • add_sub

    tNB  shift, and go to state 56
    tID  shift, and go to state 57

    functionCall  go to state 58
    add_sub       go to state 107
    div_mul       go to state 62
    single_value  go to state 63


State 84

   72 compare: compare tGE • add_sub

    tNB  shift, and go to state 56
    tID  shift, and go to state 57

    functionCall  go to state 58
    add_sub       go to state 108
    div_mul       go to state 62
    single_value  go to state 63


State 85

   71 compare: compare tLE • add_sub

    tNB  shift, and go to state 56
    tID  shift, and go to state 57

    functionCall  go to state 58
    add_sub       go to state 109
    div_mul       go to state 62
    single_value  go to state 63


State 86

   74 add_sub: add_sub tADD • div_mul

    tNB  shift, and go to state 56
    tID  shift, and go to state 57

    functionCall  go to state 58
    div_mul       go to state 110
    single_value  go to state 63


State 87

   75 add_sub: add_sub tSUB • div_mul

    tNB  shift, and go to state 56
    tID  shift, and go to state 57

    functionCall  go to state 58
    div_mul       go to state 111
    single_value  go to state 63


State 88

   77 div_mul: div_mul tMUL • single_value

    tNB  shift, and go to state 56
    tID  shift, and go to state 57

    functionCall  go to state 58
    single_value  go to state 112


State 89

   78 div_mul: div_mul tDIV • single_value

    tNB  shift, and go to state 56
    tID  shift, and go to state 57

    functionCall  go to state 58
    single_value  go to state 113


State 90

   46 assignment_list: tID tASSIGN equality_expression • tSEMI
   47                | tID tASSIGN equality_expression • tCOMMA assignment_list
   66 equality_expression: equality_expression • tEQ compare
   67                    | equality_expression • tNE compare

    tNE     shift, and go to state 79
    tEQ     shift, and go to state 80
    tSEMI   shift, and go to state 114
    tCOMMA  shift, and go to state 115


State 91

   24 identifiers_list: tID tASSIGN • equality_expression

    tNB  shift, and go to state 56
    tID  shift, and go to state 57

    functionCall         go to state 58
    equality_expression  go to state 116
    compare              go to state 60
    add_sub              go to state 61
    div_mul              go to state 62
    single_value         go to state 63


State 92

   22 declaration: variable_type identifiers_list tSEMI •

    $default  reduce using rule 22 (declaration)


State 93

   25 identifiers_list: identifiers_list tCOMMA • tID
   26                 | identifiers_list tCOMMA • tID tASSIGN equality_expression

    tID  shift, and go to state 117


State 94

   45 main_function: function_type tMAIN action-inc action-getIndex $@2 tLPAR parameter_list tRPAR tLBRACE body tRBRACE action-dec •

    $default  reduce using rule 45 (main_function)


State 95

   51 ifblock: ifpart tELSE ifblock •

    $default  reduce using rule 51 (ifblock)


State 96

   37 function: function_type tID action-inc action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE body tRBRACE action-dec •

    $default  reduce using rule 37 (function)


State 97

   62 condition: condition • tAND condition
   63          | condition • tOR condition
   64          | tNOT condition •

    tAND  shift, and go to state 98
    tOR   shift, and go to state 99

    tAND      [reduce using rule 64 (condition)]
    tOR       [reduce using rule 64 (condition)]
    $default  reduce using rule 64 (condition)


State 98

   62 condition: condition tAND • condition

    tNOT  shift, and go to state 73
    tNB   shift, and go to state 56
    tID   shift, and go to state 57

    functionCall         go to state 58
    condition            go to state 118
    equality_expression  go to state 75
    compare              go to state 60
    add_sub              go to state 61
    div_mul              go to state 62
    single_value         go to state 63


State 99

   63 condition: condition tOR • condition

    tNOT  shift, and go to state 73
    tNB   shift, and go to state 56
    tID   shift, and go to state 57

    functionCall         go to state 58
    condition            go to state 119
    equality_expression  go to state 75
    compare              go to state 60
    add_sub              go to state 61
    div_mul              go to state 62
    single_value         go to state 63


State 100

   50 ifblock: tIF tLPAR condition tRPAR • action-if action-inc tLBRACE body tRBRACE tELSE action-else action-getIndex tLBRACE body tRBRACE action-getIndex $@3 action-dec
   53 ifpart: tIF tLPAR condition tRPAR • action-if action-inc tLBRACE body tRBRACE action-getIndex $@4 action-dec

    $default  reduce using rule 54 (action-if)

    action-if  go to state 120


State 101

   57 whileblock: tWHILE tLPAR action-getIndex condition • tRPAR action-while action-inc tLBRACE body tRBRACE $@5 action-dec
   62 condition: condition • tAND condition
   63          | condition • tOR condition

    tAND   shift, and go to state 98
    tOR    shift, and go to state 99
    tRPAR  shift, and go to state 121


State 102

   59 printblock: tPRINT tLPAR condition tRPAR • tSEMI

    tSEMI  shift, and go to state 122


State 103

   38 functionCall: tID tLPAR action-call0 • action-inc action-call1 action-dec argument_list tRPAR action-getIndex

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 123


State 104

   67 equality_expression: equality_expression tNE compare •
   69 compare: compare • tLT add_sub
   70        | compare • tGT add_sub
   71        | compare • tLE add_sub
   72        | compare • tGE add_sub

    tLT  shift, and go to state 82
    tGT  shift, and go to state 83
    tGE  shift, and go to state 84
    tLE  shift, and go to state 85

    $default  reduce using rule 67 (equality_expression)


State 105

   66 equality_expression: equality_expression tEQ compare •
   69 compare: compare • tLT add_sub
   70        | compare • tGT add_sub
   71        | compare • tLE add_sub
   72        | compare • tGE add_sub

    tLT  shift, and go to state 82
    tGT  shift, and go to state 83
    tGE  shift, and go to state 84
    tLE  shift, and go to state 85

    $default  reduce using rule 66 (equality_expression)


State 106

   69 compare: compare tLT add_sub •
   74 add_sub: add_sub • tADD div_mul
   75        | add_sub • tSUB div_mul

    tADD  shift, and go to state 86
    tSUB  shift, and go to state 87

    $default  reduce using rule 69 (compare)


State 107

   70 compare: compare tGT add_sub •
   74 add_sub: add_sub • tADD div_mul
   75        | add_sub • tSUB div_mul

    tADD  shift, and go to state 86
    tSUB  shift, and go to state 87

    $default  reduce using rule 70 (compare)


State 108

   72 compare: compare tGE add_sub •
   74 add_sub: add_sub • tADD div_mul
   75        | add_sub • tSUB div_mul

    tADD  shift, and go to state 86
    tSUB  shift, and go to state 87

    $default  reduce using rule 72 (compare)


State 109

   71 compare: compare tLE add_sub •
   74 add_sub: add_sub • tADD div_mul
   75        | add_sub • tSUB div_mul

    tADD  shift, and go to state 86
    tSUB  shift, and go to state 87

    $default  reduce using rule 71 (compare)


State 110

   74 add_sub: add_sub tADD div_mul •
   77 div_mul: div_mul • tMUL single_value
   78        | div_mul • tDIV single_value

    tMUL  shift, and go to state 88
    tDIV  shift, and go to state 89

    $default  reduce using rule 74 (add_sub)


State 111

   75 add_sub: add_sub tSUB div_mul •
   77 div_mul: div_mul • tMUL single_value
   78        | div_mul • tDIV single_value

    tMUL  shift, and go to state 88
    tDIV  shift, and go to state 89

    $default  reduce using rule 75 (add_sub)


State 112

   77 div_mul: div_mul tMUL single_value •

    $default  reduce using rule 77 (div_mul)


State 113

   78 div_mul: div_mul tDIV single_value •

    $default  reduce using rule 78 (div_mul)


State 114

   46 assignment_list: tID tASSIGN equality_expression tSEMI •

    $default  reduce using rule 46 (assignment_list)


State 115

   47 assignment_list: tID tASSIGN equality_expression tCOMMA • assignment_list

    tID  shift, and go to state 39

    assignment_list  go to state 124


State 116

   24 identifiers_list: tID tASSIGN equality_expression •
   66 equality_expression: equality_expression • tEQ compare
   67                    | equality_expression • tNE compare

    tNE  shift, and go to state 79
    tEQ  shift, and go to state 80

    $default  reduce using rule 24 (identifiers_list)


State 117

   25 identifiers_list: identifiers_list tCOMMA tID •
   26                 | identifiers_list tCOMMA tID • tASSIGN equality_expression

    tASSIGN  shift, and go to state 125

    $default  reduce using rule 25 (identifiers_list)


State 118

   62 condition: condition • tAND condition
   62          | condition tAND condition •
   63          | condition • tOR condition

    $default  reduce using rule 62 (condition)


State 119

   62 condition: condition • tAND condition
   63          | condition • tOR condition
   63          | condition tOR condition •

    $default  reduce using rule 63 (condition)


State 120

   50 ifblock: tIF tLPAR condition tRPAR action-if • action-inc tLBRACE body tRBRACE tELSE action-else action-getIndex tLBRACE body tRBRACE action-getIndex $@3 action-dec
   53 ifpart: tIF tLPAR condition tRPAR action-if • action-inc tLBRACE body tRBRACE action-getIndex $@4 action-dec

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 126


State 121

   57 whileblock: tWHILE tLPAR action-getIndex condition tRPAR • action-while action-inc tLBRACE body tRBRACE $@5 action-dec

    $default  reduce using rule 58 (action-while)

    action-while  go to state 127


State 122

   59 printblock: tPRINT tLPAR condition tRPAR tSEMI •

    $default  reduce using rule 59 (printblock)


State 123

   38 functionCall: tID tLPAR action-call0 action-inc • action-call1 action-dec argument_list tRPAR action-getIndex

    $default  reduce using rule 40 (action-call1)

    action-call1  go to state 128


State 124

   47 assignment_list: tID tASSIGN equality_expression tCOMMA assignment_list •

    $default  reduce using rule 47 (assignment_list)


State 125

   26 identifiers_list: identifiers_list tCOMMA tID tASSIGN • equality_expression

    tNB  shift, and go to state 56
    tID  shift, and go to state 57

    functionCall         go to state 58
    equality_expression  go to state 129
    compare              go to state 60
    add_sub              go to state 61
    div_mul              go to state 62
    single_value         go to state 63


State 126

   50 ifblock: tIF tLPAR condition tRPAR action-if action-inc • tLBRACE body tRBRACE tELSE action-else action-getIndex tLBRACE body tRBRACE action-getIndex $@3 action-dec
   53 ifpart: tIF tLPAR condition tRPAR action-if action-inc • tLBRACE body tRBRACE action-getIndex $@4 action-dec

    tLBRACE  shift, and go to state 130


State 127

   57 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while • action-inc tLBRACE body tRBRACE $@5 action-dec

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 131


State 128

   38 functionCall: tID tLPAR action-call0 action-inc action-call1 • action-dec argument_list tRPAR action-getIndex

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 132


State 129

   26 identifiers_list: identifiers_list tCOMMA tID tASSIGN equality_expression •
   66 equality_expression: equality_expression • tEQ compare
   67                    | equality_expression • tNE compare

    tNE  shift, and go to state 79
    tEQ  shift, and go to state 80

    $default  reduce using rule 26 (identifiers_list)


State 130

   50 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE • body tRBRACE tELSE action-else action-getIndex tLBRACE body tRBRACE action-getIndex $@3 action-dec
   53 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE • body tRBRACE action-getIndex $@4 action-dec

    tIF      shift, and go to state 35
    tWHILE   shift, and go to state 36
    tPRINT   shift, and go to state 37
    tRETURN  shift, and go to state 38
    tINT     shift, and go to state 22
    tID      shift, and go to state 39

    $default  reduce using rule 16 (body)

    variable_type     go to state 40
    body              go to state 133
    declaration_list  go to state 42
    declaration       go to state 43
    instruction_list  go to state 44
    instruction       go to state 45
    assignment_list   go to state 46
    ifblock           go to state 47
    ifpart            go to state 48
    whileblock        go to state 49
    printblock        go to state 50
    returnblock       go to state 51


State 131

   57 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc • tLBRACE body tRBRACE $@5 action-dec

    tLBRACE  shift, and go to state 134


State 132

   38 functionCall: tID tLPAR action-call0 action-inc action-call1 action-dec • argument_list tRPAR action-getIndex

    tNB  shift, and go to state 56
    tID  shift, and go to state 57

    $default  reduce using rule 41 (argument_list)

    functionCall         go to state 58
    argument_list        go to state 135
    equality_expression  go to state 136
    compare              go to state 60
    add_sub              go to state 61
    div_mul              go to state 62
    single_value         go to state 63


State 133

   50 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body • tRBRACE tELSE action-else action-getIndex tLBRACE body tRBRACE action-getIndex $@3 action-dec
   53 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body • tRBRACE action-getIndex $@4 action-dec

    tRBRACE  shift, and go to state 137


State 134

   57 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE • body tRBRACE $@5 action-dec

    tIF      shift, and go to state 35
    tWHILE   shift, and go to state 36
    tPRINT   shift, and go to state 37
    tRETURN  shift, and go to state 38
    tINT     shift, and go to state 22
    tID      shift, and go to state 39

    $default  reduce using rule 16 (body)

    variable_type     go to state 40
    body              go to state 138
    declaration_list  go to state 42
    declaration       go to state 43
    instruction_list  go to state 44
    instruction       go to state 45
    assignment_list   go to state 46
    ifblock           go to state 47
    ifpart            go to state 48
    whileblock        go to state 49
    printblock        go to state 50
    returnblock       go to state 51


State 135

   38 functionCall: tID tLPAR action-call0 action-inc action-call1 action-dec argument_list • tRPAR action-getIndex
   42 argument_list: argument_list • tCOMMA equality_expression

    tRPAR   shift, and go to state 139
    tCOMMA  shift, and go to state 140


State 136

   43 argument_list: equality_expression •
   66 equality_expression: equality_expression • tEQ compare
   67                    | equality_expression • tNE compare

    tNE  shift, and go to state 79
    tEQ  shift, and go to state 80

    $default  reduce using rule 43 (argument_list)


State 137

   50 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE • tELSE action-else action-getIndex tLBRACE body tRBRACE action-getIndex $@3 action-dec
   53 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE • action-getIndex $@4 action-dec

    tELSE  shift, and go to state 141

    tELSE     [reduce using rule 3 (action-getIndex)]
    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 142


State 138

   57 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body • tRBRACE $@5 action-dec

    tRBRACE  shift, and go to state 143


State 139

   38 functionCall: tID tLPAR action-call0 action-inc action-call1 action-dec argument_list tRPAR • action-getIndex

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 144


State 140

   42 argument_list: argument_list tCOMMA • equality_expression

    tNB  shift, and go to state 56
    tID  shift, and go to state 57

    functionCall         go to state 58
    equality_expression  go to state 145
    compare              go to state 60
    add_sub              go to state 61
    div_mul              go to state 62
    single_value         go to state 63


State 141

   50 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE • action-else action-getIndex tLBRACE body tRBRACE action-getIndex $@3 action-dec

    $default  reduce using rule 55 (action-else)

    action-else  go to state 146


State 142

   53 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex • $@4 action-dec

    $default  reduce using rule 52 ($@4)

    $@4  go to state 147


State 143

   57 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE • $@5 action-dec

    $default  reduce using rule 56 ($@5)

    $@5  go to state 148


State 144

   38 functionCall: tID tLPAR action-call0 action-inc action-call1 action-dec argument_list tRPAR action-getIndex •

    $default  reduce using rule 38 (functionCall)


State 145

   42 argument_list: argument_list tCOMMA equality_expression •
   66 equality_expression: equality_expression • tEQ compare
   67                    | equality_expression • tNE compare

    tNE  shift, and go to state 79
    tEQ  shift, and go to state 80

    $default  reduce using rule 42 (argument_list)


State 146

   50 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-else • action-getIndex tLBRACE body tRBRACE action-getIndex $@3 action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 149


State 147

   53 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex $@4 • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 150


State 148

   57 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE $@5 • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 151


State 149

   50 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-else action-getIndex • tLBRACE body tRBRACE action-getIndex $@3 action-dec

    tLBRACE  shift, and go to state 152


State 150

   53 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex $@4 action-dec •

    $default  reduce using rule 53 (ifpart)


State 151

   57 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE $@5 action-dec •

    $default  reduce using rule 57 (whileblock)


State 152

   50 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-else action-getIndex tLBRACE • body tRBRACE action-getIndex $@3 action-dec

    tIF      shift, and go to state 35
    tWHILE   shift, and go to state 36
    tPRINT   shift, and go to state 37
    tRETURN  shift, and go to state 38
    tINT     shift, and go to state 22
    tID      shift, and go to state 39

    $default  reduce using rule 16 (body)

    variable_type     go to state 40
    body              go to state 153
    declaration_list  go to state 42
    declaration       go to state 43
    instruction_list  go to state 44
    instruction       go to state 45
    assignment_list   go to state 46
    ifblock           go to state 47
    ifpart            go to state 48
    whileblock        go to state 49
    printblock        go to state 50
    returnblock       go to state 51


State 153

   50 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-else action-getIndex tLBRACE body • tRBRACE action-getIndex $@3 action-dec

    tRBRACE  shift, and go to state 154


State 154

   50 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-else action-getIndex tLBRACE body tRBRACE • action-getIndex $@3 action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 155


State 155

   50 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-else action-getIndex tLBRACE body tRBRACE action-getIndex • $@3 action-dec

    $default  reduce using rule 49 ($@3)

    $@3  go to state 156


State 156

   50 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-else action-getIndex tLBRACE body tRBRACE action-getIndex $@3 • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 157


State 157

   50 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-else action-getIndex tLBRACE body tRBRACE action-getIndex $@3 action-dec •

    $default  reduce using rule 50 (ifblock)
