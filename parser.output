Terminals unused in grammar

    tCONST
    tERROR


State 153 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 action-inc: ε

    2 action-dec: ε

    3 action-getIndex: ε

    4 program: ε
    5        | action-start main_function
    6        | action-start function_list main_function

    7 action-start: ε

    8 function_type: tVOID
    9              | tINT

   10 variable_type: tINT

   11 parameter_list: ε
   12               | tVOID
   13               | parameter
   14               | tCOMMA parameter tCOMMA parameter_list

   15 parameter: variable_type tID

   16 body: ε
   17     | declaration_list
   18     | instruction_list
   19     | declaration_list instruction_list

   20 declaration_list: declaration
   21                 | declaration_list declaration

   22 declaration: variable_type identifiers_list tSEMI

   23 identifiers_list: tID
   24                 | tID tASSIGN condition
   25                 | identifiers_list tCOMMA tID
   26                 | identifiers_list tCOMMA tID tASSIGN condition

   27 instruction_list: instruction
   28                 | instruction_list instruction

   29 instruction: assignment_list
   30            | ifblock
   31            | whileblock
   32            | printblock
   33            | returnblock

   34 action-fun: ε

   35 function_list: function
   36              | function_list function

   37 $@1: ε

   38 $@2: ε

   39 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec $@2 action-dec

   40 functionCall: tID tLPAR action-call0 action-call1 argument_list tRPAR action-getIndex

   41 action-call0: ε

   42 action-call1: ε

   43 argument_list: ε
   44              | argument_list tCOMMA condition
   45              | condition

   46 $@3: ε

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex $@3 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec action-dec

   48 assignment_list: tID tASSIGN condition tSEMI
   49                | tID tASSIGN condition tCOMMA assignment_list

   50 $@4: ε

   51 ifblock: ifpart $@4 action-dec

   52 $@5: ε

   53 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-dec action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@5 action-dec

   54 $@6: ε

   55 ifblock: ifpart tELSE ifblock action-getIndex $@6 action-dec

   56 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex

   57 action-if: ε

   58 action-else: ε

   59 $@7: ε

   60 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE $@7 action-dec

   61 action-while: ε

   62 printblock: tPRINT tLPAR condition tRPAR tSEMI

   63 returnblock: tRETURN condition tSEMI

   64 condition: equality_expression
   65          | condition tAND condition
   66          | condition tOR condition
   67          | tNOT condition

   68 equality_expression: compare
   69                    | equality_expression tEQ compare
   70                    | equality_expression tNE compare

   71 compare: add_sub
   72        | compare tLT add_sub
   73        | compare tGT add_sub
   74        | compare tLE add_sub
   75        | compare tGE add_sub

   76 add_sub: div_mul
   77        | add_sub tADD div_mul
   78        | add_sub tSUB div_mul

   79 div_mul: single_value
   80        | div_mul tMUL single_value
   81        | div_mul tDIV single_value

   82 single_value: functionCall
   83             | tID
   84             | tNB


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tADD (258) 77
    tSUB (259) 78
    tMUL (260) 80
    tDIV (261) 81
    tLT (262) 72
    tGT (263) 73
    tNE (264) 70
    tEQ (265) 69
    tGE (266) 75
    tLE (267) 74
    tASSIGN (268) 24 26 48 49
    tAND (269) 65
    tOR (270) 66
    tNOT (271) 67
    tLBRACE (272) 39 47 53 56 60
    tRBRACE (273) 39 47 53 56 60
    tLPAR (274) 39 40 47 53 56 60 62
    tRPAR (275) 39 40 47 53 56 60 62
    tSEMI (276) 22 48 62 63
    tCOMMA (277) 14 25 26 44 49
    tIF (278) 53 56
    tELSE (279) 53 55
    tWHILE (280) 60
    tPRINT (281) 62
    tRETURN (282) 63
    tINT (283) 9 10
    tVOID (284) 8 12
    tMAIN (285) 47
    tCONST (286)
    tERROR (287)
    tNB <nb> (288) 84
    tID <var> (289) 15 23 24 25 26 39 40 48 49 83


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    action-inc (36)
        on left: 1
        on right: 39 47 53 56 60
    action-dec (37)
        on left: 2
        on right: 39 47 51 53 55 60
    action-getIndex <nb> (38)
        on left: 3
        on right: 39 40 47 53 55 56 60
    program (39)
        on left: 4 5 6
        on right: 0
    action-start (40)
        on left: 7
        on right: 5 6
    function_type (41)
        on left: 8 9
        on right: 39 47
    variable_type (42)
        on left: 10
        on right: 15 22
    parameter_list (43)
        on left: 11 12 13 14
        on right: 14 39 47
    parameter (44)
        on left: 15
        on right: 13 14
    body (45)
        on left: 16 17 18 19
        on right: 39 47 53 56 60
    declaration_list (46)
        on left: 20 21
        on right: 17 19 21
    declaration (47)
        on left: 22
        on right: 20 21
    identifiers_list (48)
        on left: 23 24 25 26
        on right: 22 25 26
    instruction_list (49)
        on left: 27 28
        on right: 18 19 28
    instruction (50)
        on left: 29 30 31 32 33
        on right: 27 28
    action-fun (51)
        on left: 34
        on right: 39 47
    function_list (52)
        on left: 35 36
        on right: 6 36
    function (53)
        on left: 39
        on right: 35 36
    $@1 (54)
        on left: 37
        on right: 39
    $@2 (55)
        on left: 38
        on right: 39
    functionCall <nb> (56)
        on left: 40
        on right: 82
    action-call0 <nb> (57)
        on left: 41
        on right: 40
    action-call1 <nb> (58)
        on left: 42
        on right: 40
    argument_list (59)
        on left: 43 44 45
        on right: 40 44
    main_function (60)
        on left: 47
        on right: 5 6
    $@3 (61)
        on left: 46
        on right: 47
    assignment_list (62)
        on left: 48 49
        on right: 29 49
    ifblock (63)
        on left: 51 53 55
        on right: 30 55
    $@4 (64)
        on left: 50
        on right: 51
    $@5 (65)
        on left: 52
        on right: 53
    $@6 (66)
        on left: 54
        on right: 55
    ifpart (67)
        on left: 56
        on right: 51 55
    action-if <nb> (68)
        on left: 57
        on right: 53 56
    action-else <nb> (69)
        on left: 58
        on right: 53
    whileblock (70)
        on left: 60
        on right: 31
    $@7 (71)
        on left: 59
        on right: 60
    action-while <nb> (72)
        on left: 61
        on right: 60
    printblock (73)
        on left: 62
        on right: 32
    returnblock (74)
        on left: 63
        on right: 33
    condition <nb> (75)
        on left: 64 65 66 67
        on right: 24 26 44 45 48 49 53 56 60 62 63 65 66 67
    equality_expression <nb> (76)
        on left: 68 69 70
        on right: 64 69 70
    compare <nb> (77)
        on left: 71 72 73 74 75
        on right: 68 69 70 72 73 74 75
    add_sub <nb> (78)
        on left: 76 77 78
        on right: 71 72 73 74 75 77 78
    div_mul <nb> (79)
        on left: 79 80 81
        on right: 76 77 78 80 81
    single_value <nb> (80)
        on left: 82 83 84
        on right: 79 80 81


State 0

    0 $accept: • program $end

    $end      reduce using rule 4 (program)
    $default  reduce using rule 7 (action-start)

    program       go to state 1
    action-start  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    5 program: action-start • main_function
    6        | action-start • function_list main_function

    tINT   shift, and go to state 4
    tVOID  shift, and go to state 5

    function_type  go to state 6
    function_list  go to state 7
    function       go to state 8
    main_function  go to state 9


State 3

    0 $accept: program $end •

    $default  accept


State 4

    9 function_type: tINT •

    $default  reduce using rule 9 (function_type)


State 5

    8 function_type: tVOID •

    $default  reduce using rule 8 (function_type)


State 6

   39 function: function_type • tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec $@2 action-dec
   47 main_function: function_type • tMAIN action-inc action-fun action-getIndex $@3 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec action-dec

    tMAIN  shift, and go to state 10
    tID    shift, and go to state 11


State 7

    6 program: action-start function_list • main_function
   36 function_list: function_list • function

    tINT   shift, and go to state 4
    tVOID  shift, and go to state 5

    function_type  go to state 6
    function       go to state 12
    main_function  go to state 13


State 8

   35 function_list: function •

    $default  reduce using rule 35 (function_list)


State 9

    5 program: action-start main_function •

    $default  reduce using rule 5 (program)


State 10

   47 main_function: function_type tMAIN • action-inc action-fun action-getIndex $@3 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec action-dec

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 14


State 11

   39 function: function_type tID • action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec $@2 action-dec

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 15


State 12

   36 function_list: function_list function •

    $default  reduce using rule 36 (function_list)


State 13

    6 program: action-start function_list main_function •

    $default  reduce using rule 6 (program)


State 14

   47 main_function: function_type tMAIN action-inc • action-fun action-getIndex $@3 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec action-dec

    $default  reduce using rule 34 (action-fun)

    action-fun  go to state 16


State 15

   39 function: function_type tID action-inc • action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec $@2 action-dec

    $default  reduce using rule 34 (action-fun)

    action-fun  go to state 17


State 16

   47 main_function: function_type tMAIN action-inc action-fun • action-getIndex $@3 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 18


State 17

   39 function: function_type tID action-inc action-fun • action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec $@2 action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 19


State 18

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex • $@3 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec action-dec

    $default  reduce using rule 46 ($@3)

    $@3  go to state 20


State 19

   39 function: function_type tID action-inc action-fun action-getIndex • $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec $@2 action-dec

    $default  reduce using rule 37 ($@1)

    $@1  go to state 21


State 20

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex $@3 • tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec action-dec

    tLPAR  shift, and go to state 22


State 21

   39 function: function_type tID action-inc action-fun action-getIndex $@1 • tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec $@2 action-dec

    tLPAR  shift, and go to state 23


State 22

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex $@3 tLPAR • parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec action-dec

    tCOMMA  shift, and go to state 24
    tINT    shift, and go to state 25
    tVOID   shift, and go to state 26

    $default  reduce using rule 11 (parameter_list)

    variable_type   go to state 27
    parameter_list  go to state 28
    parameter       go to state 29


State 23

   39 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR • parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec $@2 action-dec

    tCOMMA  shift, and go to state 24
    tINT    shift, and go to state 25
    tVOID   shift, and go to state 26

    $default  reduce using rule 11 (parameter_list)

    variable_type   go to state 27
    parameter_list  go to state 30
    parameter       go to state 29


State 24

   14 parameter_list: tCOMMA • parameter tCOMMA parameter_list

    tINT  shift, and go to state 25

    variable_type  go to state 27
    parameter      go to state 31


State 25

   10 variable_type: tINT •

    $default  reduce using rule 10 (variable_type)


State 26

   12 parameter_list: tVOID •

    $default  reduce using rule 12 (parameter_list)


State 27

   15 parameter: variable_type • tID

    tID  shift, and go to state 32


State 28

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex $@3 tLPAR parameter_list • tRPAR tLBRACE action-inc body tRBRACE action-dec action-dec

    tRPAR  shift, and go to state 33


State 29

   13 parameter_list: parameter •

    $default  reduce using rule 13 (parameter_list)


State 30

   39 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list • tRPAR tLBRACE action-inc body tRBRACE action-dec $@2 action-dec

    tRPAR  shift, and go to state 34


State 31

   14 parameter_list: tCOMMA parameter • tCOMMA parameter_list

    tCOMMA  shift, and go to state 35


State 32

   15 parameter: variable_type tID •

    $default  reduce using rule 15 (parameter)


State 33

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex $@3 tLPAR parameter_list tRPAR • tLBRACE action-inc body tRBRACE action-dec action-dec

    tLBRACE  shift, and go to state 36


State 34

   39 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR • tLBRACE action-inc body tRBRACE action-dec $@2 action-dec

    tLBRACE  shift, and go to state 37


State 35

   14 parameter_list: tCOMMA parameter tCOMMA • parameter_list

    tCOMMA  shift, and go to state 24
    tINT    shift, and go to state 25
    tVOID   shift, and go to state 26

    $default  reduce using rule 11 (parameter_list)

    variable_type   go to state 27
    parameter_list  go to state 38
    parameter       go to state 29


State 36

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex $@3 tLPAR parameter_list tRPAR tLBRACE • action-inc body tRBRACE action-dec action-dec

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 39


State 37

   39 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE • action-inc body tRBRACE action-dec $@2 action-dec

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 40


State 38

   14 parameter_list: tCOMMA parameter tCOMMA parameter_list •

    $default  reduce using rule 14 (parameter_list)


State 39

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex $@3 tLPAR parameter_list tRPAR tLBRACE action-inc • body tRBRACE action-dec action-dec

    tIF      shift, and go to state 41
    tWHILE   shift, and go to state 42
    tPRINT   shift, and go to state 43
    tRETURN  shift, and go to state 44
    tINT     shift, and go to state 25
    tID      shift, and go to state 45

    $default  reduce using rule 16 (body)

    variable_type     go to state 46
    body              go to state 47
    declaration_list  go to state 48
    declaration       go to state 49
    instruction_list  go to state 50
    instruction       go to state 51
    assignment_list   go to state 52
    ifblock           go to state 53
    ifpart            go to state 54
    whileblock        go to state 55
    printblock        go to state 56
    returnblock       go to state 57


State 40

   39 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc • body tRBRACE action-dec $@2 action-dec

    tIF      shift, and go to state 41
    tWHILE   shift, and go to state 42
    tPRINT   shift, and go to state 43
    tRETURN  shift, and go to state 44
    tINT     shift, and go to state 25
    tID      shift, and go to state 45

    $default  reduce using rule 16 (body)

    variable_type     go to state 46
    body              go to state 58
    declaration_list  go to state 48
    declaration       go to state 49
    instruction_list  go to state 50
    instruction       go to state 51
    assignment_list   go to state 52
    ifblock           go to state 53
    ifpart            go to state 54
    whileblock        go to state 55
    printblock        go to state 56
    returnblock       go to state 57


State 41

   53 ifblock: tIF • tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-dec action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@5 action-dec
   56 ifpart: tIF • tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex

    tLPAR  shift, and go to state 59


State 42

   60 whileblock: tWHILE • tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE $@7 action-dec

    tLPAR  shift, and go to state 60


State 43

   62 printblock: tPRINT • tLPAR condition tRPAR tSEMI

    tLPAR  shift, and go to state 61


State 44

   63 returnblock: tRETURN • condition tSEMI

    tNOT  shift, and go to state 62
    tNB   shift, and go to state 63
    tID   shift, and go to state 64

    functionCall         go to state 65
    condition            go to state 66
    equality_expression  go to state 67
    compare              go to state 68
    add_sub              go to state 69
    div_mul              go to state 70
    single_value         go to state 71


State 45

   48 assignment_list: tID • tASSIGN condition tSEMI
   49                | tID • tASSIGN condition tCOMMA assignment_list

    tASSIGN  shift, and go to state 72


State 46

   22 declaration: variable_type • identifiers_list tSEMI

    tID  shift, and go to state 73

    identifiers_list  go to state 74


State 47

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex $@3 tLPAR parameter_list tRPAR tLBRACE action-inc body • tRBRACE action-dec action-dec

    tRBRACE  shift, and go to state 75


State 48

   17 body: declaration_list •
   19     | declaration_list • instruction_list
   21 declaration_list: declaration_list • declaration

    tIF      shift, and go to state 41
    tWHILE   shift, and go to state 42
    tPRINT   shift, and go to state 43
    tRETURN  shift, and go to state 44
    tINT     shift, and go to state 25
    tID      shift, and go to state 45

    $default  reduce using rule 17 (body)

    variable_type     go to state 46
    declaration       go to state 76
    instruction_list  go to state 77
    instruction       go to state 51
    assignment_list   go to state 52
    ifblock           go to state 53
    ifpart            go to state 54
    whileblock        go to state 55
    printblock        go to state 56
    returnblock       go to state 57


State 49

   20 declaration_list: declaration •

    $default  reduce using rule 20 (declaration_list)


State 50

   18 body: instruction_list •
   28 instruction_list: instruction_list • instruction

    tIF      shift, and go to state 41
    tWHILE   shift, and go to state 42
    tPRINT   shift, and go to state 43
    tRETURN  shift, and go to state 44
    tID      shift, and go to state 45

    $default  reduce using rule 18 (body)

    instruction      go to state 78
    assignment_list  go to state 52
    ifblock          go to state 53
    ifpart           go to state 54
    whileblock       go to state 55
    printblock       go to state 56
    returnblock      go to state 57


State 51

   27 instruction_list: instruction •

    $default  reduce using rule 27 (instruction_list)


State 52

   29 instruction: assignment_list •

    $default  reduce using rule 29 (instruction)


State 53

   30 instruction: ifblock •

    $default  reduce using rule 30 (instruction)


State 54

   51 ifblock: ifpart • $@4 action-dec
   55        | ifpart • tELSE ifblock action-getIndex $@6 action-dec

    tELSE  shift, and go to state 79

    $default  reduce using rule 50 ($@4)

    $@4  go to state 80


State 55

   31 instruction: whileblock •

    $default  reduce using rule 31 (instruction)


State 56

   32 instruction: printblock •

    $default  reduce using rule 32 (instruction)


State 57

   33 instruction: returnblock •

    $default  reduce using rule 33 (instruction)


State 58

   39 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body • tRBRACE action-dec $@2 action-dec

    tRBRACE  shift, and go to state 81


State 59

   53 ifblock: tIF tLPAR • condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-dec action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@5 action-dec
   56 ifpart: tIF tLPAR • condition tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex

    tNOT  shift, and go to state 62
    tNB   shift, and go to state 63
    tID   shift, and go to state 64

    functionCall         go to state 65
    condition            go to state 82
    equality_expression  go to state 67
    compare              go to state 68
    add_sub              go to state 69
    div_mul              go to state 70
    single_value         go to state 71


State 60

   60 whileblock: tWHILE tLPAR • action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE $@7 action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 83


State 61

   62 printblock: tPRINT tLPAR • condition tRPAR tSEMI

    tNOT  shift, and go to state 62
    tNB   shift, and go to state 63
    tID   shift, and go to state 64

    functionCall         go to state 65
    condition            go to state 84
    equality_expression  go to state 67
    compare              go to state 68
    add_sub              go to state 69
    div_mul              go to state 70
    single_value         go to state 71


State 62

   67 condition: tNOT • condition

    tNOT  shift, and go to state 62
    tNB   shift, and go to state 63
    tID   shift, and go to state 64

    functionCall         go to state 65
    condition            go to state 85
    equality_expression  go to state 67
    compare              go to state 68
    add_sub              go to state 69
    div_mul              go to state 70
    single_value         go to state 71


State 63

   84 single_value: tNB •

    $default  reduce using rule 84 (single_value)


State 64

   40 functionCall: tID • tLPAR action-call0 action-call1 argument_list tRPAR action-getIndex
   83 single_value: tID •

    tLPAR  shift, and go to state 86

    $default  reduce using rule 83 (single_value)


State 65

   82 single_value: functionCall •

    $default  reduce using rule 82 (single_value)


State 66

   63 returnblock: tRETURN condition • tSEMI
   65 condition: condition • tAND condition
   66          | condition • tOR condition

    tAND   shift, and go to state 87
    tOR    shift, and go to state 88
    tSEMI  shift, and go to state 89


State 67

   64 condition: equality_expression •
   69 equality_expression: equality_expression • tEQ compare
   70                    | equality_expression • tNE compare

    tNE  shift, and go to state 90
    tEQ  shift, and go to state 91

    $default  reduce using rule 64 (condition)


State 68

   68 equality_expression: compare •
   72 compare: compare • tLT add_sub
   73        | compare • tGT add_sub
   74        | compare • tLE add_sub
   75        | compare • tGE add_sub

    tLT  shift, and go to state 92
    tGT  shift, and go to state 93
    tGE  shift, and go to state 94
    tLE  shift, and go to state 95

    $default  reduce using rule 68 (equality_expression)


State 69

   71 compare: add_sub •
   77 add_sub: add_sub • tADD div_mul
   78        | add_sub • tSUB div_mul

    tADD  shift, and go to state 96
    tSUB  shift, and go to state 97

    $default  reduce using rule 71 (compare)


State 70

   76 add_sub: div_mul •
   80 div_mul: div_mul • tMUL single_value
   81        | div_mul • tDIV single_value

    tMUL  shift, and go to state 98
    tDIV  shift, and go to state 99

    $default  reduce using rule 76 (add_sub)


State 71

   79 div_mul: single_value •

    $default  reduce using rule 79 (div_mul)


State 72

   48 assignment_list: tID tASSIGN • condition tSEMI
   49                | tID tASSIGN • condition tCOMMA assignment_list

    tNOT  shift, and go to state 62
    tNB   shift, and go to state 63
    tID   shift, and go to state 64

    functionCall         go to state 65
    condition            go to state 100
    equality_expression  go to state 67
    compare              go to state 68
    add_sub              go to state 69
    div_mul              go to state 70
    single_value         go to state 71


State 73

   23 identifiers_list: tID •
   24                 | tID • tASSIGN condition

    tASSIGN  shift, and go to state 101

    $default  reduce using rule 23 (identifiers_list)


State 74

   22 declaration: variable_type identifiers_list • tSEMI
   25 identifiers_list: identifiers_list • tCOMMA tID
   26                 | identifiers_list • tCOMMA tID tASSIGN condition

    tSEMI   shift, and go to state 102
    tCOMMA  shift, and go to state 103


State 75

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex $@3 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE • action-dec action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 104


State 76

   21 declaration_list: declaration_list declaration •

    $default  reduce using rule 21 (declaration_list)


State 77

   19 body: declaration_list instruction_list •
   28 instruction_list: instruction_list • instruction

    tIF      shift, and go to state 41
    tWHILE   shift, and go to state 42
    tPRINT   shift, and go to state 43
    tRETURN  shift, and go to state 44
    tID      shift, and go to state 45

    $default  reduce using rule 19 (body)

    instruction      go to state 78
    assignment_list  go to state 52
    ifblock          go to state 53
    ifpart           go to state 54
    whileblock       go to state 55
    printblock       go to state 56
    returnblock      go to state 57


State 78

   28 instruction_list: instruction_list instruction •

    $default  reduce using rule 28 (instruction_list)


State 79

   55 ifblock: ifpart tELSE • ifblock action-getIndex $@6 action-dec

    tIF  shift, and go to state 41

    ifblock  go to state 105
    ifpart   go to state 54


State 80

   51 ifblock: ifpart $@4 • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 106


State 81

   39 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE • action-dec $@2 action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 107


State 82

   53 ifblock: tIF tLPAR condition • tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-dec action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@5 action-dec
   56 ifpart: tIF tLPAR condition • tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex
   65 condition: condition • tAND condition
   66          | condition • tOR condition

    tAND   shift, and go to state 87
    tOR    shift, and go to state 88
    tRPAR  shift, and go to state 108


State 83

   60 whileblock: tWHILE tLPAR action-getIndex • condition tRPAR action-while action-inc tLBRACE body tRBRACE $@7 action-dec

    tNOT  shift, and go to state 62
    tNB   shift, and go to state 63
    tID   shift, and go to state 64

    functionCall         go to state 65
    condition            go to state 109
    equality_expression  go to state 67
    compare              go to state 68
    add_sub              go to state 69
    div_mul              go to state 70
    single_value         go to state 71


State 84

   62 printblock: tPRINT tLPAR condition • tRPAR tSEMI
   65 condition: condition • tAND condition
   66          | condition • tOR condition

    tAND   shift, and go to state 87
    tOR    shift, and go to state 88
    tRPAR  shift, and go to state 110


State 85

   65 condition: condition • tAND condition
   66          | condition • tOR condition
   67          | tNOT condition •

    $default  reduce using rule 67 (condition)


State 86

   40 functionCall: tID tLPAR • action-call0 action-call1 argument_list tRPAR action-getIndex

    $default  reduce using rule 41 (action-call0)

    action-call0  go to state 111


State 87

   65 condition: condition tAND • condition

    tNOT  shift, and go to state 62
    tNB   shift, and go to state 63
    tID   shift, and go to state 64

    functionCall         go to state 65
    condition            go to state 112
    equality_expression  go to state 67
    compare              go to state 68
    add_sub              go to state 69
    div_mul              go to state 70
    single_value         go to state 71


State 88

   66 condition: condition tOR • condition

    tNOT  shift, and go to state 62
    tNB   shift, and go to state 63
    tID   shift, and go to state 64

    functionCall         go to state 65
    condition            go to state 113
    equality_expression  go to state 67
    compare              go to state 68
    add_sub              go to state 69
    div_mul              go to state 70
    single_value         go to state 71


State 89

   63 returnblock: tRETURN condition tSEMI •

    $default  reduce using rule 63 (returnblock)


State 90

   70 equality_expression: equality_expression tNE • compare

    tNB  shift, and go to state 63
    tID  shift, and go to state 64

    functionCall  go to state 65
    compare       go to state 114
    add_sub       go to state 69
    div_mul       go to state 70
    single_value  go to state 71


State 91

   69 equality_expression: equality_expression tEQ • compare

    tNB  shift, and go to state 63
    tID  shift, and go to state 64

    functionCall  go to state 65
    compare       go to state 115
    add_sub       go to state 69
    div_mul       go to state 70
    single_value  go to state 71


State 92

   72 compare: compare tLT • add_sub

    tNB  shift, and go to state 63
    tID  shift, and go to state 64

    functionCall  go to state 65
    add_sub       go to state 116
    div_mul       go to state 70
    single_value  go to state 71


State 93

   73 compare: compare tGT • add_sub

    tNB  shift, and go to state 63
    tID  shift, and go to state 64

    functionCall  go to state 65
    add_sub       go to state 117
    div_mul       go to state 70
    single_value  go to state 71


State 94

   75 compare: compare tGE • add_sub

    tNB  shift, and go to state 63
    tID  shift, and go to state 64

    functionCall  go to state 65
    add_sub       go to state 118
    div_mul       go to state 70
    single_value  go to state 71


State 95

   74 compare: compare tLE • add_sub

    tNB  shift, and go to state 63
    tID  shift, and go to state 64

    functionCall  go to state 65
    add_sub       go to state 119
    div_mul       go to state 70
    single_value  go to state 71


State 96

   77 add_sub: add_sub tADD • div_mul

    tNB  shift, and go to state 63
    tID  shift, and go to state 64

    functionCall  go to state 65
    div_mul       go to state 120
    single_value  go to state 71


State 97

   78 add_sub: add_sub tSUB • div_mul

    tNB  shift, and go to state 63
    tID  shift, and go to state 64

    functionCall  go to state 65
    div_mul       go to state 121
    single_value  go to state 71


State 98

   80 div_mul: div_mul tMUL • single_value

    tNB  shift, and go to state 63
    tID  shift, and go to state 64

    functionCall  go to state 65
    single_value  go to state 122


State 99

   81 div_mul: div_mul tDIV • single_value

    tNB  shift, and go to state 63
    tID  shift, and go to state 64

    functionCall  go to state 65
    single_value  go to state 123


State 100

   48 assignment_list: tID tASSIGN condition • tSEMI
   49                | tID tASSIGN condition • tCOMMA assignment_list
   65 condition: condition • tAND condition
   66          | condition • tOR condition

    tAND    shift, and go to state 87
    tOR     shift, and go to state 88
    tSEMI   shift, and go to state 124
    tCOMMA  shift, and go to state 125


State 101

   24 identifiers_list: tID tASSIGN • condition

    tNOT  shift, and go to state 62
    tNB   shift, and go to state 63
    tID   shift, and go to state 64

    functionCall         go to state 65
    condition            go to state 126
    equality_expression  go to state 67
    compare              go to state 68
    add_sub              go to state 69
    div_mul              go to state 70
    single_value         go to state 71


State 102

   22 declaration: variable_type identifiers_list tSEMI •

    $default  reduce using rule 22 (declaration)


State 103

   25 identifiers_list: identifiers_list tCOMMA • tID
   26                 | identifiers_list tCOMMA • tID tASSIGN condition

    tID  shift, and go to state 127


State 104

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex $@3 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 128


State 105

   55 ifblock: ifpart tELSE ifblock • action-getIndex $@6 action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 129


State 106

   51 ifblock: ifpart $@4 action-dec •

    $default  reduce using rule 51 (ifblock)


State 107

   39 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec • $@2 action-dec

    $default  reduce using rule 38 ($@2)

    $@2  go to state 130


State 108

   53 ifblock: tIF tLPAR condition tRPAR • action-if action-inc tLBRACE body tRBRACE tELSE action-dec action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@5 action-dec
   56 ifpart: tIF tLPAR condition tRPAR • action-if action-inc tLBRACE body tRBRACE action-getIndex

    $default  reduce using rule 57 (action-if)

    action-if  go to state 131


State 109

   60 whileblock: tWHILE tLPAR action-getIndex condition • tRPAR action-while action-inc tLBRACE body tRBRACE $@7 action-dec
   65 condition: condition • tAND condition
   66          | condition • tOR condition

    tAND   shift, and go to state 87
    tOR    shift, and go to state 88
    tRPAR  shift, and go to state 132


State 110

   62 printblock: tPRINT tLPAR condition tRPAR • tSEMI

    tSEMI  shift, and go to state 133


State 111

   40 functionCall: tID tLPAR action-call0 • action-call1 argument_list tRPAR action-getIndex

    $default  reduce using rule 42 (action-call1)

    action-call1  go to state 134


State 112

   65 condition: condition • tAND condition
   65          | condition tAND condition •
   66          | condition • tOR condition

    $default  reduce using rule 65 (condition)


State 113

   65 condition: condition • tAND condition
   66          | condition • tOR condition
   66          | condition tOR condition •

    $default  reduce using rule 66 (condition)


State 114

   70 equality_expression: equality_expression tNE compare •
   72 compare: compare • tLT add_sub
   73        | compare • tGT add_sub
   74        | compare • tLE add_sub
   75        | compare • tGE add_sub

    tLT  shift, and go to state 92
    tGT  shift, and go to state 93
    tGE  shift, and go to state 94
    tLE  shift, and go to state 95

    $default  reduce using rule 70 (equality_expression)


State 115

   69 equality_expression: equality_expression tEQ compare •
   72 compare: compare • tLT add_sub
   73        | compare • tGT add_sub
   74        | compare • tLE add_sub
   75        | compare • tGE add_sub

    tLT  shift, and go to state 92
    tGT  shift, and go to state 93
    tGE  shift, and go to state 94
    tLE  shift, and go to state 95

    $default  reduce using rule 69 (equality_expression)


State 116

   72 compare: compare tLT add_sub •
   77 add_sub: add_sub • tADD div_mul
   78        | add_sub • tSUB div_mul

    tADD  shift, and go to state 96
    tSUB  shift, and go to state 97

    $default  reduce using rule 72 (compare)


State 117

   73 compare: compare tGT add_sub •
   77 add_sub: add_sub • tADD div_mul
   78        | add_sub • tSUB div_mul

    tADD  shift, and go to state 96
    tSUB  shift, and go to state 97

    $default  reduce using rule 73 (compare)


State 118

   75 compare: compare tGE add_sub •
   77 add_sub: add_sub • tADD div_mul
   78        | add_sub • tSUB div_mul

    tADD  shift, and go to state 96
    tSUB  shift, and go to state 97

    $default  reduce using rule 75 (compare)


State 119

   74 compare: compare tLE add_sub •
   77 add_sub: add_sub • tADD div_mul
   78        | add_sub • tSUB div_mul

    tADD  shift, and go to state 96
    tSUB  shift, and go to state 97

    $default  reduce using rule 74 (compare)


State 120

   77 add_sub: add_sub tADD div_mul •
   80 div_mul: div_mul • tMUL single_value
   81        | div_mul • tDIV single_value

    tMUL  shift, and go to state 98
    tDIV  shift, and go to state 99

    $default  reduce using rule 77 (add_sub)


State 121

   78 add_sub: add_sub tSUB div_mul •
   80 div_mul: div_mul • tMUL single_value
   81        | div_mul • tDIV single_value

    tMUL  shift, and go to state 98
    tDIV  shift, and go to state 99

    $default  reduce using rule 78 (add_sub)


State 122

   80 div_mul: div_mul tMUL single_value •

    $default  reduce using rule 80 (div_mul)


State 123

   81 div_mul: div_mul tDIV single_value •

    $default  reduce using rule 81 (div_mul)


State 124

   48 assignment_list: tID tASSIGN condition tSEMI •

    $default  reduce using rule 48 (assignment_list)


State 125

   49 assignment_list: tID tASSIGN condition tCOMMA • assignment_list

    tID  shift, and go to state 45

    assignment_list  go to state 135


State 126

   24 identifiers_list: tID tASSIGN condition •
   65 condition: condition • tAND condition
   66          | condition • tOR condition

    tAND  shift, and go to state 87
    tOR   shift, and go to state 88

    $default  reduce using rule 24 (identifiers_list)


State 127

   25 identifiers_list: identifiers_list tCOMMA tID •
   26                 | identifiers_list tCOMMA tID • tASSIGN condition

    tASSIGN  shift, and go to state 136

    $default  reduce using rule 25 (identifiers_list)


State 128

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex $@3 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec action-dec •

    $default  reduce using rule 47 (main_function)


State 129

   55 ifblock: ifpart tELSE ifblock action-getIndex • $@6 action-dec

    $default  reduce using rule 54 ($@6)

    $@6  go to state 137


State 130

   39 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec $@2 • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 138


State 131

   53 ifblock: tIF tLPAR condition tRPAR action-if • action-inc tLBRACE body tRBRACE tELSE action-dec action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@5 action-dec
   56 ifpart: tIF tLPAR condition tRPAR action-if • action-inc tLBRACE body tRBRACE action-getIndex

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 139


State 132

   60 whileblock: tWHILE tLPAR action-getIndex condition tRPAR • action-while action-inc tLBRACE body tRBRACE $@7 action-dec

    $default  reduce using rule 61 (action-while)

    action-while  go to state 140


State 133

   62 printblock: tPRINT tLPAR condition tRPAR tSEMI •

    $default  reduce using rule 62 (printblock)


State 134

   40 functionCall: tID tLPAR action-call0 action-call1 • argument_list tRPAR action-getIndex

    tNOT  shift, and go to state 62
    tNB   shift, and go to state 63
    tID   shift, and go to state 64

    $default  reduce using rule 43 (argument_list)

    functionCall         go to state 65
    argument_list        go to state 141
    condition            go to state 142
    equality_expression  go to state 67
    compare              go to state 68
    add_sub              go to state 69
    div_mul              go to state 70
    single_value         go to state 71


State 135

   49 assignment_list: tID tASSIGN condition tCOMMA assignment_list •

    $default  reduce using rule 49 (assignment_list)


State 136

   26 identifiers_list: identifiers_list tCOMMA tID tASSIGN • condition

    tNOT  shift, and go to state 62
    tNB   shift, and go to state 63
    tID   shift, and go to state 64

    functionCall         go to state 65
    condition            go to state 143
    equality_expression  go to state 67
    compare              go to state 68
    add_sub              go to state 69
    div_mul              go to state 70
    single_value         go to state 71


State 137

   55 ifblock: ifpart tELSE ifblock action-getIndex $@6 • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 144


State 138

   39 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec $@2 action-dec •

    $default  reduce using rule 39 (function)


State 139

   53 ifblock: tIF tLPAR condition tRPAR action-if action-inc • tLBRACE body tRBRACE tELSE action-dec action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@5 action-dec
   56 ifpart: tIF tLPAR condition tRPAR action-if action-inc • tLBRACE body tRBRACE action-getIndex

    tLBRACE  shift, and go to state 145


State 140

   60 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while • action-inc tLBRACE body tRBRACE $@7 action-dec

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 146


State 141

   40 functionCall: tID tLPAR action-call0 action-call1 argument_list • tRPAR action-getIndex
   44 argument_list: argument_list • tCOMMA condition

    tRPAR   shift, and go to state 147
    tCOMMA  shift, and go to state 148


State 142

   45 argument_list: condition •
   65 condition: condition • tAND condition
   66          | condition • tOR condition

    tAND  shift, and go to state 87
    tOR   shift, and go to state 88

    $default  reduce using rule 45 (argument_list)


State 143

   26 identifiers_list: identifiers_list tCOMMA tID tASSIGN condition •
   65 condition: condition • tAND condition
   66          | condition • tOR condition

    tAND  shift, and go to state 87
    tOR   shift, and go to state 88

    $default  reduce using rule 26 (identifiers_list)


State 144

   55 ifblock: ifpart tELSE ifblock action-getIndex $@6 action-dec •

    $default  reduce using rule 55 (ifblock)


State 145

   53 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE • body tRBRACE tELSE action-dec action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@5 action-dec
   56 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE • body tRBRACE action-getIndex

    tIF      shift, and go to state 41
    tWHILE   shift, and go to state 42
    tPRINT   shift, and go to state 43
    tRETURN  shift, and go to state 44
    tINT     shift, and go to state 25
    tID      shift, and go to state 45

    $default  reduce using rule 16 (body)

    variable_type     go to state 46
    body              go to state 149
    declaration_list  go to state 48
    declaration       go to state 49
    instruction_list  go to state 50
    instruction       go to state 51
    assignment_list   go to state 52
    ifblock           go to state 53
    ifpart            go to state 54
    whileblock        go to state 55
    printblock        go to state 56
    returnblock       go to state 57


State 146

   60 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc • tLBRACE body tRBRACE $@7 action-dec

    tLBRACE  shift, and go to state 150


State 147

   40 functionCall: tID tLPAR action-call0 action-call1 argument_list tRPAR • action-getIndex

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 151


State 148

   44 argument_list: argument_list tCOMMA • condition

    tNOT  shift, and go to state 62
    tNB   shift, and go to state 63
    tID   shift, and go to state 64

    functionCall         go to state 65
    condition            go to state 152
    equality_expression  go to state 67
    compare              go to state 68
    add_sub              go to state 69
    div_mul              go to state 70
    single_value         go to state 71


State 149

   53 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body • tRBRACE tELSE action-dec action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@5 action-dec
   56 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body • tRBRACE action-getIndex

    tRBRACE  shift, and go to state 153


State 150

   60 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE • body tRBRACE $@7 action-dec

    tIF      shift, and go to state 41
    tWHILE   shift, and go to state 42
    tPRINT   shift, and go to state 43
    tRETURN  shift, and go to state 44
    tINT     shift, and go to state 25
    tID      shift, and go to state 45

    $default  reduce using rule 16 (body)

    variable_type     go to state 46
    body              go to state 154
    declaration_list  go to state 48
    declaration       go to state 49
    instruction_list  go to state 50
    instruction       go to state 51
    assignment_list   go to state 52
    ifblock           go to state 53
    ifpart            go to state 54
    whileblock        go to state 55
    printblock        go to state 56
    returnblock       go to state 57


State 151

   40 functionCall: tID tLPAR action-call0 action-call1 argument_list tRPAR action-getIndex •

    $default  reduce using rule 40 (functionCall)


State 152

   44 argument_list: argument_list tCOMMA condition •
   65 condition: condition • tAND condition
   66          | condition • tOR condition

    tAND  shift, and go to state 87
    tOR   shift, and go to state 88

    $default  reduce using rule 44 (argument_list)


State 153

   53 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE • tELSE action-dec action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@5 action-dec
   56 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE • action-getIndex

    tELSE  shift, and go to state 155

    tELSE     [reduce using rule 3 (action-getIndex)]
    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 156


State 154

   60 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body • tRBRACE $@7 action-dec

    tRBRACE  shift, and go to state 157


State 155

   53 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE • action-dec action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@5 action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 158


State 156

   56 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex •

    $default  reduce using rule 56 (ifpart)


State 157

   60 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE • $@7 action-dec

    $default  reduce using rule 59 ($@7)

    $@7  go to state 159


State 158

   53 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-dec • action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@5 action-dec

    $default  reduce using rule 58 (action-else)

    action-else  go to state 160


State 159

   60 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE $@7 • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 161


State 160

   53 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-dec action-else • action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@5 action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 162


State 161

   60 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE $@7 action-dec •

    $default  reduce using rule 60 (whileblock)


State 162

   53 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-dec action-else action-getIndex • action-inc tLBRACE body tRBRACE action-getIndex $@5 action-dec

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 163


State 163

   53 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-dec action-else action-getIndex action-inc • tLBRACE body tRBRACE action-getIndex $@5 action-dec

    tLBRACE  shift, and go to state 164


State 164

   53 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-dec action-else action-getIndex action-inc tLBRACE • body tRBRACE action-getIndex $@5 action-dec

    tIF      shift, and go to state 41
    tWHILE   shift, and go to state 42
    tPRINT   shift, and go to state 43
    tRETURN  shift, and go to state 44
    tINT     shift, and go to state 25
    tID      shift, and go to state 45

    $default  reduce using rule 16 (body)

    variable_type     go to state 46
    body              go to state 165
    declaration_list  go to state 48
    declaration       go to state 49
    instruction_list  go to state 50
    instruction       go to state 51
    assignment_list   go to state 52
    ifblock           go to state 53
    ifpart            go to state 54
    whileblock        go to state 55
    printblock        go to state 56
    returnblock       go to state 57


State 165

   53 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-dec action-else action-getIndex action-inc tLBRACE body • tRBRACE action-getIndex $@5 action-dec

    tRBRACE  shift, and go to state 166


State 166

   53 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-dec action-else action-getIndex action-inc tLBRACE body tRBRACE • action-getIndex $@5 action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 167


State 167

   53 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-dec action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex • $@5 action-dec

    $default  reduce using rule 52 ($@5)

    $@5  go to state 168


State 168

   53 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-dec action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@5 • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 169


State 169

   53 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE tELSE action-dec action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@5 action-dec •

    $default  reduce using rule 53 (ifblock)
