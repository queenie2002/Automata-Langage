Terminals unused in grammar

    tCONST
    tERROR


State 103 conflicts: 2 shift/reduce
State 147 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 action-inc: ε

    2 action-dec: ε

    3 action-getIndex: ε

    4 program: ε
    5        | action-start main_function
    6        | action-start function_list main_function

    7 action-start: ε

    8 function_type: tVOID
    9              | tINT

   10 variable_type: tINT

   11 parameter_list: ε
   12               | tVOID
   13               | parameter
   14               | tCOMMA parameter tCOMMA parameter_list

   15 parameter: variable_type tID

   16 body: ε
   17     | declaration_list
   18     | instruction_list
   19     | declaration_list instruction_list

   20 declaration_list: declaration
   21                 | declaration_list declaration

   22 declaration: variable_type identifiers_list tSEMI

   23 identifiers_list: tID
   24                 | tID tASSIGN equality_expression
   25                 | identifiers_list tCOMMA tID
   26                 | identifiers_list tCOMMA tID tASSIGN equality_expression

   27 instruction_list: instruction
   28                 | instruction_list instruction

   29 instruction: assignment_list
   30            | ifblock
   31            | whileblock
   32            | printblock
   33            | returnblock

   34 action-fun: ε

   35 function_list: function
   36              | function_list function

   37 $@1: ε

   38 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec

   39 functionCall: tID tLPAR action-call0 action-inc action-call1 action-dec argument_list tRPAR action-getIndex

   40 action-call0: ε

   41 action-call1: ε

   42 argument_list: ε
   43              | argument_list tCOMMA equality_expression
   44              | equality_expression

   45 $@2: ε

   46 main_function: function_type tMAIN action-inc action-fun action-getIndex $@2 tLPAR parameter_list tRPAR tLBRACE body tRBRACE action-dec

   47 assignment_list: tID tASSIGN equality_expression tSEMI
   48                | tID tASSIGN equality_expression tCOMMA assignment_list

   49 $@3: ε

   50 ifblock: ifpart $@3 action-dec

   51 $@4: ε

   52 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-dec tELSE action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@4 action-dec

   53 $@5: ε

   54 ifblock: ifpart tELSE ifblock action-getIndex $@5 action-dec

   55 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex

   56 action-if: ε

   57 action-else: ε

   58 $@6: ε

   59 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE $@6 action-dec

   60 action-while: ε

   61 printblock: tPRINT tLPAR condition tRPAR tSEMI

   62 returnblock: tRETURN equality_expression tSEMI

   63 condition: equality_expression
   64          | condition tAND condition
   65          | condition tOR condition
   66          | tNOT condition

   67 equality_expression: compare
   68                    | equality_expression tEQ compare
   69                    | equality_expression tNE compare

   70 compare: add_sub
   71        | compare tLT add_sub
   72        | compare tGT add_sub
   73        | compare tLE add_sub
   74        | compare tGE add_sub

   75 add_sub: div_mul
   76        | add_sub tADD div_mul
   77        | add_sub tSUB div_mul

   78 div_mul: single_value
   79        | div_mul tMUL single_value
   80        | div_mul tDIV single_value

   81 single_value: functionCall
   82             | tID
   83             | tNB


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tADD (258) 76
    tSUB (259) 77
    tMUL (260) 79
    tDIV (261) 80
    tLT (262) 71
    tGT (263) 72
    tNE (264) 69
    tEQ (265) 68
    tGE (266) 74
    tLE (267) 73
    tASSIGN (268) 24 26 47 48
    tAND (269) 64
    tOR (270) 65
    tNOT (271) 66
    tLBRACE (272) 38 46 52 55 59
    tRBRACE (273) 38 46 52 55 59
    tLPAR (274) 38 39 46 52 55 59 61
    tRPAR (275) 38 39 46 52 55 59 61
    tSEMI (276) 22 47 61 62
    tCOMMA (277) 14 25 26 43 48
    tIF (278) 52 55
    tELSE (279) 52 54
    tWHILE (280) 59
    tPRINT (281) 61
    tRETURN (282) 62
    tINT (283) 9 10
    tVOID (284) 8 12
    tMAIN (285) 46
    tCONST (286)
    tERROR (287)
    tNB <nb> (288) 83
    tID <var> (289) 15 23 24 25 26 38 39 47 48 82


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    action-inc (36)
        on left: 1
        on right: 38 39 46 52 55 59
    action-dec (37)
        on left: 2
        on right: 38 39 46 50 52 54 59
    action-getIndex <nb> (38)
        on left: 3
        on right: 38 39 46 52 54 55 59
    program (39)
        on left: 4 5 6
        on right: 0
    action-start (40)
        on left: 7
        on right: 5 6
    function_type (41)
        on left: 8 9
        on right: 38 46
    variable_type (42)
        on left: 10
        on right: 15 22
    parameter_list (43)
        on left: 11 12 13 14
        on right: 14 38 46
    parameter (44)
        on left: 15
        on right: 13 14
    body (45)
        on left: 16 17 18 19
        on right: 38 46 52 55 59
    declaration_list (46)
        on left: 20 21
        on right: 17 19 21
    declaration (47)
        on left: 22
        on right: 20 21
    identifiers_list (48)
        on left: 23 24 25 26
        on right: 22 25 26
    instruction_list (49)
        on left: 27 28
        on right: 18 19 28
    instruction (50)
        on left: 29 30 31 32 33
        on right: 27 28
    action-fun (51)
        on left: 34
        on right: 38 46
    function_list (52)
        on left: 35 36
        on right: 6 36
    function (53)
        on left: 38
        on right: 35 36
    $@1 (54)
        on left: 37
        on right: 38
    functionCall <nb> (55)
        on left: 39
        on right: 81
    action-call0 <nb> (56)
        on left: 40
        on right: 39
    action-call1 <nb> (57)
        on left: 41
        on right: 39
    argument_list (58)
        on left: 42 43 44
        on right: 39 43
    main_function (59)
        on left: 46
        on right: 5 6
    $@2 (60)
        on left: 45
        on right: 46
    assignment_list (61)
        on left: 47 48
        on right: 29 48
    ifblock (62)
        on left: 50 52 54
        on right: 30 54
    $@3 (63)
        on left: 49
        on right: 50
    $@4 (64)
        on left: 51
        on right: 52
    $@5 (65)
        on left: 53
        on right: 54
    ifpart (66)
        on left: 55
        on right: 50 54
    action-if <nb> (67)
        on left: 56
        on right: 52 55
    action-else <nb> (68)
        on left: 57
        on right: 52
    whileblock (69)
        on left: 59
        on right: 31
    $@6 (70)
        on left: 58
        on right: 59
    action-while <nb> (71)
        on left: 60
        on right: 59
    printblock (72)
        on left: 61
        on right: 32
    returnblock (73)
        on left: 62
        on right: 33
    condition <nb> (74)
        on left: 63 64 65 66
        on right: 52 55 59 61 64 65 66
    equality_expression <nb> (75)
        on left: 67 68 69
        on right: 24 26 43 44 47 48 62 63 68 69
    compare <nb> (76)
        on left: 70 71 72 73 74
        on right: 67 68 69 71 72 73 74
    add_sub <nb> (77)
        on left: 75 76 77
        on right: 70 71 72 73 74 76 77
    div_mul <nb> (78)
        on left: 78 79 80
        on right: 75 76 77 79 80
    single_value <nb> (79)
        on left: 81 82 83
        on right: 78 79 80


State 0

    0 $accept: • program $end

    $end      reduce using rule 4 (program)
    $default  reduce using rule 7 (action-start)

    program       go to state 1
    action-start  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    5 program: action-start • main_function
    6        | action-start • function_list main_function

    tINT   shift, and go to state 4
    tVOID  shift, and go to state 5

    function_type  go to state 6
    function_list  go to state 7
    function       go to state 8
    main_function  go to state 9


State 3

    0 $accept: program $end •

    $default  accept


State 4

    9 function_type: tINT •

    $default  reduce using rule 9 (function_type)


State 5

    8 function_type: tVOID •

    $default  reduce using rule 8 (function_type)


State 6

   38 function: function_type • tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec
   46 main_function: function_type • tMAIN action-inc action-fun action-getIndex $@2 tLPAR parameter_list tRPAR tLBRACE body tRBRACE action-dec

    tMAIN  shift, and go to state 10
    tID    shift, and go to state 11


State 7

    6 program: action-start function_list • main_function
   36 function_list: function_list • function

    tINT   shift, and go to state 4
    tVOID  shift, and go to state 5

    function_type  go to state 6
    function       go to state 12
    main_function  go to state 13


State 8

   35 function_list: function •

    $default  reduce using rule 35 (function_list)


State 9

    5 program: action-start main_function •

    $default  reduce using rule 5 (program)


State 10

   46 main_function: function_type tMAIN • action-inc action-fun action-getIndex $@2 tLPAR parameter_list tRPAR tLBRACE body tRBRACE action-dec

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 14


State 11

   38 function: function_type tID • action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 15


State 12

   36 function_list: function_list function •

    $default  reduce using rule 36 (function_list)


State 13

    6 program: action-start function_list main_function •

    $default  reduce using rule 6 (program)


State 14

   46 main_function: function_type tMAIN action-inc • action-fun action-getIndex $@2 tLPAR parameter_list tRPAR tLBRACE body tRBRACE action-dec

    $default  reduce using rule 34 (action-fun)

    action-fun  go to state 16


State 15

   38 function: function_type tID action-inc • action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec

    $default  reduce using rule 34 (action-fun)

    action-fun  go to state 17


State 16

   46 main_function: function_type tMAIN action-inc action-fun • action-getIndex $@2 tLPAR parameter_list tRPAR tLBRACE body tRBRACE action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 18


State 17

   38 function: function_type tID action-inc action-fun • action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 19


State 18

   46 main_function: function_type tMAIN action-inc action-fun action-getIndex • $@2 tLPAR parameter_list tRPAR tLBRACE body tRBRACE action-dec

    $default  reduce using rule 45 ($@2)

    $@2  go to state 20


State 19

   38 function: function_type tID action-inc action-fun action-getIndex • $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec

    $default  reduce using rule 37 ($@1)

    $@1  go to state 21


State 20

   46 main_function: function_type tMAIN action-inc action-fun action-getIndex $@2 • tLPAR parameter_list tRPAR tLBRACE body tRBRACE action-dec

    tLPAR  shift, and go to state 22


State 21

   38 function: function_type tID action-inc action-fun action-getIndex $@1 • tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec

    tLPAR  shift, and go to state 23


State 22

   46 main_function: function_type tMAIN action-inc action-fun action-getIndex $@2 tLPAR • parameter_list tRPAR tLBRACE body tRBRACE action-dec

    tCOMMA  shift, and go to state 24
    tINT    shift, and go to state 25
    tVOID   shift, and go to state 26

    $default  reduce using rule 11 (parameter_list)

    variable_type   go to state 27
    parameter_list  go to state 28
    parameter       go to state 29


State 23

   38 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR • parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec

    tCOMMA  shift, and go to state 24
    tINT    shift, and go to state 25
    tVOID   shift, and go to state 26

    $default  reduce using rule 11 (parameter_list)

    variable_type   go to state 27
    parameter_list  go to state 30
    parameter       go to state 29


State 24

   14 parameter_list: tCOMMA • parameter tCOMMA parameter_list

    tINT  shift, and go to state 25

    variable_type  go to state 27
    parameter      go to state 31


State 25

   10 variable_type: tINT •

    $default  reduce using rule 10 (variable_type)


State 26

   12 parameter_list: tVOID •

    $default  reduce using rule 12 (parameter_list)


State 27

   15 parameter: variable_type • tID

    tID  shift, and go to state 32


State 28

   46 main_function: function_type tMAIN action-inc action-fun action-getIndex $@2 tLPAR parameter_list • tRPAR tLBRACE body tRBRACE action-dec

    tRPAR  shift, and go to state 33


State 29

   13 parameter_list: parameter •

    $default  reduce using rule 13 (parameter_list)


State 30

   38 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list • tRPAR tLBRACE action-inc body tRBRACE action-dec

    tRPAR  shift, and go to state 34


State 31

   14 parameter_list: tCOMMA parameter • tCOMMA parameter_list

    tCOMMA  shift, and go to state 35


State 32

   15 parameter: variable_type tID •

    $default  reduce using rule 15 (parameter)


State 33

   46 main_function: function_type tMAIN action-inc action-fun action-getIndex $@2 tLPAR parameter_list tRPAR • tLBRACE body tRBRACE action-dec

    tLBRACE  shift, and go to state 36


State 34

   38 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR • tLBRACE action-inc body tRBRACE action-dec

    tLBRACE  shift, and go to state 37


State 35

   14 parameter_list: tCOMMA parameter tCOMMA • parameter_list

    tCOMMA  shift, and go to state 24
    tINT    shift, and go to state 25
    tVOID   shift, and go to state 26

    $default  reduce using rule 11 (parameter_list)

    variable_type   go to state 27
    parameter_list  go to state 38
    parameter       go to state 29


State 36

   46 main_function: function_type tMAIN action-inc action-fun action-getIndex $@2 tLPAR parameter_list tRPAR tLBRACE • body tRBRACE action-dec

    tIF      shift, and go to state 39
    tWHILE   shift, and go to state 40
    tPRINT   shift, and go to state 41
    tRETURN  shift, and go to state 42
    tINT     shift, and go to state 25
    tID      shift, and go to state 43

    $default  reduce using rule 16 (body)

    variable_type     go to state 44
    body              go to state 45
    declaration_list  go to state 46
    declaration       go to state 47
    instruction_list  go to state 48
    instruction       go to state 49
    assignment_list   go to state 50
    ifblock           go to state 51
    ifpart            go to state 52
    whileblock        go to state 53
    printblock        go to state 54
    returnblock       go to state 55


State 37

   38 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE • action-inc body tRBRACE action-dec

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 56


State 38

   14 parameter_list: tCOMMA parameter tCOMMA parameter_list •

    $default  reduce using rule 14 (parameter_list)


State 39

   52 ifblock: tIF • tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-dec tELSE action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@4 action-dec
   55 ifpart: tIF • tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex

    tLPAR  shift, and go to state 57


State 40

   59 whileblock: tWHILE • tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE $@6 action-dec

    tLPAR  shift, and go to state 58


State 41

   61 printblock: tPRINT • tLPAR condition tRPAR tSEMI

    tLPAR  shift, and go to state 59


State 42

   62 returnblock: tRETURN • equality_expression tSEMI

    tNB  shift, and go to state 60
    tID  shift, and go to state 61

    functionCall         go to state 62
    equality_expression  go to state 63
    compare              go to state 64
    add_sub              go to state 65
    div_mul              go to state 66
    single_value         go to state 67


State 43

   47 assignment_list: tID • tASSIGN equality_expression tSEMI
   48                | tID • tASSIGN equality_expression tCOMMA assignment_list

    tASSIGN  shift, and go to state 68


State 44

   22 declaration: variable_type • identifiers_list tSEMI

    tID  shift, and go to state 69

    identifiers_list  go to state 70


State 45

   46 main_function: function_type tMAIN action-inc action-fun action-getIndex $@2 tLPAR parameter_list tRPAR tLBRACE body • tRBRACE action-dec

    tRBRACE  shift, and go to state 71


State 46

   17 body: declaration_list •
   19     | declaration_list • instruction_list
   21 declaration_list: declaration_list • declaration

    tIF      shift, and go to state 39
    tWHILE   shift, and go to state 40
    tPRINT   shift, and go to state 41
    tRETURN  shift, and go to state 42
    tINT     shift, and go to state 25
    tID      shift, and go to state 43

    $default  reduce using rule 17 (body)

    variable_type     go to state 44
    declaration       go to state 72
    instruction_list  go to state 73
    instruction       go to state 49
    assignment_list   go to state 50
    ifblock           go to state 51
    ifpart            go to state 52
    whileblock        go to state 53
    printblock        go to state 54
    returnblock       go to state 55


State 47

   20 declaration_list: declaration •

    $default  reduce using rule 20 (declaration_list)


State 48

   18 body: instruction_list •
   28 instruction_list: instruction_list • instruction

    tIF      shift, and go to state 39
    tWHILE   shift, and go to state 40
    tPRINT   shift, and go to state 41
    tRETURN  shift, and go to state 42
    tID      shift, and go to state 43

    $default  reduce using rule 18 (body)

    instruction      go to state 74
    assignment_list  go to state 50
    ifblock          go to state 51
    ifpart           go to state 52
    whileblock       go to state 53
    printblock       go to state 54
    returnblock      go to state 55


State 49

   27 instruction_list: instruction •

    $default  reduce using rule 27 (instruction_list)


State 50

   29 instruction: assignment_list •

    $default  reduce using rule 29 (instruction)


State 51

   30 instruction: ifblock •

    $default  reduce using rule 30 (instruction)


State 52

   50 ifblock: ifpart • $@3 action-dec
   54        | ifpart • tELSE ifblock action-getIndex $@5 action-dec

    tELSE  shift, and go to state 75

    $default  reduce using rule 49 ($@3)

    $@3  go to state 76


State 53

   31 instruction: whileblock •

    $default  reduce using rule 31 (instruction)


State 54

   32 instruction: printblock •

    $default  reduce using rule 32 (instruction)


State 55

   33 instruction: returnblock •

    $default  reduce using rule 33 (instruction)


State 56

   38 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc • body tRBRACE action-dec

    tIF      shift, and go to state 39
    tWHILE   shift, and go to state 40
    tPRINT   shift, and go to state 41
    tRETURN  shift, and go to state 42
    tINT     shift, and go to state 25
    tID      shift, and go to state 43

    $default  reduce using rule 16 (body)

    variable_type     go to state 44
    body              go to state 77
    declaration_list  go to state 46
    declaration       go to state 47
    instruction_list  go to state 48
    instruction       go to state 49
    assignment_list   go to state 50
    ifblock           go to state 51
    ifpart            go to state 52
    whileblock        go to state 53
    printblock        go to state 54
    returnblock       go to state 55


State 57

   52 ifblock: tIF tLPAR • condition tRPAR action-if action-inc tLBRACE body tRBRACE action-dec tELSE action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@4 action-dec
   55 ifpart: tIF tLPAR • condition tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex

    tNOT  shift, and go to state 78
    tNB   shift, and go to state 60
    tID   shift, and go to state 61

    functionCall         go to state 62
    condition            go to state 79
    equality_expression  go to state 80
    compare              go to state 64
    add_sub              go to state 65
    div_mul              go to state 66
    single_value         go to state 67


State 58

   59 whileblock: tWHILE tLPAR • action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE $@6 action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 81


State 59

   61 printblock: tPRINT tLPAR • condition tRPAR tSEMI

    tNOT  shift, and go to state 78
    tNB   shift, and go to state 60
    tID   shift, and go to state 61

    functionCall         go to state 62
    condition            go to state 82
    equality_expression  go to state 80
    compare              go to state 64
    add_sub              go to state 65
    div_mul              go to state 66
    single_value         go to state 67


State 60

   83 single_value: tNB •

    $default  reduce using rule 83 (single_value)


State 61

   39 functionCall: tID • tLPAR action-call0 action-inc action-call1 action-dec argument_list tRPAR action-getIndex
   82 single_value: tID •

    tLPAR  shift, and go to state 83

    $default  reduce using rule 82 (single_value)


State 62

   81 single_value: functionCall •

    $default  reduce using rule 81 (single_value)


State 63

   62 returnblock: tRETURN equality_expression • tSEMI
   68 equality_expression: equality_expression • tEQ compare
   69                    | equality_expression • tNE compare

    tNE    shift, and go to state 84
    tEQ    shift, and go to state 85
    tSEMI  shift, and go to state 86


State 64

   67 equality_expression: compare •
   71 compare: compare • tLT add_sub
   72        | compare • tGT add_sub
   73        | compare • tLE add_sub
   74        | compare • tGE add_sub

    tLT  shift, and go to state 87
    tGT  shift, and go to state 88
    tGE  shift, and go to state 89
    tLE  shift, and go to state 90

    $default  reduce using rule 67 (equality_expression)


State 65

   70 compare: add_sub •
   76 add_sub: add_sub • tADD div_mul
   77        | add_sub • tSUB div_mul

    tADD  shift, and go to state 91
    tSUB  shift, and go to state 92

    $default  reduce using rule 70 (compare)


State 66

   75 add_sub: div_mul •
   79 div_mul: div_mul • tMUL single_value
   80        | div_mul • tDIV single_value

    tMUL  shift, and go to state 93
    tDIV  shift, and go to state 94

    $default  reduce using rule 75 (add_sub)


State 67

   78 div_mul: single_value •

    $default  reduce using rule 78 (div_mul)


State 68

   47 assignment_list: tID tASSIGN • equality_expression tSEMI
   48                | tID tASSIGN • equality_expression tCOMMA assignment_list

    tNB  shift, and go to state 60
    tID  shift, and go to state 61

    functionCall         go to state 62
    equality_expression  go to state 95
    compare              go to state 64
    add_sub              go to state 65
    div_mul              go to state 66
    single_value         go to state 67


State 69

   23 identifiers_list: tID •
   24                 | tID • tASSIGN equality_expression

    tASSIGN  shift, and go to state 96

    $default  reduce using rule 23 (identifiers_list)


State 70

   22 declaration: variable_type identifiers_list • tSEMI
   25 identifiers_list: identifiers_list • tCOMMA tID
   26                 | identifiers_list • tCOMMA tID tASSIGN equality_expression

    tSEMI   shift, and go to state 97
    tCOMMA  shift, and go to state 98


State 71

   46 main_function: function_type tMAIN action-inc action-fun action-getIndex $@2 tLPAR parameter_list tRPAR tLBRACE body tRBRACE • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 99


State 72

   21 declaration_list: declaration_list declaration •

    $default  reduce using rule 21 (declaration_list)


State 73

   19 body: declaration_list instruction_list •
   28 instruction_list: instruction_list • instruction

    tIF      shift, and go to state 39
    tWHILE   shift, and go to state 40
    tPRINT   shift, and go to state 41
    tRETURN  shift, and go to state 42
    tID      shift, and go to state 43

    $default  reduce using rule 19 (body)

    instruction      go to state 74
    assignment_list  go to state 50
    ifblock          go to state 51
    ifpart           go to state 52
    whileblock       go to state 53
    printblock       go to state 54
    returnblock      go to state 55


State 74

   28 instruction_list: instruction_list instruction •

    $default  reduce using rule 28 (instruction_list)


State 75

   54 ifblock: ifpart tELSE • ifblock action-getIndex $@5 action-dec

    tIF  shift, and go to state 39

    ifblock  go to state 100
    ifpart   go to state 52


State 76

   50 ifblock: ifpart $@3 • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 101


State 77

   38 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body • tRBRACE action-dec

    tRBRACE  shift, and go to state 102


State 78

   66 condition: tNOT • condition

    tNOT  shift, and go to state 78
    tNB   shift, and go to state 60
    tID   shift, and go to state 61

    functionCall         go to state 62
    condition            go to state 103
    equality_expression  go to state 80
    compare              go to state 64
    add_sub              go to state 65
    div_mul              go to state 66
    single_value         go to state 67


State 79

   52 ifblock: tIF tLPAR condition • tRPAR action-if action-inc tLBRACE body tRBRACE action-dec tELSE action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@4 action-dec
   55 ifpart: tIF tLPAR condition • tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex
   64 condition: condition • tAND condition
   65          | condition • tOR condition

    tAND   shift, and go to state 104
    tOR    shift, and go to state 105
    tRPAR  shift, and go to state 106


State 80

   63 condition: equality_expression •
   68 equality_expression: equality_expression • tEQ compare
   69                    | equality_expression • tNE compare

    tNE  shift, and go to state 84
    tEQ  shift, and go to state 85

    $default  reduce using rule 63 (condition)


State 81

   59 whileblock: tWHILE tLPAR action-getIndex • condition tRPAR action-while action-inc tLBRACE body tRBRACE $@6 action-dec

    tNOT  shift, and go to state 78
    tNB   shift, and go to state 60
    tID   shift, and go to state 61

    functionCall         go to state 62
    condition            go to state 107
    equality_expression  go to state 80
    compare              go to state 64
    add_sub              go to state 65
    div_mul              go to state 66
    single_value         go to state 67


State 82

   61 printblock: tPRINT tLPAR condition • tRPAR tSEMI
   64 condition: condition • tAND condition
   65          | condition • tOR condition

    tAND   shift, and go to state 104
    tOR    shift, and go to state 105
    tRPAR  shift, and go to state 108


State 83

   39 functionCall: tID tLPAR • action-call0 action-inc action-call1 action-dec argument_list tRPAR action-getIndex

    $default  reduce using rule 40 (action-call0)

    action-call0  go to state 109


State 84

   69 equality_expression: equality_expression tNE • compare

    tNB  shift, and go to state 60
    tID  shift, and go to state 61

    functionCall  go to state 62
    compare       go to state 110
    add_sub       go to state 65
    div_mul       go to state 66
    single_value  go to state 67


State 85

   68 equality_expression: equality_expression tEQ • compare

    tNB  shift, and go to state 60
    tID  shift, and go to state 61

    functionCall  go to state 62
    compare       go to state 111
    add_sub       go to state 65
    div_mul       go to state 66
    single_value  go to state 67


State 86

   62 returnblock: tRETURN equality_expression tSEMI •

    $default  reduce using rule 62 (returnblock)


State 87

   71 compare: compare tLT • add_sub

    tNB  shift, and go to state 60
    tID  shift, and go to state 61

    functionCall  go to state 62
    add_sub       go to state 112
    div_mul       go to state 66
    single_value  go to state 67


State 88

   72 compare: compare tGT • add_sub

    tNB  shift, and go to state 60
    tID  shift, and go to state 61

    functionCall  go to state 62
    add_sub       go to state 113
    div_mul       go to state 66
    single_value  go to state 67


State 89

   74 compare: compare tGE • add_sub

    tNB  shift, and go to state 60
    tID  shift, and go to state 61

    functionCall  go to state 62
    add_sub       go to state 114
    div_mul       go to state 66
    single_value  go to state 67


State 90

   73 compare: compare tLE • add_sub

    tNB  shift, and go to state 60
    tID  shift, and go to state 61

    functionCall  go to state 62
    add_sub       go to state 115
    div_mul       go to state 66
    single_value  go to state 67


State 91

   76 add_sub: add_sub tADD • div_mul

    tNB  shift, and go to state 60
    tID  shift, and go to state 61

    functionCall  go to state 62
    div_mul       go to state 116
    single_value  go to state 67


State 92

   77 add_sub: add_sub tSUB • div_mul

    tNB  shift, and go to state 60
    tID  shift, and go to state 61

    functionCall  go to state 62
    div_mul       go to state 117
    single_value  go to state 67


State 93

   79 div_mul: div_mul tMUL • single_value

    tNB  shift, and go to state 60
    tID  shift, and go to state 61

    functionCall  go to state 62
    single_value  go to state 118


State 94

   80 div_mul: div_mul tDIV • single_value

    tNB  shift, and go to state 60
    tID  shift, and go to state 61

    functionCall  go to state 62
    single_value  go to state 119


State 95

   47 assignment_list: tID tASSIGN equality_expression • tSEMI
   48                | tID tASSIGN equality_expression • tCOMMA assignment_list
   68 equality_expression: equality_expression • tEQ compare
   69                    | equality_expression • tNE compare

    tNE     shift, and go to state 84
    tEQ     shift, and go to state 85
    tSEMI   shift, and go to state 120
    tCOMMA  shift, and go to state 121


State 96

   24 identifiers_list: tID tASSIGN • equality_expression

    tNB  shift, and go to state 60
    tID  shift, and go to state 61

    functionCall         go to state 62
    equality_expression  go to state 122
    compare              go to state 64
    add_sub              go to state 65
    div_mul              go to state 66
    single_value         go to state 67


State 97

   22 declaration: variable_type identifiers_list tSEMI •

    $default  reduce using rule 22 (declaration)


State 98

   25 identifiers_list: identifiers_list tCOMMA • tID
   26                 | identifiers_list tCOMMA • tID tASSIGN equality_expression

    tID  shift, and go to state 123


State 99

   46 main_function: function_type tMAIN action-inc action-fun action-getIndex $@2 tLPAR parameter_list tRPAR tLBRACE body tRBRACE action-dec •

    $default  reduce using rule 46 (main_function)


State 100

   54 ifblock: ifpart tELSE ifblock • action-getIndex $@5 action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 124


State 101

   50 ifblock: ifpart $@3 action-dec •

    $default  reduce using rule 50 (ifblock)


State 102

   38 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 125


State 103

   64 condition: condition • tAND condition
   65          | condition • tOR condition
   66          | tNOT condition •

    tAND  shift, and go to state 104
    tOR   shift, and go to state 105

    tAND      [reduce using rule 66 (condition)]
    tOR       [reduce using rule 66 (condition)]
    $default  reduce using rule 66 (condition)


State 104

   64 condition: condition tAND • condition

    tNOT  shift, and go to state 78
    tNB   shift, and go to state 60
    tID   shift, and go to state 61

    functionCall         go to state 62
    condition            go to state 126
    equality_expression  go to state 80
    compare              go to state 64
    add_sub              go to state 65
    div_mul              go to state 66
    single_value         go to state 67


State 105

   65 condition: condition tOR • condition

    tNOT  shift, and go to state 78
    tNB   shift, and go to state 60
    tID   shift, and go to state 61

    functionCall         go to state 62
    condition            go to state 127
    equality_expression  go to state 80
    compare              go to state 64
    add_sub              go to state 65
    div_mul              go to state 66
    single_value         go to state 67


State 106

   52 ifblock: tIF tLPAR condition tRPAR • action-if action-inc tLBRACE body tRBRACE action-dec tELSE action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@4 action-dec
   55 ifpart: tIF tLPAR condition tRPAR • action-if action-inc tLBRACE body tRBRACE action-getIndex

    $default  reduce using rule 56 (action-if)

    action-if  go to state 128


State 107

   59 whileblock: tWHILE tLPAR action-getIndex condition • tRPAR action-while action-inc tLBRACE body tRBRACE $@6 action-dec
   64 condition: condition • tAND condition
   65          | condition • tOR condition

    tAND   shift, and go to state 104
    tOR    shift, and go to state 105
    tRPAR  shift, and go to state 129


State 108

   61 printblock: tPRINT tLPAR condition tRPAR • tSEMI

    tSEMI  shift, and go to state 130


State 109

   39 functionCall: tID tLPAR action-call0 • action-inc action-call1 action-dec argument_list tRPAR action-getIndex

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 131


State 110

   69 equality_expression: equality_expression tNE compare •
   71 compare: compare • tLT add_sub
   72        | compare • tGT add_sub
   73        | compare • tLE add_sub
   74        | compare • tGE add_sub

    tLT  shift, and go to state 87
    tGT  shift, and go to state 88
    tGE  shift, and go to state 89
    tLE  shift, and go to state 90

    $default  reduce using rule 69 (equality_expression)


State 111

   68 equality_expression: equality_expression tEQ compare •
   71 compare: compare • tLT add_sub
   72        | compare • tGT add_sub
   73        | compare • tLE add_sub
   74        | compare • tGE add_sub

    tLT  shift, and go to state 87
    tGT  shift, and go to state 88
    tGE  shift, and go to state 89
    tLE  shift, and go to state 90

    $default  reduce using rule 68 (equality_expression)


State 112

   71 compare: compare tLT add_sub •
   76 add_sub: add_sub • tADD div_mul
   77        | add_sub • tSUB div_mul

    tADD  shift, and go to state 91
    tSUB  shift, and go to state 92

    $default  reduce using rule 71 (compare)


State 113

   72 compare: compare tGT add_sub •
   76 add_sub: add_sub • tADD div_mul
   77        | add_sub • tSUB div_mul

    tADD  shift, and go to state 91
    tSUB  shift, and go to state 92

    $default  reduce using rule 72 (compare)


State 114

   74 compare: compare tGE add_sub •
   76 add_sub: add_sub • tADD div_mul
   77        | add_sub • tSUB div_mul

    tADD  shift, and go to state 91
    tSUB  shift, and go to state 92

    $default  reduce using rule 74 (compare)


State 115

   73 compare: compare tLE add_sub •
   76 add_sub: add_sub • tADD div_mul
   77        | add_sub • tSUB div_mul

    tADD  shift, and go to state 91
    tSUB  shift, and go to state 92

    $default  reduce using rule 73 (compare)


State 116

   76 add_sub: add_sub tADD div_mul •
   79 div_mul: div_mul • tMUL single_value
   80        | div_mul • tDIV single_value

    tMUL  shift, and go to state 93
    tDIV  shift, and go to state 94

    $default  reduce using rule 76 (add_sub)


State 117

   77 add_sub: add_sub tSUB div_mul •
   79 div_mul: div_mul • tMUL single_value
   80        | div_mul • tDIV single_value

    tMUL  shift, and go to state 93
    tDIV  shift, and go to state 94

    $default  reduce using rule 77 (add_sub)


State 118

   79 div_mul: div_mul tMUL single_value •

    $default  reduce using rule 79 (div_mul)


State 119

   80 div_mul: div_mul tDIV single_value •

    $default  reduce using rule 80 (div_mul)


State 120

   47 assignment_list: tID tASSIGN equality_expression tSEMI •

    $default  reduce using rule 47 (assignment_list)


State 121

   48 assignment_list: tID tASSIGN equality_expression tCOMMA • assignment_list

    tID  shift, and go to state 43

    assignment_list  go to state 132


State 122

   24 identifiers_list: tID tASSIGN equality_expression •
   68 equality_expression: equality_expression • tEQ compare
   69                    | equality_expression • tNE compare

    tNE  shift, and go to state 84
    tEQ  shift, and go to state 85

    $default  reduce using rule 24 (identifiers_list)


State 123

   25 identifiers_list: identifiers_list tCOMMA tID •
   26                 | identifiers_list tCOMMA tID • tASSIGN equality_expression

    tASSIGN  shift, and go to state 133

    $default  reduce using rule 25 (identifiers_list)


State 124

   54 ifblock: ifpart tELSE ifblock action-getIndex • $@5 action-dec

    $default  reduce using rule 53 ($@5)

    $@5  go to state 134


State 125

   38 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec •

    $default  reduce using rule 38 (function)


State 126

   64 condition: condition • tAND condition
   64          | condition tAND condition •
   65          | condition • tOR condition

    $default  reduce using rule 64 (condition)


State 127

   64 condition: condition • tAND condition
   65          | condition • tOR condition
   65          | condition tOR condition •

    $default  reduce using rule 65 (condition)


State 128

   52 ifblock: tIF tLPAR condition tRPAR action-if • action-inc tLBRACE body tRBRACE action-dec tELSE action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@4 action-dec
   55 ifpart: tIF tLPAR condition tRPAR action-if • action-inc tLBRACE body tRBRACE action-getIndex

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 135


State 129

   59 whileblock: tWHILE tLPAR action-getIndex condition tRPAR • action-while action-inc tLBRACE body tRBRACE $@6 action-dec

    $default  reduce using rule 60 (action-while)

    action-while  go to state 136


State 130

   61 printblock: tPRINT tLPAR condition tRPAR tSEMI •

    $default  reduce using rule 61 (printblock)


State 131

   39 functionCall: tID tLPAR action-call0 action-inc • action-call1 action-dec argument_list tRPAR action-getIndex

    $default  reduce using rule 41 (action-call1)

    action-call1  go to state 137


State 132

   48 assignment_list: tID tASSIGN equality_expression tCOMMA assignment_list •

    $default  reduce using rule 48 (assignment_list)


State 133

   26 identifiers_list: identifiers_list tCOMMA tID tASSIGN • equality_expression

    tNB  shift, and go to state 60
    tID  shift, and go to state 61

    functionCall         go to state 62
    equality_expression  go to state 138
    compare              go to state 64
    add_sub              go to state 65
    div_mul              go to state 66
    single_value         go to state 67


State 134

   54 ifblock: ifpart tELSE ifblock action-getIndex $@5 • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 139


State 135

   52 ifblock: tIF tLPAR condition tRPAR action-if action-inc • tLBRACE body tRBRACE action-dec tELSE action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@4 action-dec
   55 ifpart: tIF tLPAR condition tRPAR action-if action-inc • tLBRACE body tRBRACE action-getIndex

    tLBRACE  shift, and go to state 140


State 136

   59 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while • action-inc tLBRACE body tRBRACE $@6 action-dec

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 141


State 137

   39 functionCall: tID tLPAR action-call0 action-inc action-call1 • action-dec argument_list tRPAR action-getIndex

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 142


State 138

   26 identifiers_list: identifiers_list tCOMMA tID tASSIGN equality_expression •
   68 equality_expression: equality_expression • tEQ compare
   69                    | equality_expression • tNE compare

    tNE  shift, and go to state 84
    tEQ  shift, and go to state 85

    $default  reduce using rule 26 (identifiers_list)


State 139

   54 ifblock: ifpart tELSE ifblock action-getIndex $@5 action-dec •

    $default  reduce using rule 54 (ifblock)


State 140

   52 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE • body tRBRACE action-dec tELSE action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@4 action-dec
   55 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE • body tRBRACE action-getIndex

    tIF      shift, and go to state 39
    tWHILE   shift, and go to state 40
    tPRINT   shift, and go to state 41
    tRETURN  shift, and go to state 42
    tINT     shift, and go to state 25
    tID      shift, and go to state 43

    $default  reduce using rule 16 (body)

    variable_type     go to state 44
    body              go to state 143
    declaration_list  go to state 46
    declaration       go to state 47
    instruction_list  go to state 48
    instruction       go to state 49
    assignment_list   go to state 50
    ifblock           go to state 51
    ifpart            go to state 52
    whileblock        go to state 53
    printblock        go to state 54
    returnblock       go to state 55


State 141

   59 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc • tLBRACE body tRBRACE $@6 action-dec

    tLBRACE  shift, and go to state 144


State 142

   39 functionCall: tID tLPAR action-call0 action-inc action-call1 action-dec • argument_list tRPAR action-getIndex

    tNB  shift, and go to state 60
    tID  shift, and go to state 61

    $default  reduce using rule 42 (argument_list)

    functionCall         go to state 62
    argument_list        go to state 145
    equality_expression  go to state 146
    compare              go to state 64
    add_sub              go to state 65
    div_mul              go to state 66
    single_value         go to state 67


State 143

   52 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body • tRBRACE action-dec tELSE action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@4 action-dec
   55 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body • tRBRACE action-getIndex

    tRBRACE  shift, and go to state 147


State 144

   59 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE • body tRBRACE $@6 action-dec

    tIF      shift, and go to state 39
    tWHILE   shift, and go to state 40
    tPRINT   shift, and go to state 41
    tRETURN  shift, and go to state 42
    tINT     shift, and go to state 25
    tID      shift, and go to state 43

    $default  reduce using rule 16 (body)

    variable_type     go to state 44
    body              go to state 148
    declaration_list  go to state 46
    declaration       go to state 47
    instruction_list  go to state 48
    instruction       go to state 49
    assignment_list   go to state 50
    ifblock           go to state 51
    ifpart            go to state 52
    whileblock        go to state 53
    printblock        go to state 54
    returnblock       go to state 55


State 145

   39 functionCall: tID tLPAR action-call0 action-inc action-call1 action-dec argument_list • tRPAR action-getIndex
   43 argument_list: argument_list • tCOMMA equality_expression

    tRPAR   shift, and go to state 149
    tCOMMA  shift, and go to state 150


State 146

   44 argument_list: equality_expression •
   68 equality_expression: equality_expression • tEQ compare
   69                    | equality_expression • tNE compare

    tNE  shift, and go to state 84
    tEQ  shift, and go to state 85

    $default  reduce using rule 44 (argument_list)


State 147

   52 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE • action-dec tELSE action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@4 action-dec
   55 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE • action-getIndex

    tELSE     reduce using rule 2 (action-dec)
    tELSE     [reduce using rule 3 (action-getIndex)]
    $default  reduce using rule 3 (action-getIndex)

    action-dec       go to state 151
    action-getIndex  go to state 152


State 148

   59 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body • tRBRACE $@6 action-dec

    tRBRACE  shift, and go to state 153


State 149

   39 functionCall: tID tLPAR action-call0 action-inc action-call1 action-dec argument_list tRPAR • action-getIndex

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 154


State 150

   43 argument_list: argument_list tCOMMA • equality_expression

    tNB  shift, and go to state 60
    tID  shift, and go to state 61

    functionCall         go to state 62
    equality_expression  go to state 155
    compare              go to state 64
    add_sub              go to state 65
    div_mul              go to state 66
    single_value         go to state 67


State 151

   52 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-dec • tELSE action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@4 action-dec

    tELSE  shift, and go to state 156


State 152

   55 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex •

    $default  reduce using rule 55 (ifpart)


State 153

   59 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE • $@6 action-dec

    $default  reduce using rule 58 ($@6)

    $@6  go to state 157


State 154

   39 functionCall: tID tLPAR action-call0 action-inc action-call1 action-dec argument_list tRPAR action-getIndex •

    $default  reduce using rule 39 (functionCall)


State 155

   43 argument_list: argument_list tCOMMA equality_expression •
   68 equality_expression: equality_expression • tEQ compare
   69                    | equality_expression • tNE compare

    tNE  shift, and go to state 84
    tEQ  shift, and go to state 85

    $default  reduce using rule 43 (argument_list)


State 156

   52 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-dec tELSE • action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@4 action-dec

    $default  reduce using rule 57 (action-else)

    action-else  go to state 158


State 157

   59 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE $@6 • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 159


State 158

   52 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-dec tELSE action-else • action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@4 action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 160


State 159

   59 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE $@6 action-dec •

    $default  reduce using rule 59 (whileblock)


State 160

   52 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-dec tELSE action-else action-getIndex • action-inc tLBRACE body tRBRACE action-getIndex $@4 action-dec

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 161


State 161

   52 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-dec tELSE action-else action-getIndex action-inc • tLBRACE body tRBRACE action-getIndex $@4 action-dec

    tLBRACE  shift, and go to state 162


State 162

   52 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-dec tELSE action-else action-getIndex action-inc tLBRACE • body tRBRACE action-getIndex $@4 action-dec

    tIF      shift, and go to state 39
    tWHILE   shift, and go to state 40
    tPRINT   shift, and go to state 41
    tRETURN  shift, and go to state 42
    tINT     shift, and go to state 25
    tID      shift, and go to state 43

    $default  reduce using rule 16 (body)

    variable_type     go to state 44
    body              go to state 163
    declaration_list  go to state 46
    declaration       go to state 47
    instruction_list  go to state 48
    instruction       go to state 49
    assignment_list   go to state 50
    ifblock           go to state 51
    ifpart            go to state 52
    whileblock        go to state 53
    printblock        go to state 54
    returnblock       go to state 55


State 163

   52 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-dec tELSE action-else action-getIndex action-inc tLBRACE body • tRBRACE action-getIndex $@4 action-dec

    tRBRACE  shift, and go to state 164


State 164

   52 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-dec tELSE action-else action-getIndex action-inc tLBRACE body tRBRACE • action-getIndex $@4 action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 165


State 165

   52 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-dec tELSE action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex • $@4 action-dec

    $default  reduce using rule 51 ($@4)

    $@4  go to state 166


State 166

   52 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-dec tELSE action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@4 • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 167


State 167

   52 ifblock: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-dec tELSE action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex $@4 action-dec •

    $default  reduce using rule 52 (ifblock)
