Terminals unused in grammar

    tCONST
    tERROR


Grammar

    0 $accept: program $end

    1 action-inc: ε

    2 action-dec: ε

    3 action-getIndex: ε

    4 program: ε
    5        | action-start main_function
    6        | action-start function_list main_function

    7 action-start: ε

    8 function_type: tVOID
    9              | tINT

   10 variable_type: tINT

   11 parameter_list: ε
   12               | tVOID
   13               | parameter
   14               | tCOMMA parameter tCOMMA parameter_list

   15 parameter: variable_type tID

   16 body: ε
   17     | declaration_list
   18     | instruction_list
   19     | declaration_list instruction_list

   20 declaration_list: declaration
   21                 | declaration_list declaration

   22 declaration: variable_type identifiers_list tSEMI

   23 identifiers_list: tID
   24                 | tID tASSIGN condition
   25                 | identifiers_list tCOMMA tID
   26                 | identifiers_list tCOMMA tID tASSIGN condition

   27 instruction_list: instruction
   28                 | instruction_list instruction

   29 instruction: assignment_list
   30            | ifblock
   31            | whileblock
   32            | printblock
   33            | returnblock

   34 action-fun: ε

   35 function_list: function
   36              | function_list function

   37 $@1: ε

   38 $@2: ε

   39 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec $@2 action-dec

   40 functionCall: tID tLPAR action-call0 action-call1 argument_list tRPAR action-getIndex

   41 action-call0: ε

   42 action-call1: ε

   43 argument_list: ε
   44              | argument_list tCOMMA condition
   45              | condition

   46 $@3: ε

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex $@3 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec action-dec

   48 assignment_list: assignment tSEMI
   49                | assignment tCOMMA assignment_list

   50 assignment: tID tASSIGN condition

   51 ifblock: ifpart
   52        | ifpart tELSE action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex action-dec
   53        | ifpart tELSE action-else action-getIndex action-inc ifblock action-getIndex action-dec

   54 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex action-dec

   55 action-if: ε

   56 action-else: ε

   57 $@4: ε

   58 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE $@4 action-dec

   59 action-while: ε

   60 printblock: tPRINT tLPAR condition tRPAR tSEMI

   61 returnblock: tRETURN condition tSEMI

   62 condition: equality_expression
   63          | condition tAND condition
   64          | condition tOR condition
   65          | tNOT condition

   66 equality_expression: compare
   67                    | equality_expression tEQ compare
   68                    | equality_expression tNE compare

   69 compare: add_sub
   70        | compare tLT add_sub
   71        | compare tGT add_sub
   72        | compare tLE add_sub
   73        | compare tGE add_sub

   74 add_sub: div_mul
   75        | add_sub tADD div_mul
   76        | add_sub tSUB div_mul

   77 div_mul: single_value
   78        | div_mul tMUL single_value
   79        | div_mul tDIV single_value

   80 single_value: functionCall
   81             | tID
   82             | tNB


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tADD (258) 75
    tSUB (259) 76
    tMUL (260) 78
    tDIV (261) 79
    tLT (262) 70
    tGT (263) 71
    tNE (264) 68
    tEQ (265) 67
    tGE (266) 73
    tLE (267) 72
    tASSIGN (268) 24 26 50
    tAND (269) 63
    tOR (270) 64
    tNOT (271) 65
    tLBRACE (272) 39 47 52 54 58
    tRBRACE (273) 39 47 52 54 58
    tLPAR (274) 39 40 47 54 58 60
    tRPAR (275) 39 40 47 54 58 60
    tSEMI (276) 22 48 60 61
    tCOMMA (277) 14 25 26 44 49
    tIF (278) 54
    tELSE (279) 52 53
    tWHILE (280) 58
    tPRINT (281) 60
    tRETURN (282) 61
    tINT (283) 9 10
    tVOID (284) 8 12
    tMAIN (285) 47
    tCONST (286)
    tERROR (287)
    tNB <nb> (288) 82
    tID <var> (289) 15 23 24 25 26 39 40 50 81


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    action-inc (36)
        on left: 1
        on right: 39 47 52 53 54 58
    action-dec (37)
        on left: 2
        on right: 39 47 52 53 54 58
    action-getIndex <nb> (38)
        on left: 3
        on right: 39 40 47 52 53 54 58
    program (39)
        on left: 4 5 6
        on right: 0
    action-start (40)
        on left: 7
        on right: 5 6
    function_type (41)
        on left: 8 9
        on right: 39 47
    variable_type (42)
        on left: 10
        on right: 15 22
    parameter_list (43)
        on left: 11 12 13 14
        on right: 14 39 47
    parameter (44)
        on left: 15
        on right: 13 14
    body (45)
        on left: 16 17 18 19
        on right: 39 47 52 54 58
    declaration_list (46)
        on left: 20 21
        on right: 17 19 21
    declaration (47)
        on left: 22
        on right: 20 21
    identifiers_list (48)
        on left: 23 24 25 26
        on right: 22 25 26
    instruction_list (49)
        on left: 27 28
        on right: 18 19 28
    instruction (50)
        on left: 29 30 31 32 33
        on right: 27 28
    action-fun (51)
        on left: 34
        on right: 39 47
    function_list (52)
        on left: 35 36
        on right: 6 36
    function (53)
        on left: 39
        on right: 35 36
    $@1 (54)
        on left: 37
        on right: 39
    $@2 (55)
        on left: 38
        on right: 39
    functionCall <nb> (56)
        on left: 40
        on right: 80
    action-call0 <nb> (57)
        on left: 41
        on right: 40
    action-call1 <nb> (58)
        on left: 42
        on right: 40
    argument_list (59)
        on left: 43 44 45
        on right: 40 44
    main_function (60)
        on left: 47
        on right: 5 6
    $@3 (61)
        on left: 46
        on right: 47
    assignment_list (62)
        on left: 48 49
        on right: 29 49
    assignment (63)
        on left: 50
        on right: 48 49
    ifblock (64)
        on left: 51 52 53
        on right: 30 53
    ifpart <nb> (65)
        on left: 54
        on right: 51 52 53
    action-if <nb> (66)
        on left: 55
        on right: 54
    action-else <nb> (67)
        on left: 56
        on right: 52 53
    whileblock (68)
        on left: 58
        on right: 31
    $@4 (69)
        on left: 57
        on right: 58
    action-while <nb> (70)
        on left: 59
        on right: 58
    printblock (71)
        on left: 60
        on right: 32
    returnblock (72)
        on left: 61
        on right: 33
    condition <nb> (73)
        on left: 62 63 64 65
        on right: 24 26 44 45 50 54 58 60 61 63 64 65
    equality_expression <nb> (74)
        on left: 66 67 68
        on right: 62 67 68
    compare <nb> (75)
        on left: 69 70 71 72 73
        on right: 66 67 68 70 71 72 73
    add_sub <nb> (76)
        on left: 74 75 76
        on right: 69 70 71 72 73 75 76
    div_mul <nb> (77)
        on left: 77 78 79
        on right: 74 75 76 78 79
    single_value <nb> (78)
        on left: 80 81 82
        on right: 77 78 79


State 0

    0 $accept: • program $end

    $end      reduce using rule 4 (program)
    $default  reduce using rule 7 (action-start)

    program       go to state 1
    action-start  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    5 program: action-start • main_function
    6        | action-start • function_list main_function

    tINT   shift, and go to state 4
    tVOID  shift, and go to state 5

    function_type  go to state 6
    function_list  go to state 7
    function       go to state 8
    main_function  go to state 9


State 3

    0 $accept: program $end •

    $default  accept


State 4

    9 function_type: tINT •

    $default  reduce using rule 9 (function_type)


State 5

    8 function_type: tVOID •

    $default  reduce using rule 8 (function_type)


State 6

   39 function: function_type • tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec $@2 action-dec
   47 main_function: function_type • tMAIN action-inc action-fun action-getIndex $@3 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec action-dec

    tMAIN  shift, and go to state 10
    tID    shift, and go to state 11


State 7

    6 program: action-start function_list • main_function
   36 function_list: function_list • function

    tINT   shift, and go to state 4
    tVOID  shift, and go to state 5

    function_type  go to state 6
    function       go to state 12
    main_function  go to state 13


State 8

   35 function_list: function •

    $default  reduce using rule 35 (function_list)


State 9

    5 program: action-start main_function •

    $default  reduce using rule 5 (program)


State 10

   47 main_function: function_type tMAIN • action-inc action-fun action-getIndex $@3 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec action-dec

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 14


State 11

   39 function: function_type tID • action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec $@2 action-dec

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 15


State 12

   36 function_list: function_list function •

    $default  reduce using rule 36 (function_list)


State 13

    6 program: action-start function_list main_function •

    $default  reduce using rule 6 (program)


State 14

   47 main_function: function_type tMAIN action-inc • action-fun action-getIndex $@3 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec action-dec

    $default  reduce using rule 34 (action-fun)

    action-fun  go to state 16


State 15

   39 function: function_type tID action-inc • action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec $@2 action-dec

    $default  reduce using rule 34 (action-fun)

    action-fun  go to state 17


State 16

   47 main_function: function_type tMAIN action-inc action-fun • action-getIndex $@3 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 18


State 17

   39 function: function_type tID action-inc action-fun • action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec $@2 action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 19


State 18

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex • $@3 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec action-dec

    $default  reduce using rule 46 ($@3)

    $@3  go to state 20


State 19

   39 function: function_type tID action-inc action-fun action-getIndex • $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec $@2 action-dec

    $default  reduce using rule 37 ($@1)

    $@1  go to state 21


State 20

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex $@3 • tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec action-dec

    tLPAR  shift, and go to state 22


State 21

   39 function: function_type tID action-inc action-fun action-getIndex $@1 • tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec $@2 action-dec

    tLPAR  shift, and go to state 23


State 22

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex $@3 tLPAR • parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec action-dec

    tCOMMA  shift, and go to state 24
    tINT    shift, and go to state 25
    tVOID   shift, and go to state 26

    $default  reduce using rule 11 (parameter_list)

    variable_type   go to state 27
    parameter_list  go to state 28
    parameter       go to state 29


State 23

   39 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR • parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec $@2 action-dec

    tCOMMA  shift, and go to state 24
    tINT    shift, and go to state 25
    tVOID   shift, and go to state 26

    $default  reduce using rule 11 (parameter_list)

    variable_type   go to state 27
    parameter_list  go to state 30
    parameter       go to state 29


State 24

   14 parameter_list: tCOMMA • parameter tCOMMA parameter_list

    tINT  shift, and go to state 25

    variable_type  go to state 27
    parameter      go to state 31


State 25

   10 variable_type: tINT •

    $default  reduce using rule 10 (variable_type)


State 26

   12 parameter_list: tVOID •

    $default  reduce using rule 12 (parameter_list)


State 27

   15 parameter: variable_type • tID

    tID  shift, and go to state 32


State 28

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex $@3 tLPAR parameter_list • tRPAR tLBRACE action-inc body tRBRACE action-dec action-dec

    tRPAR  shift, and go to state 33


State 29

   13 parameter_list: parameter •

    $default  reduce using rule 13 (parameter_list)


State 30

   39 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list • tRPAR tLBRACE action-inc body tRBRACE action-dec $@2 action-dec

    tRPAR  shift, and go to state 34


State 31

   14 parameter_list: tCOMMA parameter • tCOMMA parameter_list

    tCOMMA  shift, and go to state 35


State 32

   15 parameter: variable_type tID •

    $default  reduce using rule 15 (parameter)


State 33

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex $@3 tLPAR parameter_list tRPAR • tLBRACE action-inc body tRBRACE action-dec action-dec

    tLBRACE  shift, and go to state 36


State 34

   39 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR • tLBRACE action-inc body tRBRACE action-dec $@2 action-dec

    tLBRACE  shift, and go to state 37


State 35

   14 parameter_list: tCOMMA parameter tCOMMA • parameter_list

    tCOMMA  shift, and go to state 24
    tINT    shift, and go to state 25
    tVOID   shift, and go to state 26

    $default  reduce using rule 11 (parameter_list)

    variable_type   go to state 27
    parameter_list  go to state 38
    parameter       go to state 29


State 36

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex $@3 tLPAR parameter_list tRPAR tLBRACE • action-inc body tRBRACE action-dec action-dec

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 39


State 37

   39 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE • action-inc body tRBRACE action-dec $@2 action-dec

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 40


State 38

   14 parameter_list: tCOMMA parameter tCOMMA parameter_list •

    $default  reduce using rule 14 (parameter_list)


State 39

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex $@3 tLPAR parameter_list tRPAR tLBRACE action-inc • body tRBRACE action-dec action-dec

    tIF      shift, and go to state 41
    tWHILE   shift, and go to state 42
    tPRINT   shift, and go to state 43
    tRETURN  shift, and go to state 44
    tINT     shift, and go to state 25
    tID      shift, and go to state 45

    $default  reduce using rule 16 (body)

    variable_type     go to state 46
    body              go to state 47
    declaration_list  go to state 48
    declaration       go to state 49
    instruction_list  go to state 50
    instruction       go to state 51
    assignment_list   go to state 52
    assignment        go to state 53
    ifblock           go to state 54
    ifpart            go to state 55
    whileblock        go to state 56
    printblock        go to state 57
    returnblock       go to state 58


State 40

   39 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc • body tRBRACE action-dec $@2 action-dec

    tIF      shift, and go to state 41
    tWHILE   shift, and go to state 42
    tPRINT   shift, and go to state 43
    tRETURN  shift, and go to state 44
    tINT     shift, and go to state 25
    tID      shift, and go to state 45

    $default  reduce using rule 16 (body)

    variable_type     go to state 46
    body              go to state 59
    declaration_list  go to state 48
    declaration       go to state 49
    instruction_list  go to state 50
    instruction       go to state 51
    assignment_list   go to state 52
    assignment        go to state 53
    ifblock           go to state 54
    ifpart            go to state 55
    whileblock        go to state 56
    printblock        go to state 57
    returnblock       go to state 58


State 41

   54 ifpart: tIF • tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex action-dec

    tLPAR  shift, and go to state 60


State 42

   58 whileblock: tWHILE • tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE $@4 action-dec

    tLPAR  shift, and go to state 61


State 43

   60 printblock: tPRINT • tLPAR condition tRPAR tSEMI

    tLPAR  shift, and go to state 62


State 44

   61 returnblock: tRETURN • condition tSEMI

    tNOT  shift, and go to state 63
    tNB   shift, and go to state 64
    tID   shift, and go to state 65

    functionCall         go to state 66
    condition            go to state 67
    equality_expression  go to state 68
    compare              go to state 69
    add_sub              go to state 70
    div_mul              go to state 71
    single_value         go to state 72


State 45

   50 assignment: tID • tASSIGN condition

    tASSIGN  shift, and go to state 73


State 46

   22 declaration: variable_type • identifiers_list tSEMI

    tID  shift, and go to state 74

    identifiers_list  go to state 75


State 47

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex $@3 tLPAR parameter_list tRPAR tLBRACE action-inc body • tRBRACE action-dec action-dec

    tRBRACE  shift, and go to state 76


State 48

   17 body: declaration_list •
   19     | declaration_list • instruction_list
   21 declaration_list: declaration_list • declaration

    tIF      shift, and go to state 41
    tWHILE   shift, and go to state 42
    tPRINT   shift, and go to state 43
    tRETURN  shift, and go to state 44
    tINT     shift, and go to state 25
    tID      shift, and go to state 45

    $default  reduce using rule 17 (body)

    variable_type     go to state 46
    declaration       go to state 77
    instruction_list  go to state 78
    instruction       go to state 51
    assignment_list   go to state 52
    assignment        go to state 53
    ifblock           go to state 54
    ifpart            go to state 55
    whileblock        go to state 56
    printblock        go to state 57
    returnblock       go to state 58


State 49

   20 declaration_list: declaration •

    $default  reduce using rule 20 (declaration_list)


State 50

   18 body: instruction_list •
   28 instruction_list: instruction_list • instruction

    tIF      shift, and go to state 41
    tWHILE   shift, and go to state 42
    tPRINT   shift, and go to state 43
    tRETURN  shift, and go to state 44
    tID      shift, and go to state 45

    $default  reduce using rule 18 (body)

    instruction      go to state 79
    assignment_list  go to state 52
    assignment       go to state 53
    ifblock          go to state 54
    ifpart           go to state 55
    whileblock       go to state 56
    printblock       go to state 57
    returnblock      go to state 58


State 51

   27 instruction_list: instruction •

    $default  reduce using rule 27 (instruction_list)


State 52

   29 instruction: assignment_list •

    $default  reduce using rule 29 (instruction)


State 53

   48 assignment_list: assignment • tSEMI
   49                | assignment • tCOMMA assignment_list

    tSEMI   shift, and go to state 80
    tCOMMA  shift, and go to state 81


State 54

   30 instruction: ifblock •

    $default  reduce using rule 30 (instruction)


State 55

   51 ifblock: ifpart •
   52        | ifpart • tELSE action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex action-dec
   53        | ifpart • tELSE action-else action-getIndex action-inc ifblock action-getIndex action-dec

    tELSE  shift, and go to state 82

    $default  reduce using rule 51 (ifblock)


State 56

   31 instruction: whileblock •

    $default  reduce using rule 31 (instruction)


State 57

   32 instruction: printblock •

    $default  reduce using rule 32 (instruction)


State 58

   33 instruction: returnblock •

    $default  reduce using rule 33 (instruction)


State 59

   39 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body • tRBRACE action-dec $@2 action-dec

    tRBRACE  shift, and go to state 83


State 60

   54 ifpart: tIF tLPAR • condition tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex action-dec

    tNOT  shift, and go to state 63
    tNB   shift, and go to state 64
    tID   shift, and go to state 65

    functionCall         go to state 66
    condition            go to state 84
    equality_expression  go to state 68
    compare              go to state 69
    add_sub              go to state 70
    div_mul              go to state 71
    single_value         go to state 72


State 61

   58 whileblock: tWHILE tLPAR • action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE $@4 action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 85


State 62

   60 printblock: tPRINT tLPAR • condition tRPAR tSEMI

    tNOT  shift, and go to state 63
    tNB   shift, and go to state 64
    tID   shift, and go to state 65

    functionCall         go to state 66
    condition            go to state 86
    equality_expression  go to state 68
    compare              go to state 69
    add_sub              go to state 70
    div_mul              go to state 71
    single_value         go to state 72


State 63

   65 condition: tNOT • condition

    tNOT  shift, and go to state 63
    tNB   shift, and go to state 64
    tID   shift, and go to state 65

    functionCall         go to state 66
    condition            go to state 87
    equality_expression  go to state 68
    compare              go to state 69
    add_sub              go to state 70
    div_mul              go to state 71
    single_value         go to state 72


State 64

   82 single_value: tNB •

    $default  reduce using rule 82 (single_value)


State 65

   40 functionCall: tID • tLPAR action-call0 action-call1 argument_list tRPAR action-getIndex
   81 single_value: tID •

    tLPAR  shift, and go to state 88

    $default  reduce using rule 81 (single_value)


State 66

   80 single_value: functionCall •

    $default  reduce using rule 80 (single_value)


State 67

   61 returnblock: tRETURN condition • tSEMI
   63 condition: condition • tAND condition
   64          | condition • tOR condition

    tAND   shift, and go to state 89
    tOR    shift, and go to state 90
    tSEMI  shift, and go to state 91


State 68

   62 condition: equality_expression •
   67 equality_expression: equality_expression • tEQ compare
   68                    | equality_expression • tNE compare

    tNE  shift, and go to state 92
    tEQ  shift, and go to state 93

    $default  reduce using rule 62 (condition)


State 69

   66 equality_expression: compare •
   70 compare: compare • tLT add_sub
   71        | compare • tGT add_sub
   72        | compare • tLE add_sub
   73        | compare • tGE add_sub

    tLT  shift, and go to state 94
    tGT  shift, and go to state 95
    tGE  shift, and go to state 96
    tLE  shift, and go to state 97

    $default  reduce using rule 66 (equality_expression)


State 70

   69 compare: add_sub •
   75 add_sub: add_sub • tADD div_mul
   76        | add_sub • tSUB div_mul

    tADD  shift, and go to state 98
    tSUB  shift, and go to state 99

    $default  reduce using rule 69 (compare)


State 71

   74 add_sub: div_mul •
   78 div_mul: div_mul • tMUL single_value
   79        | div_mul • tDIV single_value

    tMUL  shift, and go to state 100
    tDIV  shift, and go to state 101

    $default  reduce using rule 74 (add_sub)


State 72

   77 div_mul: single_value •

    $default  reduce using rule 77 (div_mul)


State 73

   50 assignment: tID tASSIGN • condition

    tNOT  shift, and go to state 63
    tNB   shift, and go to state 64
    tID   shift, and go to state 65

    functionCall         go to state 66
    condition            go to state 102
    equality_expression  go to state 68
    compare              go to state 69
    add_sub              go to state 70
    div_mul              go to state 71
    single_value         go to state 72


State 74

   23 identifiers_list: tID •
   24                 | tID • tASSIGN condition

    tASSIGN  shift, and go to state 103

    $default  reduce using rule 23 (identifiers_list)


State 75

   22 declaration: variable_type identifiers_list • tSEMI
   25 identifiers_list: identifiers_list • tCOMMA tID
   26                 | identifiers_list • tCOMMA tID tASSIGN condition

    tSEMI   shift, and go to state 104
    tCOMMA  shift, and go to state 105


State 76

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex $@3 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE • action-dec action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 106


State 77

   21 declaration_list: declaration_list declaration •

    $default  reduce using rule 21 (declaration_list)


State 78

   19 body: declaration_list instruction_list •
   28 instruction_list: instruction_list • instruction

    tIF      shift, and go to state 41
    tWHILE   shift, and go to state 42
    tPRINT   shift, and go to state 43
    tRETURN  shift, and go to state 44
    tID      shift, and go to state 45

    $default  reduce using rule 19 (body)

    instruction      go to state 79
    assignment_list  go to state 52
    assignment       go to state 53
    ifblock          go to state 54
    ifpart           go to state 55
    whileblock       go to state 56
    printblock       go to state 57
    returnblock      go to state 58


State 79

   28 instruction_list: instruction_list instruction •

    $default  reduce using rule 28 (instruction_list)


State 80

   48 assignment_list: assignment tSEMI •

    $default  reduce using rule 48 (assignment_list)


State 81

   49 assignment_list: assignment tCOMMA • assignment_list

    tID  shift, and go to state 45

    assignment_list  go to state 107
    assignment       go to state 53


State 82

   52 ifblock: ifpart tELSE • action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex action-dec
   53        | ifpart tELSE • action-else action-getIndex action-inc ifblock action-getIndex action-dec

    $default  reduce using rule 56 (action-else)

    action-else  go to state 108


State 83

   39 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE • action-dec $@2 action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 109


State 84

   54 ifpart: tIF tLPAR condition • tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex action-dec
   63 condition: condition • tAND condition
   64          | condition • tOR condition

    tAND   shift, and go to state 89
    tOR    shift, and go to state 90
    tRPAR  shift, and go to state 110


State 85

   58 whileblock: tWHILE tLPAR action-getIndex • condition tRPAR action-while action-inc tLBRACE body tRBRACE $@4 action-dec

    tNOT  shift, and go to state 63
    tNB   shift, and go to state 64
    tID   shift, and go to state 65

    functionCall         go to state 66
    condition            go to state 111
    equality_expression  go to state 68
    compare              go to state 69
    add_sub              go to state 70
    div_mul              go to state 71
    single_value         go to state 72


State 86

   60 printblock: tPRINT tLPAR condition • tRPAR tSEMI
   63 condition: condition • tAND condition
   64          | condition • tOR condition

    tAND   shift, and go to state 89
    tOR    shift, and go to state 90
    tRPAR  shift, and go to state 112


State 87

   63 condition: condition • tAND condition
   64          | condition • tOR condition
   65          | tNOT condition •

    $default  reduce using rule 65 (condition)


State 88

   40 functionCall: tID tLPAR • action-call0 action-call1 argument_list tRPAR action-getIndex

    $default  reduce using rule 41 (action-call0)

    action-call0  go to state 113


State 89

   63 condition: condition tAND • condition

    tNOT  shift, and go to state 63
    tNB   shift, and go to state 64
    tID   shift, and go to state 65

    functionCall         go to state 66
    condition            go to state 114
    equality_expression  go to state 68
    compare              go to state 69
    add_sub              go to state 70
    div_mul              go to state 71
    single_value         go to state 72


State 90

   64 condition: condition tOR • condition

    tNOT  shift, and go to state 63
    tNB   shift, and go to state 64
    tID   shift, and go to state 65

    functionCall         go to state 66
    condition            go to state 115
    equality_expression  go to state 68
    compare              go to state 69
    add_sub              go to state 70
    div_mul              go to state 71
    single_value         go to state 72


State 91

   61 returnblock: tRETURN condition tSEMI •

    $default  reduce using rule 61 (returnblock)


State 92

   68 equality_expression: equality_expression tNE • compare

    tNB  shift, and go to state 64
    tID  shift, and go to state 65

    functionCall  go to state 66
    compare       go to state 116
    add_sub       go to state 70
    div_mul       go to state 71
    single_value  go to state 72


State 93

   67 equality_expression: equality_expression tEQ • compare

    tNB  shift, and go to state 64
    tID  shift, and go to state 65

    functionCall  go to state 66
    compare       go to state 117
    add_sub       go to state 70
    div_mul       go to state 71
    single_value  go to state 72


State 94

   70 compare: compare tLT • add_sub

    tNB  shift, and go to state 64
    tID  shift, and go to state 65

    functionCall  go to state 66
    add_sub       go to state 118
    div_mul       go to state 71
    single_value  go to state 72


State 95

   71 compare: compare tGT • add_sub

    tNB  shift, and go to state 64
    tID  shift, and go to state 65

    functionCall  go to state 66
    add_sub       go to state 119
    div_mul       go to state 71
    single_value  go to state 72


State 96

   73 compare: compare tGE • add_sub

    tNB  shift, and go to state 64
    tID  shift, and go to state 65

    functionCall  go to state 66
    add_sub       go to state 120
    div_mul       go to state 71
    single_value  go to state 72


State 97

   72 compare: compare tLE • add_sub

    tNB  shift, and go to state 64
    tID  shift, and go to state 65

    functionCall  go to state 66
    add_sub       go to state 121
    div_mul       go to state 71
    single_value  go to state 72


State 98

   75 add_sub: add_sub tADD • div_mul

    tNB  shift, and go to state 64
    tID  shift, and go to state 65

    functionCall  go to state 66
    div_mul       go to state 122
    single_value  go to state 72


State 99

   76 add_sub: add_sub tSUB • div_mul

    tNB  shift, and go to state 64
    tID  shift, and go to state 65

    functionCall  go to state 66
    div_mul       go to state 123
    single_value  go to state 72


State 100

   78 div_mul: div_mul tMUL • single_value

    tNB  shift, and go to state 64
    tID  shift, and go to state 65

    functionCall  go to state 66
    single_value  go to state 124


State 101

   79 div_mul: div_mul tDIV • single_value

    tNB  shift, and go to state 64
    tID  shift, and go to state 65

    functionCall  go to state 66
    single_value  go to state 125


State 102

   50 assignment: tID tASSIGN condition •
   63 condition: condition • tAND condition
   64          | condition • tOR condition

    tAND  shift, and go to state 89
    tOR   shift, and go to state 90

    $default  reduce using rule 50 (assignment)


State 103

   24 identifiers_list: tID tASSIGN • condition

    tNOT  shift, and go to state 63
    tNB   shift, and go to state 64
    tID   shift, and go to state 65

    functionCall         go to state 66
    condition            go to state 126
    equality_expression  go to state 68
    compare              go to state 69
    add_sub              go to state 70
    div_mul              go to state 71
    single_value         go to state 72


State 104

   22 declaration: variable_type identifiers_list tSEMI •

    $default  reduce using rule 22 (declaration)


State 105

   25 identifiers_list: identifiers_list tCOMMA • tID
   26                 | identifiers_list tCOMMA • tID tASSIGN condition

    tID  shift, and go to state 127


State 106

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex $@3 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 128


State 107

   49 assignment_list: assignment tCOMMA assignment_list •

    $default  reduce using rule 49 (assignment_list)


State 108

   52 ifblock: ifpart tELSE action-else • action-getIndex action-inc tLBRACE body tRBRACE action-getIndex action-dec
   53        | ifpart tELSE action-else • action-getIndex action-inc ifblock action-getIndex action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 129


State 109

   39 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec • $@2 action-dec

    $default  reduce using rule 38 ($@2)

    $@2  go to state 130


State 110

   54 ifpart: tIF tLPAR condition tRPAR • action-if action-inc tLBRACE body tRBRACE action-getIndex action-dec

    $default  reduce using rule 55 (action-if)

    action-if  go to state 131


State 111

   58 whileblock: tWHILE tLPAR action-getIndex condition • tRPAR action-while action-inc tLBRACE body tRBRACE $@4 action-dec
   63 condition: condition • tAND condition
   64          | condition • tOR condition

    tAND   shift, and go to state 89
    tOR    shift, and go to state 90
    tRPAR  shift, and go to state 132


State 112

   60 printblock: tPRINT tLPAR condition tRPAR • tSEMI

    tSEMI  shift, and go to state 133


State 113

   40 functionCall: tID tLPAR action-call0 • action-call1 argument_list tRPAR action-getIndex

    $default  reduce using rule 42 (action-call1)

    action-call1  go to state 134


State 114

   63 condition: condition • tAND condition
   63          | condition tAND condition •
   64          | condition • tOR condition

    $default  reduce using rule 63 (condition)


State 115

   63 condition: condition • tAND condition
   64          | condition • tOR condition
   64          | condition tOR condition •

    $default  reduce using rule 64 (condition)


State 116

   68 equality_expression: equality_expression tNE compare •
   70 compare: compare • tLT add_sub
   71        | compare • tGT add_sub
   72        | compare • tLE add_sub
   73        | compare • tGE add_sub

    tLT  shift, and go to state 94
    tGT  shift, and go to state 95
    tGE  shift, and go to state 96
    tLE  shift, and go to state 97

    $default  reduce using rule 68 (equality_expression)


State 117

   67 equality_expression: equality_expression tEQ compare •
   70 compare: compare • tLT add_sub
   71        | compare • tGT add_sub
   72        | compare • tLE add_sub
   73        | compare • tGE add_sub

    tLT  shift, and go to state 94
    tGT  shift, and go to state 95
    tGE  shift, and go to state 96
    tLE  shift, and go to state 97

    $default  reduce using rule 67 (equality_expression)


State 118

   70 compare: compare tLT add_sub •
   75 add_sub: add_sub • tADD div_mul
   76        | add_sub • tSUB div_mul

    tADD  shift, and go to state 98
    tSUB  shift, and go to state 99

    $default  reduce using rule 70 (compare)


State 119

   71 compare: compare tGT add_sub •
   75 add_sub: add_sub • tADD div_mul
   76        | add_sub • tSUB div_mul

    tADD  shift, and go to state 98
    tSUB  shift, and go to state 99

    $default  reduce using rule 71 (compare)


State 120

   73 compare: compare tGE add_sub •
   75 add_sub: add_sub • tADD div_mul
   76        | add_sub • tSUB div_mul

    tADD  shift, and go to state 98
    tSUB  shift, and go to state 99

    $default  reduce using rule 73 (compare)


State 121

   72 compare: compare tLE add_sub •
   75 add_sub: add_sub • tADD div_mul
   76        | add_sub • tSUB div_mul

    tADD  shift, and go to state 98
    tSUB  shift, and go to state 99

    $default  reduce using rule 72 (compare)


State 122

   75 add_sub: add_sub tADD div_mul •
   78 div_mul: div_mul • tMUL single_value
   79        | div_mul • tDIV single_value

    tMUL  shift, and go to state 100
    tDIV  shift, and go to state 101

    $default  reduce using rule 75 (add_sub)


State 123

   76 add_sub: add_sub tSUB div_mul •
   78 div_mul: div_mul • tMUL single_value
   79        | div_mul • tDIV single_value

    tMUL  shift, and go to state 100
    tDIV  shift, and go to state 101

    $default  reduce using rule 76 (add_sub)


State 124

   78 div_mul: div_mul tMUL single_value •

    $default  reduce using rule 78 (div_mul)


State 125

   79 div_mul: div_mul tDIV single_value •

    $default  reduce using rule 79 (div_mul)


State 126

   24 identifiers_list: tID tASSIGN condition •
   63 condition: condition • tAND condition
   64          | condition • tOR condition

    tAND  shift, and go to state 89
    tOR   shift, and go to state 90

    $default  reduce using rule 24 (identifiers_list)


State 127

   25 identifiers_list: identifiers_list tCOMMA tID •
   26                 | identifiers_list tCOMMA tID • tASSIGN condition

    tASSIGN  shift, and go to state 135

    $default  reduce using rule 25 (identifiers_list)


State 128

   47 main_function: function_type tMAIN action-inc action-fun action-getIndex $@3 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec action-dec •

    $default  reduce using rule 47 (main_function)


State 129

   52 ifblock: ifpart tELSE action-else action-getIndex • action-inc tLBRACE body tRBRACE action-getIndex action-dec
   53        | ifpart tELSE action-else action-getIndex • action-inc ifblock action-getIndex action-dec

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 136


State 130

   39 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec $@2 • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 137


State 131

   54 ifpart: tIF tLPAR condition tRPAR action-if • action-inc tLBRACE body tRBRACE action-getIndex action-dec

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 138


State 132

   58 whileblock: tWHILE tLPAR action-getIndex condition tRPAR • action-while action-inc tLBRACE body tRBRACE $@4 action-dec

    $default  reduce using rule 59 (action-while)

    action-while  go to state 139


State 133

   60 printblock: tPRINT tLPAR condition tRPAR tSEMI •

    $default  reduce using rule 60 (printblock)


State 134

   40 functionCall: tID tLPAR action-call0 action-call1 • argument_list tRPAR action-getIndex

    tNOT  shift, and go to state 63
    tNB   shift, and go to state 64
    tID   shift, and go to state 65

    $default  reduce using rule 43 (argument_list)

    functionCall         go to state 66
    argument_list        go to state 140
    condition            go to state 141
    equality_expression  go to state 68
    compare              go to state 69
    add_sub              go to state 70
    div_mul              go to state 71
    single_value         go to state 72


State 135

   26 identifiers_list: identifiers_list tCOMMA tID tASSIGN • condition

    tNOT  shift, and go to state 63
    tNB   shift, and go to state 64
    tID   shift, and go to state 65

    functionCall         go to state 66
    condition            go to state 142
    equality_expression  go to state 68
    compare              go to state 69
    add_sub              go to state 70
    div_mul              go to state 71
    single_value         go to state 72


State 136

   52 ifblock: ifpart tELSE action-else action-getIndex action-inc • tLBRACE body tRBRACE action-getIndex action-dec
   53        | ifpart tELSE action-else action-getIndex action-inc • ifblock action-getIndex action-dec

    tLBRACE  shift, and go to state 143
    tIF      shift, and go to state 41

    ifblock  go to state 144
    ifpart   go to state 55


State 137

   39 function: function_type tID action-inc action-fun action-getIndex $@1 tLPAR parameter_list tRPAR tLBRACE action-inc body tRBRACE action-dec $@2 action-dec •

    $default  reduce using rule 39 (function)


State 138

   54 ifpart: tIF tLPAR condition tRPAR action-if action-inc • tLBRACE body tRBRACE action-getIndex action-dec

    tLBRACE  shift, and go to state 145


State 139

   58 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while • action-inc tLBRACE body tRBRACE $@4 action-dec

    $default  reduce using rule 1 (action-inc)

    action-inc  go to state 146


State 140

   40 functionCall: tID tLPAR action-call0 action-call1 argument_list • tRPAR action-getIndex
   44 argument_list: argument_list • tCOMMA condition

    tRPAR   shift, and go to state 147
    tCOMMA  shift, and go to state 148


State 141

   45 argument_list: condition •
   63 condition: condition • tAND condition
   64          | condition • tOR condition

    tAND  shift, and go to state 89
    tOR   shift, and go to state 90

    $default  reduce using rule 45 (argument_list)


State 142

   26 identifiers_list: identifiers_list tCOMMA tID tASSIGN condition •
   63 condition: condition • tAND condition
   64          | condition • tOR condition

    tAND  shift, and go to state 89
    tOR   shift, and go to state 90

    $default  reduce using rule 26 (identifiers_list)


State 143

   52 ifblock: ifpart tELSE action-else action-getIndex action-inc tLBRACE • body tRBRACE action-getIndex action-dec

    tIF      shift, and go to state 41
    tWHILE   shift, and go to state 42
    tPRINT   shift, and go to state 43
    tRETURN  shift, and go to state 44
    tINT     shift, and go to state 25
    tID      shift, and go to state 45

    $default  reduce using rule 16 (body)

    variable_type     go to state 46
    body              go to state 149
    declaration_list  go to state 48
    declaration       go to state 49
    instruction_list  go to state 50
    instruction       go to state 51
    assignment_list   go to state 52
    assignment        go to state 53
    ifblock           go to state 54
    ifpart            go to state 55
    whileblock        go to state 56
    printblock        go to state 57
    returnblock       go to state 58


State 144

   53 ifblock: ifpart tELSE action-else action-getIndex action-inc ifblock • action-getIndex action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 150


State 145

   54 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE • body tRBRACE action-getIndex action-dec

    tIF      shift, and go to state 41
    tWHILE   shift, and go to state 42
    tPRINT   shift, and go to state 43
    tRETURN  shift, and go to state 44
    tINT     shift, and go to state 25
    tID      shift, and go to state 45

    $default  reduce using rule 16 (body)

    variable_type     go to state 46
    body              go to state 151
    declaration_list  go to state 48
    declaration       go to state 49
    instruction_list  go to state 50
    instruction       go to state 51
    assignment_list   go to state 52
    assignment        go to state 53
    ifblock           go to state 54
    ifpart            go to state 55
    whileblock        go to state 56
    printblock        go to state 57
    returnblock       go to state 58


State 146

   58 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc • tLBRACE body tRBRACE $@4 action-dec

    tLBRACE  shift, and go to state 152


State 147

   40 functionCall: tID tLPAR action-call0 action-call1 argument_list tRPAR • action-getIndex

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 153


State 148

   44 argument_list: argument_list tCOMMA • condition

    tNOT  shift, and go to state 63
    tNB   shift, and go to state 64
    tID   shift, and go to state 65

    functionCall         go to state 66
    condition            go to state 154
    equality_expression  go to state 68
    compare              go to state 69
    add_sub              go to state 70
    div_mul              go to state 71
    single_value         go to state 72


State 149

   52 ifblock: ifpart tELSE action-else action-getIndex action-inc tLBRACE body • tRBRACE action-getIndex action-dec

    tRBRACE  shift, and go to state 155


State 150

   53 ifblock: ifpart tELSE action-else action-getIndex action-inc ifblock action-getIndex • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 156


State 151

   54 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body • tRBRACE action-getIndex action-dec

    tRBRACE  shift, and go to state 157


State 152

   58 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE • body tRBRACE $@4 action-dec

    tIF      shift, and go to state 41
    tWHILE   shift, and go to state 42
    tPRINT   shift, and go to state 43
    tRETURN  shift, and go to state 44
    tINT     shift, and go to state 25
    tID      shift, and go to state 45

    $default  reduce using rule 16 (body)

    variable_type     go to state 46
    body              go to state 158
    declaration_list  go to state 48
    declaration       go to state 49
    instruction_list  go to state 50
    instruction       go to state 51
    assignment_list   go to state 52
    assignment        go to state 53
    ifblock           go to state 54
    ifpart            go to state 55
    whileblock        go to state 56
    printblock        go to state 57
    returnblock       go to state 58


State 153

   40 functionCall: tID tLPAR action-call0 action-call1 argument_list tRPAR action-getIndex •

    $default  reduce using rule 40 (functionCall)


State 154

   44 argument_list: argument_list tCOMMA condition •
   63 condition: condition • tAND condition
   64          | condition • tOR condition

    tAND  shift, and go to state 89
    tOR   shift, and go to state 90

    $default  reduce using rule 44 (argument_list)


State 155

   52 ifblock: ifpart tELSE action-else action-getIndex action-inc tLBRACE body tRBRACE • action-getIndex action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 159


State 156

   53 ifblock: ifpart tELSE action-else action-getIndex action-inc ifblock action-getIndex action-dec •

    $default  reduce using rule 53 (ifblock)


State 157

   54 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE • action-getIndex action-dec

    $default  reduce using rule 3 (action-getIndex)

    action-getIndex  go to state 160


State 158

   58 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body • tRBRACE $@4 action-dec

    tRBRACE  shift, and go to state 161


State 159

   52 ifblock: ifpart tELSE action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 162


State 160

   54 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 163


State 161

   58 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE • $@4 action-dec

    $default  reduce using rule 57 ($@4)

    $@4  go to state 164


State 162

   52 ifblock: ifpart tELSE action-else action-getIndex action-inc tLBRACE body tRBRACE action-getIndex action-dec •

    $default  reduce using rule 52 (ifblock)


State 163

   54 ifpart: tIF tLPAR condition tRPAR action-if action-inc tLBRACE body tRBRACE action-getIndex action-dec •

    $default  reduce using rule 54 (ifpart)


State 164

   58 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE $@4 • action-dec

    $default  reduce using rule 2 (action-dec)

    action-dec  go to state 165


State 165

   58 whileblock: tWHILE tLPAR action-getIndex condition tRPAR action-while action-inc tLBRACE body tRBRACE $@4 action-dec •

    $default  reduce using rule 58 (whileblock)
